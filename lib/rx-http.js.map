{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 23f25a177587566afde4","webpack:///external {\"root\":\"_\",\"commonjs2\":[\"lodash\"],\"commonjs\":\"lodash\",\"amd\":\"lodash\"}","webpack:///./src/utilities.js","webpack:///./src/errors.js","webpack:///./src/interceptor.js","webpack:///./src/serializer.js","webpack:///./src/url.js","webpack:///./src/path.js","webpack:///./src/headers.js","webpack:///./src/interceptors/index.js","webpack:///./src/serializers/index.js","webpack:///./src/providers/browser/index.js","webpack:///./src/providers/browser/xhr/index.js","webpack:///./src/serializers/form-data-serializer.js","webpack:///./src/serializers/json-serializer.js","webpack:///./src/serializers/text-serializer.js","webpack:///./src/http.js","webpack:///./src/providers/index.js","webpack:///./src/index.js","webpack:///./src/interceptors/body-transformer.js","webpack:///./src/interceptors/error-handling.js","webpack:///./src/interceptors/method-override.js","webpack:///./src/interceptors/xsrf.js","webpack:///./src/providers/browser/xhr/xhr-builder.js","webpack:///./src/request-interceptor-chain.js","webpack:///./src/request.js","webpack:///./src/response-interceptor-chain.js","webpack:///./src/response.js","webpack:///./src/serializers/default-serializer.js","webpack:///external {\"root\":\"Cookies\",\"commonjs2\":[\"js-cookie\"],\"commonjs\":\"js-cookie\",\"amd\":\"js-cookie\"}","webpack:///external {\"root\":\"Rx\",\"commonjs2\":[\"rxjs\"],\"commonjs\":\"rxjs\",\"amd\":\"rxjs\"}"],"names":["isFile","isFormData","isBlob","isNonEmptyString","isValidPort","property","mapProperty","parseHeaders","parseUri","value","toString","call","trim","name","member","isValid","val","get","set","PropertyValidationError","existing","rawHeaders","headers","headerLines","split","forEach","line","idx","indexOf","headerName","substring","headerValue","str","o","options","m","parser","strictMode","exec","uri","i","key","q","replace","$0","$1","$2","strict","loose","CustomError","message","constructor","stack","Error","prototype","Object","create","NotImplementedError","ConnectionError","url","msg","NoSerializerFoundError","contentType","NoDeserializerFoundError","Interceptor","request","accept","reject","error","response","Serializer","encode","encodeURIComponent","_protocol","WeakMap","_user","_password","_host","_port","_directory","_file","_fragment","_query","Url","parts","protocol","user","password","host","port","directory","file","fragment","query","isAbsolute","u","p","pr","ui","userInfo","h","dir","f","join","other","copied","assign","otherParts","propertiesToMerge","serializeQuery","auth","authority","path","querySerializer","fullyQualified","queryParts","accum","pair","push","fullyQualifiedWithQuery","factory","parsed","result","separator","initial","arguments","args","slice","joined","CONTENT_TYPE","TRANSFER_ENCODING","MethodOverride","BodyTransformer","XSRF","ErrorHandling","provider","XHRProvider","interceptors","attempt","observable","offset","body","Subject","uploadProgress","downloadProgress","all","failed","responseError","err","complete","completeAll","errorAll","nextChunk","chunk","xhr","responseText","length","next","onHeadersReceived","evt","status","statusText","getAllResponseHeaders","responseChain","transformedResponse","run","onUploadProgress","onDownloadProgress","isChunked","onLoad","onError","onAbort","onLoadEnd","build","success","transformed","send","requestChain","Observable","FormDataSerializer","FormData","append","entries","entry","JsonSerializer","JSON","stringify","TextSerializer","generateRequestMethod","method","_baseUrl","_timeout","_headers","_xsrfCookieName","_xsrfHeaderName","_withCredentials","_interceptors","_provider","Http","baseUrl","timeout","xsrfCookieName","xsrfHeaderName","withCredentials","defaults","values","interceptor","current","updated","filter","self","fullUrl","opts","Browser","XHR","Headers","Interceptors","Errors","Serializers","Providers","serializer","serialize","bodyTransformer","Math","floor","errorHandling","BROWSER_METHODS","originalMethod","some","methodOverride","xsrfToken","xsrfHeader","xsrf","STATE","UNSENT","OPEN","HEADERS_RECEIVED","LOADING","DONE","XHRBuilder","headersReceived","progress","abort","load","loadEnd","fn","req","XMLHttpRequest","credentials","btoa","responseType","upload","addEventListener","readyState","open","keys","setRequestHeader","RequestInterceptorChain","failure","remaining","recover","step","rest","xs","transform","requestError","_method","_responseType","_body","_serializer","_url","Request","currentEntry","find","header","toLowerCase","currentSerializer","Default","newUrl","currentUrl","merge","ResponseInterceptorChain","_status","_statusText","_uploadProgress","_downloadProgress","_isChunked","evaluateLazy","Response","has","transferEncoding","c","window","chrome","loadTimes","chromeSpdy","wasFetchedViaSpdy","ffSpdy","contentTypeSerializers","autoDetect","DefaultSerializer","delegate"],"mappings":"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","file":"rx-http.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"lodash\"), require(\"js-cookie\"), require(\"rxjs\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"rx-http\", [\"lodash\", \"js-cookie\", \"rxjs\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"rx-http\"] = factory(require(\"lodash\"), require(\"js-cookie\"), require(\"rxjs\"));\n\telse\n\t\troot[\"rx-http\"] = factory(root[\"_\"], root[\"Cookies\"], root[\"Rx\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_28__, __WEBPACK_EXTERNAL_MODULE_29__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 17);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 23f25a177587566afde4","module.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"_\",\"commonjs2\":[\"lodash\"],\"commonjs\":\"lodash\",\"amd\":\"lodash\"}\n// module id = 0\n// module chunks = 0","import { isString, isObject, isEmpty, isUndefined, isInteger, assign } from 'lodash';\nimport Errors from 'errors';\n\n/** @private **/\nexport function isFile(value) {\n  return toString.call(value) === '[object File]';\n}\n\n/** @private **/\nexport function isFormData(value) {\n  return toString.call(value) === '[object FormData]';\n}\n\n/** @private **/\nexport function isBlob(value) {\n  return toString.call(value) === '[object Blob]';\n}\n\n/** @private **/\nexport function isNonEmptyString(value) {\n  return isString(value) && !isEmpty(value.trim());\n}\n\nexport function isValidPort(value) {\n  return (isInteger(value) && value > 0) || isNonEmptyString(value);\n}\n\n/** @private **/\nexport function property(name, member, value, isValid = (val) => true) {\n  if (isUndefined(value)) {\n    return member.get(this);\n  }\n\n  if (isValid(value)) {\n    member.set(this, value);\n    return this;\n  } else {\n    throw new Errors.PropertyValidationError(name, value);\n  }\n}\n\n/** @private **/\nexport function mapProperty(member, name, value) {\n  if (!isUndefined(name)) {\n    if (isUndefined(value)) {\n      if (isObject(name)) {\n        // 'name' is actually the entire hash to be set\n        member.set(this, name);\n        return this;\n      }\n      // name is the string key to get the value of\n      return member.get(this)[name];\n    }\n    // 'name' and 'value' were both given.  Set the 'name' key to the new value\n    const existing = member.get(this);\n    existing[name] = value;\n    member.set(this, existing);\n    return this;\n  }\n\n  // no name or value given, return a copy of the hash\n  return assign({}, member.get(this));\n}\n\n/** @private **/\nexport function parseHeaders(rawHeaders) {\n  const headers = {};\n  if (rawHeaders) {\n    const headerLines = rawHeaders.split('\\u000d\\u000a');\n    headerLines.forEach((line) => {\n      const idx = line.indexOf(':');\n      if (idx > 0) {\n        const headerName = line.substring(0, idx);\n        const headerValue = line.substring(idx + 2);\n        headers[headerName] = headerValue;\n      }\n    });\n  }\n  return headers;\n}\n\n\n/** parseUri 1.2.2\n * (c) Steven Levithan <stevenlevithan.com>\n * MIT License\n * @private\n */\nexport function parseUri(str) {\n  let\to = parseUri.options;\n  let m = o.parser[o.strictMode ? 'strict' : 'loose'].exec(str);\n  let uri = {};\n  let i = 14;\n\n  while (i--) uri[o.key[i]] = m[i] || '';\n\n  uri[o.q.name] = {};\n  uri[o.key[12]].replace(o.q.parser, function ($0, $1, $2) {\n    if ($1) uri[o.q.name][$1] = $2;\n  });\n\n  return uri;\n};\n\nparseUri.options = {\n  strictMode: false,\n  key: [\n    'source',\n    'protocol',\n    'authority',\n    'userInfo',\n    'user',\n    'password',\n    'host',\n    'port',\n    'relative',\n    'path',\n    'directory',\n    'file',\n    'search',\n    'fragment'\n  ],\n  q: {\n    name: 'query',\n    parser: /(?:^|&)([^&=]*)=?([^&]*)/g\n  },\n  parser: {\n    strict: /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?))?((((?:[^?#\\/]*\\/)*)([^?#]*))(?:\\?([^#]*))?(?:#(.*))?)/,\n    loose: /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/utilities.js","class CustomError {\n  constructor(message) {\n    this.name = this.constructor.name;\n    this.message = message;\n    this.stack = (new Error(message)).stack;\n  }\n}\nCustomError.prototype = Object.create(Error.prototype);\nCustomError.prototype.constructor = CustomError;\n\n/**\n * @class\n * @name NotImplementedError\n */\nclass NotImplementedError extends CustomError {\n  constructor(message = 'Not Implemented') {\n    super(message);\n  }\n}\n\n/**\n * @class\n * @name ConnectionError\n */\nclass ConnectionError extends CustomError {\n  constructor(url, message) {\n    super(message || `Error connecting to ${url}`);\n    this.url = url;\n  }\n}\n\n/**\n * @class\n * @name PropertyValidationError\n */\nclass PropertyValidationError extends CustomError {\n  /**\n   * @constructor\n   * @param {String} - property name\n   * @param value\n   */\n  constructor(property, value, msg) {\n    const message = msg || `Value ${value} is not valid for property ${property}`;\n    super(message);\n    this.property = property;\n    this.value = value;\n  }\n}\n\n/**\n * @class\n * @name NoSerializerFoundError\n */\nclass NoSerializerFoundError extends CustomError {\n  constructor(contentType) {\n    super(`No serializer found for content type ${contentType}`);\n    this.contentType = contentType;\n  }\n}\n\n/**\n * @class\n * @name NoDeserializerFoundError\n */\nclass NoDeserializerFoundError extends CustomError {\n  constructor(contentType) {\n    super(`No deserializer found for content type ${contentType}`);\n    this.contentType = contentType;\n  }\n}\n\nexport default {\n  NotImplementedError,\n  ConnectionError,\n  PropertyValidationError,\n  NoSerializerFoundError,\n  NoDeserializerFoundError\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/errors.js","/**\n * Base class to be inherited by Interceptors\n * @class\n * @name Interceptor\n */\nexport default class Interceptor {\n  /**\n   * Transforms (or fails) an outgoing request.\n   * @method\n   * @name request\n   * @param {Request} request - The request to be processed\n   * @param {Function<Request>} accept - called on success to process a (potentially transformed) {@link Request}\n   * @param {Function} reject - called on failure to pass an error\n   */\n  request(request, accept, reject) {\n    accept(request);\n  }\n\n\n  /**\n   * Try to recover from a request error so processing can resume.\n   * @method\n   * @name requestError\n   * @param error - The error to be processed\n   * @param {Function} accept - called on success if we were able to recover\n   * @param {Function} reject - called on failure to pass an error\n   */\n  requestError(error, accept, reject) {\n    reject(error);\n  }\n\n  /**\n   * @method\n   * @name response\n   * @param {Response} response - The response to be processed\n   * @param {Function<Response>} accept - called on success to process a (potentially transformed) {@link Response}\n   * @param {Function} reject - called on failure to pass an error\n   */\n  response(response, accept, reject) {\n    accept(response);\n  }\n\n  /**\n   * Try to recover from a response error so processing can resume.\n   * @method\n   * @name responseError\n   * @param error - The error to be processed\n   * @param {Function} accept - called on success if we were able to recover\n   * @param {Function} reject - called on failure to pass an error\n   */\n  responseError(error, accept, reject) {\n    reject(error);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/interceptor.js","import Errors from './errors';\n\n/**\n * Base class for {@link Request} body serializers\n * @class\n * @name Serializer\n */\nexport default class Serializer {\n  /**\n   * @constructor\n   * @param {String} [contentType] - The value of the Content-Type header\n   */\n  constructor(contentType) {\n    if (!!contentType) this.contentType = contentType;\n  }\n\n  /**\n   * @method\n   * @name serialize\n   * @param value - The content to be serialized\n   * @returns - The serialized content\n   */\n  serialize(value) {\n    throw new Errors.NotImplementedError();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/serializer.js","import {\n  isObject,\n  isString,\n  isUndefined,\n  isEmpty,\n  reduce,\n  endsWith,\n  startsWith,\n  identity,\n  cloneDeep\n} from 'lodash';\nimport Path from './path';\nimport { parseUri, isNonEmptyString, isValidPort, property, mapProperty } from './utilities';\n\nfunction encode(val) {\n  return encodeURIComponent(val)\n    .replace(/%40/gi, '@')\n    .replace(/%3A/gi, ':')\n    .replace(/%24/g, '$')\n    .replace(/%2C/gi, ',')\n    .replace(/%20/g, '+')\n    .replace(/%5B/gi, '[')\n    .replace(/%5D/gi, ']');\n}\n\nconst _protocol = new WeakMap();\nconst _user = new WeakMap();\nconst _password = new WeakMap();\nconst _host = new WeakMap();\nconst _port = new WeakMap();\nconst _directory = new WeakMap();\nconst _file = new WeakMap();\nconst _fragment = new WeakMap();\nconst _query = new WeakMap();\n\n/**\n * @class\n * @name Url\n * @param {Object} parts\n */\nclass Url {\n  /**\n   * @constructor\n   * @param {Object} parts\n   */\n  constructor(parts = {}) {\n    if (!!parts.protocol) this.protocol(parts.protocol);\n    if (!!parts.user) this.user(parts.user);\n    if (!!parts.password) this.password(parts.password);\n    if (!!parts.host) this.host(parts.host);\n    if (!!parts.port) this.port(parts.port);\n    if (!!parts.directory) this.directory(parts.directory);\n    if (!!parts.file) this.file(parts.file);\n    if (!!parts.fragment) this.fragment(parts.fragment);\n    this.query(parts.query || {});\n  }\n\n  /**\n   * @method\n   * @name protocol\n   * @param {String} [value]\n   * @returns {Url|String} - If value is specified, sets the protocol for the url\n   * and returns the current instance.  If value is ommitted, returns the\n   * current protocol.\n   */\n  protocol(value) {\n    return property.call(this, 'protocol', _protocol, value, isNonEmptyString);\n  }\n\n  /**\n   * @method\n   * @name user\n   * @param {String} [value]\n   * @returns {Url|String} - If value is specified, sets the user and returns\n   * the current instance.  If value is ommitted, returns the current user.\n   */\n  user(value) {\n    return property.call(this, 'user', _user, value, isNonEmptyString);\n  }\n\n  /**\n   * @method\n   * @name password\n   * @param {String} [value]\n   * @returns {Url|String} - If value is specified, sets the password and returns\n   * the current instance.  If value is ommitted, returns the current password.\n   */\n  password(value) {\n    return property.call(this, 'password', _password, value, isNonEmptyString);\n  }\n\n  /**\n   * @method\n   * @name host\n   * @param {String} [value]\n   * @returns {Url|String} - If value is specified, sets the host and returns\n   * the current instance.  If value is ommitted, returns the current host.\n   */\n  host(value) {\n    return property.call(this, 'host', _host, value, isNonEmptyString);\n  }\n\n  /**\n   * @method\n   * @name port\n   * @param {String|Number} [value]\n   * @returns {Url|String|Number} - If value is specified, sets the port and returns\n   * the current instance.  If value is ommitted, returns the current port.\n   */\n  port(value) {\n    return property.call(this, 'port', _port, value, isValidPort);\n  }\n\n  /**\n   * @method\n   * @name directory\n   * @param {String} [value]\n   * @returns {Url|String} - If value is specified, sets the directory and returns\n   * the current instance.  If value is ommitted, returns the current directory.\n   */\n  directory(value) {\n    return property.call(this, 'directory', _directory, value, isString);\n  }\n\n  /**\n   * @method\n   * @name file\n   * @param {String} [value]\n   * @returns {Url|String} - If value is specified, sets the file and returns\n   * the current instance.  If value is ommitted, returns the current file.\n   */\n  file(value) {\n    return property.call(this, 'file', _file, value, isString);\n  }\n\n  /**\n   * @method\n   * @name fragment\n   * @param {String} [value]\n   * @returns {Url|String} - If value is specified, sets the fragment and returns\n   * the current instance.  If value is ommitted, returns the current fragment.\n   */\n  fragment(value) {\n    return property.call(this, 'fragment', _fragment, value, isString);\n  }\n\n  /**\n   * @method\n   * @name isAbsolute\n   * @returns {Boolean} - true if the url is absolute, false if it is relative.\n   */\n  isAbsolute() {\n    return !!this.host();\n  }\n\n  /**\n   * @method\n   * @name isRelative\n   * @returns {Boolean} - true if the url is relative, false if it is absolute.\n   */\n  isRelative() {\n    return !this.isAbsolute();\n  }\n\n  /**\n   * @method\n   * @name query\n   * @param {String|Object} [name] - The name of the query-string parameter\n   * @param [value] - The value of the query-string parameter\n   * @returns {Object|String|Request} -\n   * If no parameters are specified - returns a copy of the entire query hash.\n   * @example\n   * request.query() // returns { \"foo\": \"bar\" }\n   * If only name is specified, and name is a string - returns the value for the key in the query hash.\n   * @example\n   * request.query(\"foo\") // returns \"bar\"\n   * If only name is specified, and name is an object - replaces the entire query hash\n   * and returns the current Request.\n   * @example\n   * request.query({ \"foo\": \"bar\", \"baz\": 1 }).execute()\n   * If name and value are specified - sets the value of name in the query hash\n   * and returns the current Request.\n   * @example\n   * request.query(\"foo\", \"bar\").execute()\n   */\n  query(name, value) {\n    return mapProperty.call(this, _query, name, value);\n  }\n\n  /**\n   * @method\n   * @name userInfo\n   * @returns {String} - returns basic auth credentials in the format\n   * user:password, if both user and password are set.\n   */\n  userInfo() {\n    const u = _user.get(this);\n    const p = _password.get(this);\n\n    if (isNonEmptyString(u) && isNonEmptyString(p)) {\n      return `${u}:${p}`;\n    }\n\n    return null;\n  }\n\n  /**\n   * @method\n   * @name authority\n   * @returns {String} - returns the authority portion of the url ([protocol]://[userInfo@]host[:port])\n   */\n  authority() {\n    const pr = _protocol.get(this) ? `${_protocol.get(this)}://` : '';\n    const ui = this.userInfo() ? `${this.userInfo()}@` : '';\n    const h = _host.get(this) || '';\n    const p = _port.get(this) ? `:${_port.get(this)}` : '';\n\n    return pr + ui + h + p;\n  }\n\n  /**\n   * @method\n   * @name path\n   * @returns {String} - returns the path portion of the url\n   */\n  path() {\n    const dir = _directory.get(this) || '';\n    const f = _file.get(this) || '';\n\n    return Path.join(dir, f);\n  }\n\n  /**\n   * @method\n   * @name merge\n   * @param {Url} other - the {@link Url} to merge into this one\n   * @returns {Url} - returns a copy of this {@link Url} with the directory,\n   * file, gragment, path, and query portions from taken from other.  If\n   * any of those properties do not exist in other, they will be removed\n   * from the copy.\n   */\n  merge(other) {\n    const copied = Object.assign(\n      {},\n      { protocol: _protocol.get(this) },\n      { user: _user.get(this) },\n      { password: _password.get(this) },\n      { host: _host.get(this) },\n      { port: _port.get(this) },\n      { directory: _directory.get(this) },\n      { file: _file.get(this) },\n      { fragment: _fragment.get(this) },\n      { query: _query.get(this) }\n    );\n\n    const otherParts = parseUri(other.toString());\n    const propertiesToMerge = ['directory', 'file', 'fragment', 'query'];\n    propertiesToMerge.forEach((property) => {\n      if (!!otherParts[property]) {\n        copied[property] = otherParts[property];\n      }\n    });\n\n    return new Url(copied);\n  }\n\n  /**\n   * @method\n   * @name toString\n   * @param {Function<Object, String>} serializeQuery - a function that can customize\n   * how the query-string hash is rendered in the resulting url\n   * @returns {String}\n   */\n  toString(serializeQuery) {\n    const auth = this.authority();\n    const p = this.path();\n    const f = this.fragment();\n    const querySerializer = serializeQuery || identity;\n    const q = querySerializer(this.query());\n\n    const fullyQualified = Path.join(auth, p);\n\n    const queryParts = reduce(q, (accum, value, key) => {\n      let pair = `${encode(key)}=${encode(value)}`;\n\n      accum.push(pair);\n      return accum;\n    }, []);\n\n    const fullyQualifiedWithQuery = (() => {\n      if (!isEmpty(queryParts)) {\n        return `${fullyQualified}?${queryParts.join('&')}`;\n      }\n\n      return fullyQualified;\n    })();\n\n    if (!isEmpty(f)) {\n      return `${fullyQualifiedWithQuery}#${f}`;\n    }\n\n    return fullyQualifiedWithQuery;\n  }\n}\n\n/**\n * @function\n * @name factory\n * @param {Object|String} value - A hash containing the Url parts, or a string\n * representation of a Url\n * @returns {Url}\n */\nUrl.factory = (value) => {\n  if (isString(value)) {\n    const parsed = parseUri(value);\n    const result = new Url(parsed);\n    return result;\n  } else {\n    const result = new Url(value);\n    return result;\n  }\n}\n\nexport default Url;\n\n\n\n// WEBPACK FOOTER //\n// ./src/url.js","import { reduce, startsWith, endsWith } from 'lodash';\n\nexport default {\n  separator: '/',\n\n  join() {\n    const separator = this.separator;\n    const initial = arguments[0];\n    const args = [...arguments].slice(1)\n\n    let joined = reduce(args, (accum, value) => {\n      if (value.trim() != '') {\n        if (endsWith(accum, separator) && startsWith(value, separator)) {\n          accum += value.substring(1);\n        } else if (endsWith(accum, separator) || startsWith(value, separator)) {\n          accum += value;\n        } else {\n          accum += '/' + value;\n        }\n      }\n\n      return accum;\n    }, initial);\n\n    while (endsWith(joined, separator)) {\n      joined = joined.slice(0, -1);\n    }\n\n    return joined;\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/path.js","export default {\n\n  CONTENT_TYPE: \"Content-Type\",\n\n  TRANSFER_ENCODING: \"Transfer-Encoding\"\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/headers.js","import { methodOverride } from './method-override';\nimport { bodyTransformer } from './body-transformer';\nimport { xsrf } from './xsrf';\nimport { errorHandling } from './error-handling';\n\nexport default {\n  MethodOverride: methodOverride,\n  BodyTransformer: bodyTransformer,\n  XSRF: xsrf,\n  ErrorHandling: errorHandling\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/interceptors/index.js","import DefaultSerializer from './default-serializer';\nimport FormDataSerializer from './form-data-serializer';\nimport JsonSerializer from './json-serializer';\nimport TextSerializer from './text-serializer';\n\nexport default {\n  'Default': DefaultSerializer,\n  'Form': FormDataSerializer,\n  'Json': JsonSerializer,\n  'Text': TextSerializer\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/serializers/index.js","import XHRProvider from './xhr';\n\nconst provider = (() => {\n  // TODO: Implement FetchProvider and use feature-detection to determine which to use\n  return XHRProvider;\n})();\n\nexport default provider;\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/browser/index.js","import { partial, isInteger } from 'lodash';\nimport Rx from 'rxjs';\nimport XHRBuilder from './xhr-builder';\nimport Response from '../../../response';\nimport RequestInterceptorChain from '../../../request-interceptor-chain';\nimport ResponseInterceptorChain from '../../../response-interceptor-chain';\nimport { parseHeaders } from '../../../utilities';\n\n/** @function\n * Provider-implementation for browser-based clients.  Providers are simply\n * functions that take in a {@link Request} and return an RxJS Observable\n * that eventually contains the {@link Response}.\n * @name XHRProvider\n * @param {Request} request\n * @returns {Observable<Response>}\n */\nexport default function XHRProvider(request) {\n  const interceptors = request.interceptors();\n\n  function attempt(observable) {\n    let response;\n    let offset = 0;\n    let body = new Rx.Subject();\n    let uploadProgress = new Rx.Subject();\n    let downloadProgress = new Rx.Subject();\n    let all = [observable, body, uploadProgress, downloadProgress];\n    let failed = false;\n\n    function responseError(err) {\n      observable.error(err);\n      body.complete();\n      uploadProgress.complete();\n      downloadProgress.complete();\n    }\n\n    function completeAll() {\n      all.forEach(o => o.complete());\n    }\n\n    function errorAll(err) {\n      all.forEach(o => o.error(err));\n    }\n\n    function nextChunk() {\n      let chunk = xhr.responseText.slice(offset);\n      offset = xhr.responseText.length;\n      body.next(chunk);\n    }\n\n    const xhr = new XHRBuilder()\n      .request(request)\n      .onHeadersReceived((evt) => {\n        response = new Response({\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders()),\n          body,\n          uploadProgress,\n          downloadProgress\n        });\n\n        const responseChain = new ResponseInterceptorChain(\n          interceptors,\n          (transformedResponse) => {\n            observable.next(transformedResponse)\n          },\n          (transformedResponse) => {\n            failed = true;\n            responseError(transformedResponse);\n          }\n        );\n\n        responseChain.run(response);\n      })\n      .onUploadProgress((evt) => {\n        uploadProgress.next(evt);\n      })\n      .onDownloadProgress((evt) => {\n        downloadProgress.next(evt);\n        if (response.isChunked()) {\n          nextChunk();\n        }\n      })\n      .onLoad((evt) => {\n        if (!failed) {\n          if (response.isChunked()) {\n            if (xhr.responseText.length > offset) {\n              nextChunk();\n            }\n          } else {\n            body.next(xhr.responseText);\n          }\n        }\n      })\n      .onError(responseError)\n      .onAbort((err) => {\n        errorAll(err);\n      })\n      .onLoadEnd(() => {\n        if (!failed) {\n          completeAll()\n        }\n      })\n      .build();\n\n    const success = transformed => {\n      try {\n        if (!!transformed.body()) xhr.send(transformed.body());\n        else xhr.send();\n      } catch (err) {\n        responseError(err);\n      }\n    };\n\n    const requestChain = new RequestInterceptorChain(\n      interceptors,\n      success,\n      responseError\n    );\n\n    requestChain.run(request);\n  }\n\n  return Rx.Observable.create(attempt);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/browser/xhr/index.js","import { isObject } from 'lodash';\nimport { isFile, isFormData, isBlob } from '../utilities';\nimport Serializer from '../serializer';\n\n/**\n * @class\n * @name FormDataSerializer\n * @extends Serializer\n */\nexport default class FormDataSerializer extends Serializer {\n  /**\n   * @constructor\n   * @param {String} [contentType] - The value of the Content-Type header\n   */\n  constructor(contentType) {\n    super(contentType || 'multipart/form-data');\n  }\n\n  /**\n   * @method\n   * @name serialize\n   * @param {FormData|Blob|Object} value - The content to convert to a\n   * {@link FormData} value.\n   * @returns {FormData} - The {@link FormData} value to be sent to the server\n   */\n  serialize(value) {\n    if (isFormData(value)) return value;\n\n    const result = new FormData();\n\n    if (isFile(value) || isBlob(value)) {\n      result.append('file', value, value.name || 'file')\n      return result;\n    } else if (isObject(value)) {\n      Object.entries(value).forEach((entry) => {\n        if (isFile(entry[1])) result.append(entry[0], entry[1], entry[1].name);\n        else result.append(entry[0], entry[1]);\n      });\n\n      return result;\n    }\n\n    throw `${value} is not an object and cannot be converted to FormData`;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/serializers/form-data-serializer.js","import Serializer from '../serializer';\n\n/**\n * @class\n * @name JsonSerializer\n * @extends Serializer\n */\nexport default class JsonSerializer extends Serializer {\n  /**\n   * @constructor\n   * @param {String} [contentType] - The value of the Content-Type header\n   */\n  constructor(contentType) {\n    super(contentType || 'application/json');\n  }\n\n  /**\n   * @method\n   * @name serialize\n   * @param {Object|String|Number|Array|Boolean} value - The content to convert\n   * to a JSON string\n   * @returns {String} - The serialized JSON string\n   */\n  serialize(value) {\n    return JSON.stringify(value);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/serializers/json-serializer.js","import Serializer from '../serializer';\n\n/**\n * @class\n * @name TextSerializer\n * @extends Serializer\n */\nexport default class TextSerializer extends Serializer {\n  /**\n   * @constructor\n   * @param {String} [contentType] - The value of the Content-Type header\n   */\n  constructor(contentType) {\n    super(contentType || 'text/plain');\n  }\n\n  /**\n   * @method\n   * @name serialize\n   * @param value - The content to be serialized\n   * @returns {String} - The serialized string to be sent to the server\n   */\n  serialize(value) {\n    return value.toString();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/serializers/text-serializer.js","import { isBoolean, isString, isInteger, isArray, isUndefined, assign, defaults } from 'lodash';\nimport Request from './request';\nimport Interceptors from './interceptors';\nimport BrowserProvider from './providers/browser';\nimport Url from './url';\nimport Path from './path';\nimport { property, parseUri } from './utilities';\n\nfunction generateRequestMethod(method) {\n  return function(url, options = {}) {\n    return this.request(url, assign({ method }, options));\n  };\n}\n\nconst _baseUrl = new WeakMap();\nconst _timeout = new WeakMap();\nconst _headers = new WeakMap();\nconst _xsrfCookieName = new WeakMap();\nconst _xsrfHeaderName = new WeakMap();\nconst _withCredentials = new WeakMap();\nconst _user = new WeakMap();\nconst _password = new WeakMap();\nconst _interceptors = new WeakMap();\nconst _provider = new WeakMap();\n\n/**\n * An HTTP client.\n * @class\n * @name Http\n */\nclass Http {\n  /**\n   * @constructor\n   * @param {Object} [options] - A hash of settings for this client.\n   */\n  constructor({\n              baseUrl,\n              timeout,\n              xsrfCookieName,\n              xsrfHeaderName,\n              withCredentials,\n              user,\n              password,\n              interceptors,\n              provider\n            } = {}) {\n    _baseUrl.set(this, baseUrl || Http.defaults.baseUrl);\n    _timeout.set(this, timeout || Http.defaults.timeout);\n    _xsrfCookieName.set(this, xsrfCookieName || Http.defaults.xsrfCookieName);\n    _xsrfHeaderName.set(this, xsrfHeaderName || Http.defaults.xsrfHeaderName);\n    _withCredentials.set(this, !!withCredentials);\n    _interceptors.set(this, interceptors || Http.defaults.interceptors);\n    _provider.set(this, provider || Http.defaults.provider);\n\n    if (user) _user.set(this, user);\n    if (password) _password.set(this, password || Http.defaults.password);\n  }\n\n  /**\n   * @method\n   * @name baseUrl\n   * @param {String|Http} [url] - the base URL applied by default to all\n   * requests from this client.\n   * @returns {String|Http} - If url is specified, updates the default baseUrl\n   * for all requests created with this client, and returns the client instance.\n   * If value is ommitted, returns the current baseUrl.\n   */\n  baseUrl(url) {\n    return property.call(this, 'baseUrl', _baseUrl, url, isString);\n  }\n\n  /**\n   * @method\n   * @name timeout\n   * @param {Number} [value] - The request timeout in milliseconds\n   * @returns {Number|Http} - If value is specified, updates the default request\n   * timeout for all requests created with this client, and returns the client\n   * instance.  If value is ommitted, returns the current timeout value.\n   */\n  timeout(value) {\n    return property.call(this, 'timeout', _timeout, value, isInteger);\n  }\n\n  /**\n   * @method\n   * @name xsrfCookieName\n   * @param {String} [value] - The name of the XSRF cookie\n   * @returns {String|Http} - If the value is specified, sets the name of the XSRF Cookie\n   * and returns the current Http.  If value is ommitted, returns the current name.\n   */\n  xsrfCookieName(value) {\n    return property.call(this, 'xsrfCookieName', _xsrfCookieName, value, isString);\n  }\n\n  /**\n   * @method\n   * @name xsrfHeaderName\n   * @param {String} [value] - The name of the XSRF header\n   * @returns {String|Http} - If the value is specified, sets the name of the XSRF Header\n   * and returns the current Http.  If value is ommitted, returns the current name.\n   */\n  xsrfHeaderName(value) {\n    return property.call(this, 'xsrfHeaderName', _xsrfHeaderName, value, isString);\n  }\n\n  /**\n   * @method\n   * @name withCredentials\n   * @param {Boolean} [value] - Flag indicating whether cross-site AccessControl\n   * requests should be made using cookies, authorization headers, or TLS client\n   * certificates.  More detail: https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/withCredentials\n   * @returns {Boolean|Http} - If the value is specified, sets the withCredentials flag\n   * and returns the current Http.  If value is ommitted, returns the current\n   * value of the flag.\n   */\n  withCredentials(value) {\n    return property.call(this, 'withCredentials', _withCredentials, value, isBoolean);\n  }\n\n  /**\n   * @method\n   * @name user\n   * @param {String} [value] - Basic auth username\n   * @returns {String|Http} - If the value is specified, sets the username and returns\n   * the current Http.  If value is ommitted, returns the current username.\n   */\n  user(value) {\n    return property.call(this, 'user', _user, value, isString);\n  }\n\n  /**\n   * @method\n   * @name password\n   * @param {String} [value] - Basic auth password\n   * @returns {String|Http} - If the value is specified, sets the password and returns\n   * the current Http.  If value is ommitted, returns the current password.\n   */\n  password(value) {\n    return property.call(this, 'password', _password, value, isString);\n  }\n\n  /**\n   * @method\n   * @name interceptors\n   * @param {Interceptor[]} [values] - An array of interceptors.\n   * @returns {Interceptor[]|Http} - If values is specified, replaces the default\n   * interceptors for all requests from this client, and returns the client\n   * instance.  If values is ommitted, returns the current array of\n   * interceptors.\n   */\n  interceptors(values) {\n    return property.call(this, 'interceptors', _interceptors, values, isArray);\n  }\n\n  /**\n   * @method\n   * @name addInterceptor\n   * @param {Interceptor} interceptor - Add the interceptor to the end of the\n   * chain of interceptors.\n   * @return {Http} - The current client instance.\n   */\n  addInterceptor(interceptor) {\n    _interceptors.get(this).push(interceptor);\n    return this;\n  }\n\n  /**\n   * @method\n   * @name removeInterceptor\n   * @param {Interceptor} interceptor - Remove the interceptor from the chain of interceptors.\n   * @returns {Http} - The current client instance.\n   */\n  removeInterceptor(interceptor) {\n    const current = _interceptors.get(this);\n    const updated = current.filter((i) => i !== interceptor);\n    _interceptors.set(this, updated);\n    return this;\n  }\n\n  /**\n   * @method\n   * @name request\n   * @param {String} url - the URL where the request will be sent.\n   * @param {Object} [options] - add/override settings for this request.\n   * @return {Request}\n   * @example\n   * new Http({ baseUrl: 'http://mydomain.com', timeout: 5000 }).request('/some/stuff', {\n   *   method: 'POST',\n   *   body: { foo: \"bar\", baz: 1 },\n   *   timeout: 10000\n   * })\n   */\n  request(url, { method, headers, query, timeout, body, interceptors, xsrfCookieName, xsrfHeaderName, withCredentials, user, password, provider } = {}) {\n    const self = this;\n    const baseUrl = _baseUrl.get(this);\n    let fullUrl = url;\n\n    if (!!baseUrl) {\n      fullUrl = Path.join(baseUrl, url);\n    }\n\n    const parsed = parseUri(fullUrl);\n    assign(parsed.query, query);\n\n    return new Request({\n      method: method,\n      headers: headers || _headers.get(self), // TODO: expose a headers property\n      timeout: timeout || _timeout.get(self),\n      body: body,\n      url: new Url(parsed),\n      interceptors: interceptors || _interceptors.get(self),\n      xsrfCookieName: xsrfCookieName || _xsrfCookieName.get(self),\n      xsrfHeaderName: xsrfHeaderName || _xsrfHeaderName.get(self),\n      withCredentials: withCredentials, // TODO: proper default logic for bool,\n      user: user || _user.get(self),\n      password: password || _password.get(self),\n      provider: provider || _provider.get(self)\n    });\n  }\n\n  /**\n   * @method\n   * @name head\n   * Helper method for request.  Automatically sets method to HEAD.\n   * @param {string} url - the URL where the request will be sent.\n   * @param {Object} [opts] - add/override settings for this request.\n   * @return {Request}\n   * @example\n   * new Http({ baseUrl: 'http://mydomain.com', timeout: 5000 }).head('/some/stuff', {\n   *   retries: 2,\n   *   timeout: 10000\n   * })\n   */\n  head(url, opts = {}) {\n    return generateRequestMethod('HEAD').call(this, url, opts);\n  }\n\n  /**\n   * @method\n   * @name get\n   * Helper method for request.  Automatically sets method to GET.\n   * @param {String} url - the URL where the request will be sent.\n   * @param {Object} [opts] - add/override settings for this request.\n   * @return {Request}\n   * @example\n   * new Http({ baseUrl: 'http://mydomain.com', timeout: 5000 }).get('/some/stuff', {\n   *   retries: 2\n   *   timeout: 10000\n   * })\n   */\n  get(url, opts = {}) {\n    return generateRequestMethod('GET').call(this, url, opts);\n  }\n\n  /**\n   * @method\n   * @name options\n   * Helper method for request.  Automatically sets method to OPTIONS.\n   * @param {String} url - the URL where the request will be sent.\n   * @param {Object} [opts] - add/override settings for this request.\n   * @return {Request}\n   * @example\n   * new Http({ baseUrl: 'http://mydomain.com', timeout: 5000 }).head('/some/stuff', {\n   *   retries: 2,\n   *   timeout: 10000\n   * })\n   */\n  options(url, opts = {}) {\n    return generateRequestMethod('OPTIONS').call(this, url, opts);\n  }\n\n  /**\n   * @method\n   * @name delete\n   * Helper method for request.  Automatically sets method to DELETE.\n   * @param {String} url - the URL where the request will be sent.\n   * @param {Object} [opts] - add/override settings for this request.\n   * @return {Request}\n   * @example\n   * new Http({ baseUrl: 'http://mydomain.com', timeout: 5000 }).delete('/some/stuff', {\n   *   retries: 2,\n   *   timeout: 10000\n   * })\n   */\n  delete(url, opts = {}) {\n    return generateRequestMethod('DELETE').call(this, url, opts);\n  }\n\n  /**\n   * @method\n   * @name trace\n   * Helper method for request.  Automatically sets method to TRACE.\n   * @param {String} url - the URL where the request will be sent.\n   * @param {Object} [opts] - add/override settings for this request.\n   * @return {Request}\n   * @example\n   * new Http({ baseUrl: 'http://mydomain.com', timeout: 5000 }).trace('/some/stuff', {\n   *   retries: 2,\n   *   timeout: 10000\n   * })\n   */\n  trace(url, opts = {}) {\n    return generateRequestMethod('TRACE').call(this, url, opts);\n  }\n\n  /**\n   * @method\n   * @name post\n   * Helper method for request.  Automatically sets method to POST.\n   * @param {String} url - the URL where the request will be sent.\n   * @param {Object} [opts] - add/override settings for this request.\n   * @return {Request}\n   * @example\n   * new Http({ baseUrl: 'http://mydomain.com', timeout: 5000 }).post('/some/stuff', {\n   *   body: { foo: \"bar\", baz: 1 },\n   *   timeout: 10000\n   * })\n   */\n  post(url, opts = {}) {\n    return generateRequestMethod('POST').call(this, url, opts);\n  }\n\n  /** @method\n  * @name put\n  * Helper method for request.  Automatically sets method to PUT.\n  * @param {String} url - the URL where the request will be sent.\n  * @param {Object} [opts] - add/override settings for this request.\n  * @return {Request}\n  * @example\n  * new Http({ baseUrl: 'http://mydomain.com', timeout: 5000 }).put('/some/stuff', {\n  *   body: { foo: \"bar\", baz: 1 },\n  *   timeout: 10000\n  * })\n  **/\n  put(url, opts = {}) {\n    return generateRequestMethod('PUT').call(this, url, opts);\n  }\n\n  /**\n   * @method\n   * @name patch\n   * Helper method for request.  Automatically sets method to PATCH.\n   * @param {String} url - the URL where the request will be sent.\n   * @param {Object} [opts] - add/override settings for this request.\n   * @return {Request}\n   * @example\n   * new Http({ baseUrl: 'http://mydomain.com', timeout: 5000 }).patch('/some/stuff', {\n   *   body: { foo: \"bar\", baz: 1 },\n   *   timeout: 10000\n   * })\n   */\n  patch(url, opts = {}) {\n    return generateRequestMethod('PATCH').call(this, url, opts);\n  }\n}\n\nHttp.defaults = {\n  baseUrl: '',\n  timeout: 30000,\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n  withCredentials: false,\n  interceptors: [\n    Interceptors.MethodOverride,\n    Interceptors.BodyTransformer,\n    Interceptors.XSRF,\n    Interceptors.ErrorHandling\n  ],\n  provider: BrowserProvider\n};\n\nexport default Http;\n\n\n\n// WEBPACK FOOTER //\n// ./src/http.js","import BrowserProvider from './browser';\nimport XHRProvider from './browser/xhr';\n\nexport default {\n  Browser: BrowserProvider,\n  XHR: XHRProvider\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/index.js","import Url from './url';\nimport Http from './http';\nimport Headers from './headers';\nimport Interceptor from './interceptor';\nimport Interceptors from './interceptors';\nimport Errors from './errors';\nimport Serializer from './serializer';\nimport Serializers from './serializers';\nimport Providers from './providers';\n\nexport {\n  Url,\n  Http,\n  Headers,\n  Interceptor,\n  Interceptors,\n  Errors,\n  Serializer,\n  Serializers,\n  Providers\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import { isObject } from 'lodash';\nimport { isFile, isFormData, isBlob } from '../utilities';\nimport Interceptor from '../interceptor';\n\n/**\n * Tries to automatically detect the response content type and deserialize the\n * raw body into the appropriate type.\n * @class\n * @name BodyTransformer\n */\nexport default class BodyTransformer extends Interceptor {\n  /**\n   * Transforms (or fails) an outgoing request.\n   * @method\n   * @name request\n   * @param {Request} request - The request to be processed\n   * @param {Function<Request>} accept - called on success to process a (potentially transformed) {@link Request}\n   * @param {Function} reject - called on failure to pass an error\n   */\n  request(request, accept, reject) {\n    const body = request.body();\n\n    if (!!body) {\n      const serializer = request.serializer();\n      const contentType = request.contentType();\n\n      request\n        .contentType(contentType || serializer.contentType)\n        .body(serializer.serialize(body));\n    }\n\n    accept(request);\n  }\n}\n\nexport let bodyTransformer = new BodyTransformer();\n\n\n\n// WEBPACK FOOTER //\n// ./src/interceptors/body-transformer.js","import Interceptor from '../interceptor';\n\n/**\n * Rejects a response with a non-20x status-code.\n * @class\n * @name ErrorHandling\n */\nexport default class ErrorHandling extends Interceptor {\n  /**\n   * @method\n   * @name response\n   * @param {Response} response - The response to be processed\n   * @param {Function<Response>} accept - called on success to process a (potentially transformed) {@link Response}\n   * @param {Function} reject - called on failure to pass an error\n   */\n  response(response, accept, reject) {\n    if (Math.floor(response.status() / 100) === 2) {\n      accept(response);\n    } else {\n      reject(response);\n    }\n  }\n}\n\nexport let errorHandling = new ErrorHandling();\n\n\n\n// WEBPACK FOOTER //\n// ./src/interceptors/error-handling.js","import Interceptor from '../interceptor';\n\nconst BROWSER_METHODS = ['GET', 'POST'];\n\n/**\n * If the HTTP verb is not one understood by Browsers, change the verb\n * to a POST and send the X-HTTP-Method-Override header with the original\n * method.  This should generally be understood by the routers of most\n * server backends.\n * @class\n * @name MethodOverride\n */\nexport default class MethodOverride extends Interceptor {\n  /**\n   * Transforms (or fails) an outgoing request.\n   * @method\n   * @name request\n   * @param {Request} request - The request to be processed\n   * @param {Function<Request>} accept - called on success to process a (potentially transformed) {@link Request}\n   * @param {Function} reject - called on failure to pass an error\n   */\n  request (request, accept, reject) {\n    const originalMethod = request.method();\n\n    if (!BROWSER_METHODS.some(m => m === originalMethod)) {\n      request\n        .method('POST')\n        .headers('X-HTTP-Method-Override', originalMethod);\n    }\n\n    accept(request);\n  }\n}\n\nexport let methodOverride = new MethodOverride();\n\n\n\n// WEBPACK FOOTER //\n// ./src/interceptors/method-override.js","import { isUndefined, isString } from 'lodash';\nimport Cookies from 'js-cookie';\nimport Interceptor from '../interceptor';\n\n/**\n * Reads the value from the configured XSRF cookie and sends it back to the\n * server and sends it back in the configured header.\n * @class\n * @name XSRF\n */\nexport default class XSRF extends Interceptor {\n  /**\n   * Transforms (or fails) an outgoing request.\n   * @method\n   * @name request\n   * @param {Request} request - The request to be processed\n   * @param {Function<Request>} accept - called on success to process a (potentially transformed) {@link Request}\n   * @param {Function} reject - called on failure to pass an error\n   */\n  request(request, accept, reject) {\n    const xsrfToken = Cookies.get(request.xsrfCookieName());\n    const xsrfHeader = request.xsrfHeaderName();\n\n    if (!isUndefined(xsrfToken) && isString(xsrfToken)) {\n      request.headers(xsrfHeader, xsrfToken);\n    }\n\n    accept(request);\n  }\n}\n\nexport let xsrf = new XSRF();\n\n\n\n// WEBPACK FOOTER //\n// ./src/interceptors/xsrf.js","import { isInteger, partial, noop } from 'lodash';\nimport Errors from '../../../errors';\n\nconst STATE = {\n  UNSENT: 0,\n  OPEN: 1,\n  HEADERS_RECEIVED: 2,\n  LOADING: 3,\n  DONE: 4\n}\n\n/**\n * Internal class used to construct and XMLHttpRequest\n * @private\n * @class\n * @name XHRBuilder\n */\nexport default class XHRBuilder {\n  constructor() {\n    this.headersReceived = noop;\n    this.downloadProgress = noop;\n    this.uploadProgress = noop;\n    this.complete = noop;\n    this.progress = noop;\n    this.error = noop;\n    this.abort = noop;\n    this.load = noop;\n    this.loadEnd = noop;\n  }\n\n  onHeadersReceived(fn) {\n    this.headersReceived = fn;\n    return this;\n  }\n\n  onDownloadProgress(fn) {\n    this.downloadProgress = fn;\n    return this;\n  }\n\n  onUploadProgress(fn) {\n    this.uploadProgress = fn;\n    return this;\n  }\n\n  onError(fn) {\n    this.error = fn;\n    return this;\n  }\n\n  onAbort(fn) {\n    this.abort = fn;\n    return this;\n  }\n\n  onLoad(fn) {\n    this.load = fn;\n    return this;\n  }\n\n  onLoadEnd(fn) {\n    this.loadEnd = fn;\n    return this;\n  }\n\n  request(req) {\n    this.req = req;\n    return this;\n  }\n\n  build() {\n    const self = this;\n    const request = this.req;\n    const xhr = new XMLHttpRequest();\n    const headers = request.headers();\n    let credentials;\n\n    if (request.url().user() && request.url().password()) {\n      credentials = `${request.url().user()}:${request.url().password()}`\n    } else if (request.user() && request.password()) {\n      credentials = `${request.user()}:${request.password()}`;\n    }\n\n    if (credentials) {\n      headers['Authorization'] = `Basic ${btoa(credentials)}`;\n    }\n\n    if (request.withCredentials()) {\n      xhr.withCredentials = request.withCredentials();\n    }\n\n    if (request.responseType()) {\n      xhr.responseType = request.responseType();\n    }\n\n    if (isInteger(request)) {\n      xhr.timeout = request.timeout();\n    }\n\n    if (xhr.upload) {\n      xhr.upload.addEventListener('progress', self.uploadProgress);\n      xhr.upload.addEventListener('error', self.error);\n      xhr.upload.addEventListener('abort', self.abort);\n    }\n\n    xhr.addEventListener('progress', self.downloadProgress);\n    xhr.addEventListener('error', self.error);\n    xhr.addEventListener('abort', self.abort);\n    xhr.addEventListener('load', self.load);\n    xhr.addEventListener('loadend', self.loadEnd);\n\n    xhr.addEventListener('readystatechange', (evt) => {\n      if (xhr.readyState === STATE.HEADERS_RECEIVED) {\n        self.headersReceived(evt);\n      } else if (xhr.readyState === STATE.DONE) {\n        try {\n          if (xhr.status === 0) {\n            self.error(new Errors.ConnectionError(request.url().toString()));\n          }\n        } catch (err) {\n          self.error(err);\n        }\n      }\n    });\n\n    xhr.open(request.method(), request.url().toString(), true);\n\n    Object.keys(headers).forEach(headerName => {\n      xhr.setRequestHeader(headerName, headers[headerName].toString());\n    });\n\n    return xhr;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/browser/xhr/xhr-builder.js","import { isEmpty, head, tail, partial } from 'lodash';\n\n/**\n * Runs the request interceptors, and requestError interceptors if necessary.\n * @private\n * @class\n * @param {Object[]} interceptors - The array of interceptors to be run\n * @param {Function} accept - Callback that is invoked with the final request\n * object after all interceptors have run successfully.\n * @param {Function} reject - Callback that is invoked with an error object\n * if all of the interceptors fail to recover from an error.\n */\nexport default function RequestInterceptorChain(interceptors, accept, reject) {\n  /**\n   * Handler for a rejected interceptor.  Runs requestError interceptor for\n   * all interceptors following the failure, in an attempt to recover.\n   * If one of the interceptors manages to recover, hop back into the next\n   * interceptor after the initial failure.\n   */\n  function failure(remaining, recover) {\n    return function (error) {\n      function step(rest, err) {\n        if (!isEmpty(rest)) {\n          const interceptor = head(rest);\n          const xs = tail(rest);\n          const transform = interceptor.requestError;\n          const next = partial(step, xs);\n\n          transform.call(interceptor, err, recover, next);\n        } else {\n          reject(err);\n        }\n      }\n\n      step(remaining, error);\n    };\n  }\n\n  /** @method\n   * Runs the request through the chain of request interceptors\n   * @name run\n   * @param {Request} request\n   */\n  this.run = function (request) {\n    function step(remaining, next) {\n      if (!isEmpty(remaining)) {\n        const interceptor = head(remaining);\n        const xs = tail(remaining);\n        const transform = interceptor.request;\n        const success = partial(step, xs);\n\n        transform.call(interceptor, request, success, failure(xs, success));\n      } else {\n        accept(request);\n      }\n    }\n\n    step(interceptors, request);\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/request-interceptor-chain.js","import { isUndefined, identity, isString, isInteger, isObject } from 'lodash';\nimport Errors from './errors';\nimport Path from './path';\nimport Url from './url';\nimport { parseUri, property, mapProperty } from './utilities';\nimport Serializers from './serializers';\n\nlet _method = new WeakMap();\nlet _headers = new WeakMap();\nlet _timeout = new WeakMap();\nlet _responseType = new WeakMap();\nlet _body = new WeakMap();\nlet _serializer = new WeakMap();\nlet _url = new WeakMap();\nlet _interceptors = new WeakMap();\nlet _xsrfCookieName = new WeakMap();\nlet _xsrfHeaderName = new WeakMap();\nlet _withCredentials = new WeakMap();\nlet _user = new WeakMap();\nlet _password = new WeakMap();\nlet _provider = new WeakMap();\n\n/**\n * A Request should only ever be created by an instance of {@link Http}\n * @class\n * @name Request\n */\nexport default class Request {\n  /**\n   * @constructor\n   * @param {Object} config - Override default settings for this Request only.\n   */\n  constructor({\n              method,\n              headers,\n              timeout,\n              body,\n              url,\n              interceptors,\n              xsrfCookieName,\n              xsrfHeaderName,\n              withCredentials,\n              user,\n              password,\n              provider\n            } = {}) {\n    _method.set(this, method || null);\n    _headers.set(this, headers || {});\n    _timeout.set(this, timeout || null);\n    _body.set(this, body || null);\n    _url.set(this, url || null);\n    _interceptors.set(this, interceptors || [])\n    _xsrfCookieName.set(this, xsrfCookieName || null);\n    _xsrfHeaderName.set(this, xsrfHeaderName || null);\n    _withCredentials.set(this, !!withCredentials);\n    _user.set(this, user || null);\n    _password.set(this, password || null);\n    _provider.set(this, provider);\n  }\n\n  /**\n   * @method\n   * @name method\n   * @param {String} [value] - The HTTP method for this request\n   * @returns {String|Request} - If value is specified, sets the HTTP method\n   * for this request and returns the current Request.  If value is ommitted,\n   * returns the current HTTP method\n   */\n  method(value) {\n    return property.call(this, 'method', _method, value, isString);\n  }\n\n  /**\n   * @method\n   * @name headers\n   * @param {String|Object} [name] - The name of the header\n   * @param [value] - The value of the header\n   * @returns {Object|String|Request} -\n   * If no parameters are specified - returns a copy of the entire headers hash.\n   * @example\n   * request.headers() // returns { \"foo\": \"bar\" }\n   * If only name is specified, and name is a string - returns the value for the key in the headers hash.\n   * @example\n   * request.headers(\"foo\") // returns \"bar\"\n   * If only name is specified, and name is an object - replaces the entire headers hash\n   * and returns the current Request.\n   * @example\n   * request.headers({ \"foo\": \"bar\", \"baz\": 1 })\n   * If name and value are specified - sets the value of name in the headers hash\n   * and returns the current Request.\n   * @example\n   * request.headers(\"foo\", \"bar\")\n   */\n  headers(name, value) {\n    return mapProperty.call(this, _headers, name, value);\n  }\n\n  /**\n   * Convenience method for getting/setting the Content-Type header.\n   * @method\n   * @name contentType\n   * @param {String} [value] - The value of the Content-Type header\n   * @returns {String|Request} - If value is specified, sets the\n   * Content-Type header.  If value is ommitted, returns the current value\n   * of the Content-Type header (or undefined);\n   */\n  contentType(value) {\n    const headers = _headers.get(this);\n    const currentEntry = Object.entries(headers).find((header) => header[0].toLowerCase() === 'content-type');\n\n    if (isUndefined(value)) {\n      if (!!currentEntry) return currentEntry[1];\n      else return;\n    }\n\n    if (!!currentEntry) headers[currentEntry[0]] = value;\n    else headers['Content-Type'] = value;\n\n    return this;\n  }\n\n  /**\n   * XHRProvider only - sets the responseType field of the {@link XMLHttpRequest}\n   *\n   * @method\n   * @name responseType\n   * @param {String} [value] - The expected responseType\n   * @returns {String|Request} -  If value is specified, sets the responseType\n   * for this request, and returns the current request.  If value is ommitted,\n   * returns the current responseType value.\n   */\n  responseType(value) {\n    return property.call(this, 'responseType', _responseType, value, isString);\n  }\n\n  /**\n   * @method\n   * @name timeout\n   * @param {Number} [value] - The request timeout in milliseconds\n   * @returns {Number|Request} - If value is specified, sets the timeout\n   * for this request, and returns the current request. If value is ommitted,\n   * returns the current timeout value.\n   */\n  timeout(value) {\n    return property.call(this, 'timeout', _timeout, value, isInteger);\n  }\n\n  /**\n   * @method\n   * @name body\n   * @param {Serializer} [value] - The serializer for the body\n   * @returns {Serializer|Request} - If value is specified, sets the Serializer\n   * for this request and returns the current Request.  If value is ommitted,\n   * returns the current Serializer\n   */\n  serializer(value) {\n    return property.call(this, 'serializer', _serializer, value);\n  }\n\n  /**\n   * @method\n   * @name body\n   * @param {Object|FormData|Blob|File|String} [value] - The body for this request\n   * @param {Serializer} [serializer] - The serializer for the body\n   * @returns {Object|FormData|Blob|File|String|Request} - If value is specified, sets the body\n   * for this request and returns the current Request.  If value is ommitted,\n   * returns the current body\n   */\n  body(value, serializer) {\n    if (isUndefined(value)) {\n     return _body.get(this);\n    }\n\n    const currentSerializer = _serializer.get(this);\n    _body.set(this, value);\n    _serializer.set(this, serializer || currentSerializer || new Serializers.Default());\n\n    return this;\n  }\n\n  /**\n   * @method\n   * @name url\n   * @param {Url} [value] - The {@link Url} for this request.\n   * @returns {Url|Request} - If value is specified, sets the {@link Url} for\n   * this request and returns the current Request.  If value is ommitted,\n   * returns the current {@link Url}.\n   */\n  url(value) {\n    if (isUndefined(value)) {\n      return _url.get(this);\n    }\n\n    if (value instanceof Url) {\n      _url.set(this, value);\n      return this;\n    }\n\n    if (isString(value) || isObject(value)) {\n      const newUrl = Url.factory(value);\n      const currentUrl = _url.get(this);\n      if (newUrl.isAbsolute()) {\n        _url.set(this, newUrl);\n        return this;\n      } else if (currentUrl && currentUrl.isAbsolute()) {\n        _url.set(this, currentUrl.merge(newUrl));\n        return this;\n      }\n    }\n\n    throw new Errors.PropertyValidationError('url', value);\n  }\n\n  /**\n   * @method\n   * @name interceptors\n   * @param {Interceptor[]} [value] - The set of interceptors to be run against this Request and/or Response\n   * @returns {Interceptor[]|Request} - If value is specified, overrides the current set of interceptors\n   * for this Request and/or Response and returns the current Request.  If value is ommitted,\n   * returns the current set of interceptors.\n   */\n  interceptors(value) {\n    return property.call(this, 'interceptors', _interceptors, value);\n  }\n\n  /**\n   * @method\n   * @name xsrfCookieName\n   * @param {String} [value] - The name of the XSRF cookie\n   * @returns {String|Request} - If the value is specified, sets the name of the XSRF Cookie\n   * and returns the current Request.  If value is ommitted, returns the current name.\n   */\n  xsrfCookieName(value) {\n    return property.call(this, 'xsrfCookieName', _xsrfCookieName, value, isString);\n  }\n\n  /**\n   * @method\n   * @name xsrfHeaderName\n   * @param {String} [value] - The name of the XSRF header\n   * @returns {String|Request} - If the value is specified, sets the name of the XSRF Header\n   * and returns the current Request.  If value is ommitted, returns the current name.\n   */\n  xsrfHeaderName(value) {\n    return property.call(this, 'xsrfHeaderName', _xsrfHeaderName, value, isString);\n  }\n\n  /**\n   * @method\n   * @name withCredentials\n   * @param {Boolean} [value] - Flag indicating whether cross-site AccessControl\n   * requests should be made using cookies, authorization headers, or TLS client\n   * certificates.  More detail: https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/withCredentials\n   * @returns {Boolean|Request} - If the value is specified, sets the withCredentials flag\n   * and returns the current Request.  If value is ommitted, returns the current\n   * value of the flag.\n   */\n  withCredentials(value) {\n    return property.call(this, 'withCredentials', _withCredentials, value);\n  }\n\n  /**\n   * @method\n   * @name user\n   * @param {String} [value] - Basic auth user\n   * @returns {String|Request} - If the value is specified, sets the user and returns\n   * the current Request.  If value is ommitted, retursn the current user.\n   */\n  user(value) {\n    return property.call(this, 'user', _user, value, isString);\n  }\n\n  /**\n   * @method\n   * @name password\n   * @param {String} [value] - Basic auth password\n   * @returns {String|Request} - If the value is specified, sets the password and returns\n   * the current Request.  If value is ommitted, retursn the current password.\n   */\n  password(value) {\n    return property.call(this, 'password', _password, value, isString);\n  }\n\n  /**\n   * @method\n   * @name execute\n   * @returns {Object} - Executes the request and returns an object containing\n   * the response, uploadProgress, and downloadProgress streams.\n   * @example\n   * var streams = request.execute();\n   * streams.flatMap(response => response.body()).forEach((body) => console.log(body));\n   * streams.flatmap(response => response.uploadProgress()).forEach((event) => console.log(event));\n   * streams.flatMap(response => response.downloadProgress()).forEach((event) => console.log(event));\n   */\n  execute() {\n    const provider = _provider.get(this);\n    return provider(this);\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/request.js","import { isEmpty, head, tail, partial } from 'lodash';\n\n/**\n * Runs the response interceptors, and responseError interceptors if necessary.\n * @private\n * @class\n * @param {Interceptor[]} interceptors - The array of interceptors to be run\n * @param {Function} accept - Callback that is invoked with the final response\n * object after all interceptors have run successfully.\n * @param {Function} reject - Callback that is invoked with an error object\n * if all of the interceptors fail to recover from an error.\n */\nexport default function ResponseInterceptorChain(interceptors, accept, reject) {\n  /**\n   * Handler for a rejected interceptor.  Runs responseError interceptor for\n   * all interceptors following the failure, in an attempt to recover.\n   * If one of the interceptors manages to recover, hop back into the next\n   * interceptor after the initial failure.\n   */\n  function failure(remaining, recover) {\n    return function (error) {\n      function step(rest, err) {\n        if (!isEmpty(rest)) {\n          const interceptor = head(rest);\n          const xs = tail(rest);\n          const transform = interceptor.responseError;\n          const next = partial(step, xs);\n\n          transform.call(interceptor, err, recover, next);\n        } else {\n          reject(err);\n        }\n      }\n\n      step(remaining, error);\n    };\n  }\n\n  /** @method\n   * Runs the response through the chain of response interceptors\n   * @name run\n   * @param {Response} response\n   */\n  this.run = function (response) {\n    function step(remaining, next) {\n      if (!isEmpty(remaining)) {\n        const interceptor = head(remaining);\n        const xs = tail(remaining);\n        const transform = interceptor.response;\n        const success = partial(step, xs);\n\n        transform.call(interceptor, response, success, failure(xs, success));\n      } else {\n        accept(response);\n      }\n    }\n\n    step(interceptors, response);\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/response-interceptor-chain.js","import { isUndefined, isFunction } from 'lodash';\nimport Headers from './headers';\n\nlet _status = new WeakMap();\nlet _statusText = new WeakMap();\nlet _headers = new WeakMap();\nlet _body = new WeakMap();\nlet _uploadProgress = new WeakMap();\nlet _downloadProgress = new WeakMap();\nlet _isChunked = new WeakMap();\n\nfunction evaluateLazy(property) {\n  const value = property.get(this);\n  if (!isUndefined(value) && isFunction(value)) {\n    property.set(this, value());\n  }\n  return property.get(this);\n}\n\n/**\n * Immutable response container.  Should only be created by executing a {@link Request}.\n * @class\n * @name Response\n */\nexport default class Response {\n\n  /**\n   * @param {Number} status - The HTTP status code of the response\n   * @param {String} statusText - The status text of the response\n   * @param {Object} headers - A hash containing the response headers\n   * @param {Observable<String>} body - An Observable representing the body/entity of the response\n   * @param {Observable<Object>} uploadProgress - An Observable representing a stream of all upload progress events\n   * @param {Observable<Object>} downloadProgress - An Observable representing a stram of all download progress events\n   */\n  constructor({ status, statusText, headers, body, uploadProgress, downloadProgress } = {}) {\n    _status.set(this, status);\n    _statusText.set(this, statusText);\n    _headers.set(this, headers);\n    _body.set(this, body);\n    _uploadProgress.set(this, uploadProgress);\n    _downloadProgress.set(this, downloadProgress);\n  }\n\n  /**\n   * @method\n   * @name uploadProgress\n   * @returns {Observable<Object>} - an Observable stream of upload progress events\n   */\n  uploadProgress() {\n    return evaluateLazy.call(this, _uploadProgress);\n  }\n\n  /**\n   * @method\n   * @name downloadProgress\n   * @returns {Observable<Object>} - an Observable stream of download progress events\n   */\n  downloadProgress() {\n    return evaluateLazy.call(this, _downloadProgress);\n  }\n\n  /**\n   * @method\n   * @name body\n   * @returns {Observable<String>} - An Observable stream of the response body/entity contents\n   */\n  body() {\n    return evaluateLazy.call(this, _body);\n  }\n\n  /**\n   * @method\n   * @name status\n   * @returns {Number} - The HTTP status code of the response\n   */\n  status() {\n    return _status.get(this);\n  }\n\n  /**\n   * @method\n   * @name statusText\n   * @returns {String} - The status text of the response\n   */\n  statusText() {\n    return _statusText.get(this);\n  }\n\n  /**\n   * @method\n   * @name headers\n   * @param {String} [name] - The name of the header to lookup\n   * @returns {String|Object} - If name is given, returns the value of the\n   * header with the given name.  Otherwise, returns the hash containing\n   * all of the response headers\n   * @example\n   * { \"Content-Type\": \"application/json\", \"Content-Length\": \"22\" }\n   */\n  headers(name) {\n    const value = _headers.get(this);\n    if (!isUndefined(name)) {\n      const entry = Object.entries(value)\n        .find((headers) => headers[0].toLowerCase() === name.toLowerCase());\n\n      if (entry) return entry[1];\n      else return null;\n    }\n\n    return value;\n  }\n\n  /**\n   * @method\n   * @name isChunked\n   * @returns {Boolean} - Determines if this is a chunked response.  A chunked\n   * response will send each chunk through the {@link body} stream.  A non-chunked\n   * response will only push the final result through the stream.\n   */\n  isChunked() {\n    if (!_isChunked.has(this)) {\n      let transferEncoding = (this.headers(Headers.TRANSFER_ENCODING) || '').toLowerCase();\n      let isChunked = transferEncoding.indexOf('chunked') > -1 ||\n                      transferEncoding.indexOf('identity') > -1;\n      // Detect SPDY. It uses chunked transfer but doesn't set the Transfer-Encoding header.\n      if (!isChunked) {\n        let c = window.chrome;\n        let loadTimes = c && c.loadTimes && c.loadTimes();\n        let chromeSpdy = loadTimes && loadTimes.wasFetchedViaSpdy;\n        let ffSpdy = !!this.headers('X-Firefox-Spdy');\n        isChunked = ffSpdy || chromeSpdy;\n      }\n      _isChunked.set(this, isChunked);\n    }\n    return _isChunked.get(this);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/response.js","import { isObject, isString } from 'lodash';\nimport { isFile, isFormData, isBlob } from '../utilities';\nimport Errors from '../errors';\nimport Serializer from '../serializer';\nimport JsonSerializer from './json-serializer';\nimport FormDataSerializer from './form-data-serializer';\nimport TextSerializer from './text-serializer';\n\nconst contentTypeSerializers = {\n  'text/json': JsonSerializer,\n  'application/json': JsonSerializer,\n  'multipart/form-data': FormDataSerializer,\n  'application/x-www-urlencoded': FormDataSerializer,\n  'text/plain': TextSerializer\n}\n\nfunction autoDetect(body, contentType) {\n  if (isObject(body)) {\n    if (isFormData(body) || isFile(body) || isBlob(body) || Object.entries(body).some((entry) => isFile(entry[1]) || isBlob(entry[1]))) {\n      return new FormDataSerializer(contentType);\n    }\n  }\n\n  if (isString(body)) {\n    return new TextSerializer('text/plain');\n  }\n\n  if (!!contentType && contentTypeSerializers[contentType.toLowerCase()]) {\n    const result = contentTypeSerializers[contentType.toLowerCase()];\n    if (!!result) return new result(contentType);\n    throw new Errors.NoSerializerFoundError(contentType);\n  }\n\n  throw new Errors.NoSerializerFoundError('unknown');\n}\n\n/**\n * Serializer that attempts uses the given contentType, or tries to detect\n * the content type in order to delegate to the appropriate built-in\n * {@link Serializer}\n * @class\n * @name DefaultSerializer\n * @extends Serializer\n */\nexport default class DefaultSerializer extends Serializer {\n  /**\n   * @method\n   * @name serialize\n   * @param value - the value to be serialized\n   * @returns the serialized content\n   */\n  serialize(value) {\n    const delegate = autoDetect(value, this.contentType)\n    return delegate.serialize(value);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/serializers/default-serializer.js","module.exports = __WEBPACK_EXTERNAL_MODULE_28__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"Cookies\",\"commonjs2\":[\"js-cookie\"],\"commonjs\":\"js-cookie\",\"amd\":\"js-cookie\"}\n// module id = 28\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_29__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"Rx\",\"commonjs2\":[\"rxjs\"],\"commonjs\":\"rxjs\",\"amd\":\"rxjs\"}\n// module id = 29\n// module chunks = 0"],"sourceRoot":""}