{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 9b08aa5d03aa5f26d123","webpack:///external {\"root\":\"_\",\"commonjs2\":[\"lodash\"],\"commonjs\":\"lodash\",\"amd\":\"lodash\"}","webpack:///./src/interceptors.js","webpack:///./src/utilities.js","webpack:///./src/url.js","webpack:///./src/headers.js","webpack:///./src/exceptions.js","webpack:///./src/path.js","webpack:///./src/http.js","webpack:///./src/index.js","webpack:///./src/request.js","webpack:///./src/response.js","webpack:///./src/xhr-builder.js","webpack:///./src/xhr-provider.js","webpack:///external {\"root\":\"Cookies\",\"commonjs2\":[\"js-cookie\"],\"commonjs\":\"js-cookie\",\"amd\":\"js-cookie\"}","webpack:///external {\"root\":\"Rx\",\"commonjs2\":[\"rxjs\"],\"commonjs\":\"rxjs\",\"amd\":\"rxjs\"}"],"names":["RequestInterceptorChain","ResponseInterceptorChain","BROWSER_METHODS","Interceptors","BodyTransformer","request","accept","reject","body","json","JSON","stringify","XSRF","xsrfToken","get","xsrfCookieName","xsrfHeader","xsrfHeaderName","header","ErrorHandling","response","status","MethodOverride","originalMethod","method","some","m","interceptors","defaultRequest","good","defaultRequestError","error","bad","failure","remaining","recover","step","rest","err","interceptor","xs","transform","requestError","next","run","success","defaultResponse","defaultResponseError","responseError","isFile","isFormData","isBlob","parseUri","value","toString","call","str","o","options","parser","strictMode","exec","uri","i","key","q","name","replace","$0","$1","$2","strict","loose","encode","val","encodeURIComponent","property","member","set","_protocol","WeakMap","_user","_password","_host","_port","_directory","_file","_fragment","_query","Url","parts","protocol","user","password","host","port","directory","file","fragment","isAbsolute","existing","u","p","trim","pr","ui","userInfo","h","dir","f","substring","other","copied","otherParts","propertiesToMerge","forEach","serializeQuery","auth","authority","path","querySerializer","query","fullyQualified","queryParts","accum","pair","push","fullyQualifiedWithQuery","join","factory","CONTENT_TYPE","TRANSFER_ENCODING","PropertyValidationException","separator","initial","arguments","args","slice","Http","self","settings","defaults","isValid","baseUrl","timeout","retries","addInterceptor","removeInterceptor","url","fullUrl","parsed","config","generateRequestMethod","head","delete","trace","post","put","patch","withCredentials","provider","module","exports","Headers","_method","_headers","_body","_url","_retries","_interceptors","_xsrfCookieName","_xsrfHeaderName","_withCredentials","_username","_provider","Request","headers","username","newUrl","merge","_status","_statusText","_uploadProgress","_downloadProgress","_isChunked","evaluateLazy","Response","xhr","uploadProgress","downloadProgress","statusText","getAllResponseHeaders","has","transferEncoding","toLowerCase","isChunked","indexOf","c","window","chrome","loadTimes","chromeSpdy","wasFetchedViaSpdy","ffSpdy","STATE","UNSENT","OPEN","HEADERS_RECEIVED","LOADING","DONE","XHRBuilder","headersReceived","complete","progress","abort","load","loadEnd","fn","req","XMLHttpRequest","openArgs","open","Object","keys","setRequestHeader","headerName","upload","addEventListener","evt","readyState","XHRProvider","attempt","observable","offset","Subject","all","errorAll","completeAll","exceptionHandler","nextChunk","chunk","responseText","length","onHeadersReceived","responseChain","transformedResponse","onUploadProgress","onDownloadProgress","onLoad","onError","onAbort","onLoadEnd","build","transformed","send","requestChain","Observable","create"],"mappings":"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","file":"rx-http.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"lodash\"), require(\"js-cookie\"), require(\"rxjs\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"rx-http\", [\"lodash\", \"js-cookie\", \"rxjs\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"rx-http\"] = factory(require(\"lodash\"), require(\"js-cookie\"), require(\"rxjs\"));\n\telse\n\t\troot[\"rx-http\"] = factory(root[\"_\"], root[\"Cookies\"], root[\"Rx\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_13__, __WEBPACK_EXTERNAL_MODULE_14__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 9b08aa5d03aa5f26d123","module.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"_\",\"commonjs2\":[\"lodash\"],\"commonjs\":\"lodash\",\"amd\":\"lodash\"}\n// module id = 0\n// module chunks = 0","import { isObject, isString, isEmpty, head, tail, partial } from 'lodash';\nimport Cookies from 'js-cookie';\nimport { isFile, isFormData, isBlob } from './utilities';\n\nconst BROWSER_METHODS = ['GET', 'POST'];\n\nexport const Interceptors = {\n\n  BodyTransformer: {\n    request: (request, accept, reject) => {\n      const body = request.body();\n\n      if (isObject(body) && !isFile(body) && !isFormData(body) && !isBlob(body)) {\n        const json = JSON.stringify(body);\n\n        request.body(json);\n      }\n\n      accept(request);\n    }\n  },\n\n  XSRF: {\n    request: (request, accept, reject) => {\n      const xsrfToken = Cookies.get(request.xsrfCookieName());\n      const xsrfHeader = request.xsrfHeaderName();\n\n      if (isString(xsrfToken)) {\n        request.header(xsrfHeader, xsrfToken);\n      }\n\n      accept(request);\n    }\n  },\n\n  ErrorHandling: {\n    response: (response, accept, reject) => {\n      if (response.status() / 100 === 2) {\n        accept(response);\n      } else {\n        reject(response);\n      }\n    }\n  },\n\n  MethodOverride: {\n    request: (request, accept, reject) => {\n      const originalMethod = request.method();\n\n      if (!BROWSER_METHODS.some(m => m === originalMethod)) {\n        request\n          .method('POST')\n          .header('X-HTTP-Method-Override', originalMethod);\n      }\n\n      accept(request);\n    }\n  }\n};\n\n/**\n * Runs the request interceptors, and requestError interceptors if necessary.\n * @private\n * @class\n * @param {Object[]} interceptors - The array of interceptors to be run\n * @param {Function} accept - Callback that is invoked with the final request\n * object after all interceptors have run successfully.\n * @param {Function} reject - Callback that is invoked with an error object\n * if all of the interceptors fail to recover from an error.\n */\nexport function RequestInterceptorChain(interceptors, accept, reject) {\n  /**\n   * Pass-through accept for the request.\n   */\n  function defaultRequest(request, good) {\n    good(request);\n  }\n\n  /**\n   * Immediately rejects the error without trying to recover.\n   */\n  function defaultRequestError(error, good, bad) {\n    bad(error);\n  }\n\n  /**\n   * Handler for a rejected interceptor.  Runs requestError interceptor for\n   * all interceptors following the failure, in an attempt to recover.\n   * If one of the interceptors manages to recover, hop back into the next\n   * interceptor after the initial failure.\n   */\n  function failure(remaining, recover) {\n    return function (error) {\n      function step(rest, err) {\n        if (!isEmpty(rest)) {\n          const interceptor = head(rest);\n          const xs = tail(rest);\n          const transform = interceptor.requestError || defaultRequestError;\n          const next = partial(step, xs);\n\n          transform(err, recover, next);\n        } else {\n          reject(err);\n        }\n      }\n\n      step(remaining, error);\n    };\n  }\n\n  /** @method\n   * Runs the request through the chain of request interceptors\n   * @name run\n   */\n  this.run = function (request) {\n    function step(remaining, next) {\n      if (!isEmpty(remaining)) {\n        const interceptor = head(remaining);\n        const xs = tail(remaining);\n        const transform = interceptor.request || defaultRequest;\n        const success = partial(step, xs);\n\n        transform(request, success, failure(xs, success));\n      } else {\n        accept(request);\n      }\n    }\n\n    step(interceptors, request);\n  };\n}\n\n/**\n * Runs the response interceptors, and responseError interceptors if necessary.\n * @private\n * @class\n * @param {Object[]} interceptors - The array of interceptors to be run\n * @param {Function} accept - Callback that is invoked with the final response\n * object after all interceptors have run successfully.\n * @param {Function} reject - Callback that is invoked with an error object\n * if all of the interceptors fail to recover from an error.\n */\nexport function ResponseInterceptorChain(interceptors, accept, reject) {\n  /**\n   * Pass-through accept for the response.\n   */\n  function defaultResponse(response, good) {\n    good(response);\n  }\n\n  /**\n   * Immediately rejects the error without trying to recover.\n   */\n  function defaultResponseError(error, good, bad) {\n    bad(error);\n  }\n\n  /**\n   * Handler for a rejected interceptor.  Runs responseError interceptor for\n   * all interceptors following the failure, in an attempt to recover.\n   * If one of the interceptors manages to recover, hop back into the next\n   * interceptor after the initial failure.\n   */\n  function failure(remaining, recover) {\n    return function (error) {\n      function step(rest, err) {\n        if (isEmpty(rest)) {\n          const interceptor = head(rest);\n          const xs = tail(rest);\n          const transform = interceptor.responseError || defaultResponseError;\n          const next = partial(step, xs);\n\n          transform(err, recover, next);\n        } else {\n          reject(err);\n        }\n      }\n\n      step(remaining, error);\n    };\n  }\n\n  /** @method\n   * Runs the response through the chain of response interceptors\n   * @name run\n   */\n  this.run = function (response) {\n    function step(remaining, next) {\n      if (!isEmpty(remaining)) {\n        const interceptor = head(remaining);\n        const xs = tail(remaining);\n        const transform = interceptor.response || defaultResponse;\n        const success = partial(step, xs);\n\n        transform(response, success, failure(xs, success));\n      } else {\n        accept(response);\n      }\n    }\n\n    step(interceptors, response);\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/interceptors.js","/** @private **/\nexport function isFile(value) {\n  return toString.call(value) === '[object File]';\n}\n\n/** @private **/\nexport function isFormData(value) {\n  return toString.call(value) === '[object FormData]';\n}\n\n/** @private **/\nexport function isBlob(value) {\n  return toString.call(value) === '[object Blob]';\n}\n\n/** parseUri 1.2.2\n * (c) Steven Levithan <stevenlevithan.com>\n * MIT License\n * @private\n */\nexport function parseUri(str) {\n  let\to = parseUri.options;\n  let m = o.parser[o.strictMode ? 'strict' : 'loose'].exec(str);\n  let uri = {};\n  let i = 14;\n\n  while (i--) uri[o.key[i]] = m[i] || '';\n\n  uri[o.q.name] = {};\n  uri[o.key[12]].replace(o.q.parser, function ($0, $1, $2) {\n    if ($1) uri[o.q.name][$1] = $2;\n  });\n\n  return uri;\n};\n\nparseUri.options = {\n  strictMode: false,\n  key: [\n    'source',\n    'protocol',\n    'authority',\n    'userInfo',\n    'user',\n    'password',\n    'host',\n    'port',\n    'relative',\n    'path',\n    'directory',\n    'file',\n    'query',\n    'anchor'\n  ],\n  q: {\n    name: 'queryKey',\n    parser: /(?:^|&)([^&=]*)=?([^&]*)/g\n  },\n  parser: {\n    strict: /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?))?((((?:[^?#\\/]*\\/)*)([^?#]*))(?:\\?([^#]*))?(?:#(.*))?)/,\n    loose: /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/utilities.js","import {\n  isObject,\n  isString,\n  isUndefined,\n  isEmpty,\n  assign,\n  reduce,\n  endsWith,\n  startsWith,\n  identity,\n  cloneDeep\n} from 'lodash';\nimport { parseUri } from './utilities';\n\nfunction encode(val) {\n  return encodeURIComponent(val)\n    .replace(/%40/gi, '@')\n    .replace(/%3A/gi, ':')\n    .replace(/%24/g, '$')\n    .replace(/%2C/gi, ',')\n    .replace(/%20/g, '+')\n    .replace(/%5B/gi, '[')\n    .replace(/%5D/gi, ']');\n}\n\nfunction property(member, value) {\n  if (isUndefined(value)) {\n    member.get(this);\n  }\n\n  member.set(this);\n  return this;\n}\n\nconst _protocol = new WeakMap();\nconst _user = new WeakMap();\nconst _password = new WeakMap();\nconst _host = new WeakMap();\nconst _port = new WeakMap();\nconst _directory = new WeakMap();\nconst _file = new WeakMap();\nconst _fragment = new WeakMap();\nconst _query = new WeakMap();\n\n/**\n * @class\n * @name Url\n * @param {Object} parts\n */\nclass Url {\n  constructor(parts) {\n    if (parts.protocol) _protocol.set(this, parts.protocol);\n    if (parts.user) _user.set(this, parts.user);\n    if (parts.password) _password.set(this, parts.password);\n    if (parts.host) _host.set(this, parts.host);\n    if (parts.port) _port.set(this, parts.port);\n    if (parts.directory) _directory.set(this, parts.directory);\n    if (parts.file) _file.set(this, parts.file);\n    if (parts.fragment) _fragment.set(this, parts.fragment);\n  }\n\n  protocol(value) {\n    return property.call(this, _protocol, value);\n  }\n\n  user(value) {\n    return property.call(this, _user, value);\n  }\n\n  password(value) {\n    return property.call(this, _password, value);\n  }\n\n  host(value) {\n    return property.call(this, _host, value);\n  }\n\n  port(value) {\n    return property.call(this, _port, value);\n  }\n\n  directory(value) {\n    return property.call(this, _directory, value);\n  }\n\n  file(value) {\n    return property.call(this, _file, value);\n  }\n\n  fragment(value) {\n    return property.call(this, _fragment, value);\n  }\n\n  isAbsolute() {\n    return !!this.host();\n  }\n\n  isRelative() {\n    return !this.isAbsolute();\n  }\n\n  /**\n   * @method\n   * @name query\n   * @param {string|object} [name] - The name of the query-string parameter\n   * @param [value] - The value of the query-string parameter\n   * @returns {object|string|Request} -\n   * If no parameters are specified - returns a copy of the entire query hash.\n   * @example\n   * {{\n   *   request.query() // returns { \"foo\": \"bar\" }\n   * }}\n   * If only name is specified, and name is a string - returns the value for the key in the query hash.\n   * @example\n   * {{\n   *    request.query(\"foo\") // returns \"bar\"\n   * }}\n   * If only name is specified, and name is an object - replaces the entire query hash\n   * and returns the current Request.\n   * @example\n   * {{\n   *    request.query({ \"foo\": \"bar\", \"baz\": 1 }).execute()\n   * }}\n   * If name and value are specified - sets the value of name in the query hash\n   * and returns the current Request.\n   * @example\n   * {{\n   *   request.query(\"foo\", \"bar\").execute()\n   * }}\n   */\n  query(name, value) {\n    if (!isUndefined(name)) {\n      if (isUndefined(value)) {\n        if (isObject(name)) {\n          _query.set(this, name);\n          return this;\n        }\n        return _query.get(this)[name];\n      }\n      const existing = _query.get(this);\n      existing[name] = value;\n      _query.set(this, existing);\n      return this;\n    }\n\n    return assign({}, _query.get(this));\n  }\n\n  userInfo() {\n    const u = _user.get(this);\n    const p = _password.get(this);\n\n    if (isString(u) && !isEmpty(u.trim()) && isString(p) && isEmpty(p.trim())) {\n      return `${u}:${p}`;\n    }\n\n    return null;\n  }\n\n  authority() {\n    const pr = _protocol.get(this) ? `${_protocol.get(this)}://` : '';\n    const ui = this.userInfo() ? `${this.userInfo()}@` : '';\n    const h = _host.get(this) || '';\n    const p = _port.get(this) ? `:${_port.get(this)}` : '';\n\n    return pr + ui + h + p;\n    return '';\n  }\n\n  path() {\n    const dir = _directory.get(this) || '';\n    const f = _file.get(this) || '';\n\n    if (endsWith(dir, '/')) {\n      if (startsWith(f, '/')) {\n        return dir + f.substring(1);\n      }\n\n      return dir + f;\n    } else if (startsWith(f, '/')) {\n      return dir + f;\n    }\n\n    return `${dir}/${f}`;\n    return '';\n  }\n\n  merge(other) {\n    const copied = cloneDeep(parts);\n    const otherParts = parseUri(other.toString());\n    const propertiesToMerge = ['directory', 'file', 'fragment', 'path', 'query'];\n    propertiesToMerge.forEach((property) => {\n      if (!!otherParts[property]) {\n        copied[property] = otherParts[property];\n      } else if (!!copied[property]) {\n        delete copied[property];\n      }\n    });\n\n    return new Url(copied);\n  }\n\n  /**\n   * @method\n   * @name toString\n   */\n  toString(serializeQuery) {\n    const auth = this.authority();\n    const p = this.path();\n    const f = this.fragment();\n    const querySerializer = serializeQuery || identity;\n    const q = querySerializer(this.query());\n\n    const fullyQualified = (() => {\n      if (endsWith(auth, '/')) {\n        if (endsWith(p, '/')) {\n          return auth + p.substring(1);\n        }\n\n        return auth + p;\n      } else if (startsWith(p, '/')) {\n        return auth + p;\n      }\n\n      return `${auth}/${p}`;\n    })();\n\n    const queryParts = reduce(q, (accum, value, key) => {\n      let pair = `${encode(key)}=${encode(value)}`;\n\n      accum.push(pair);\n      return accum;\n    }, []);\n\n    const fullyQualifiedWithQuery = (() => {\n      if (!isEmpty(queryParts)) {\n        return `${fullyQualified}?${queryParts.join('&')}`;\n      }\n\n      return fullyQualified;\n    })();\n\n    if (!isEmpty(f)) {\n      return `${fullyQualifiedWithQuery}#${f}`;\n    }\n\n    return fullyQualifiedWithQuery;\n  }\n}\n\nUrl.factory = (value) => {\n  if (isString(value)) {\n    return new Url(parseUri(value));\n  }\n  return new Url(value);\n}\n\nexport default Url;\n\n\n\n// WEBPACK FOOTER //\n// ./src/url.js","export default {\n\n  CONTENT_TYPE: \"Content-Type\",\n\n  TRANSFER_ENCODING: \"Transfer-Encoding\"\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/headers.js","/**\n * @class\n * @name PropertyValidationException\n * @param {string} - property\n * @param value\n */\nexport default class PropertyValidationException {\n  constructor(property, value) {\n    this.property = property;\n    this.value = value;\n  }\n\n  toString() {\n    return `Value ${this.value} is not valid for property ${this.property}`\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/exceptions.js","import { reduce, startsWith, endsWith } from 'lodash';\n\nexport default {\n  separator: '/',\n\n  join() {\n    const separator = this.separator;\n    const initial = arguments[0];\n    const args = [...arguments].slice(1)\n\n    return reduce(args, (accum, value) => {\n      if (value.trim() != '') {\n        if (endsWith(accum, separator) && startsWith(value, separator)) {\n          accum += value.substring(1);\n        } else if (endsWith(accum, separator) || startsWith(value, separator)) {\n          accum += value;\n        } else {\n          accum += '/' + value;\n        }\n      }\n\n      return accum;\n    }, initial);\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/path.js","import { isString, isInteger, isArray, isUndefined, assign, defaults, remove } from 'lodash';\nimport Request from './request';\nimport { Interceptors } from './interceptors';\nimport XHRProvider from './xhr-provider';\nimport Url from './url';\nimport Path from './path';\nimport { PropertyValidationException } from './exceptions';\nimport { parseUri } from './utilities';\n\n/**\n * An HTTP client.\n * @constructor\n * @param {Object} [options] - A hash of settings for this client.\n */\nfunction Http(options = {}) {\n  const self = this;\n  const settings = assign({}, Http.defaults, options);\n\n  function property(key, isValid) {\n    return function(value) {\n      if (isUndefined(value)) {\n        return settings[key];\n      }\n\n      if (isValid(value)) {\n        settings[key] = value;\n        return self;\n      }\n\n      throw new PropertyValidationException(key, value);\n    };\n  }\n\n  /**\n   * @method\n   * @name baseUrl\n   * @param {string|Http} [url] - the base URL applied by default to all\n   * requests from this client.\n   * @returns {string|Http} - If url is specified, updates the default baseUrl\n   * for all requests created with this client, and returns the client instance.\n   * If value is ommitted, returns the current baseUrl.\n   */\n  this.baseUrl = property('baseUrl', isString);\n\n  /**\n   * @method\n   * @name timeout\n   * @param {number} [value] - The request timeout in milliseconds\n   * @returns {number|Http} - If value is specified, updates the default request\n   * timeout for all requests created with this client, and returns the client\n   * instance.  If value is ommitted, returns the current timeout value.\n   */\n  this.timeout = property('timeout', isInteger);\n\n  /**\n   * @method\n   * @name retries\n   * @param {number} [value] - The number of retries allowed\n   * @returns {number|Http} - If count is specified, sets the default number\n   * of retries allowed for requests from this client, and returns the client\n   * instance.  If count is ommitted, returns the current value.\n   */\n  this.retries = property('retries', isInteger);\n\n  /**\n   * @method\n   * @name interceptors\n   * @param {Object[]} [values] - An array of interceptors.\n   * @returns {Object[]|Http} - If values is specified, replaces the default\n   * interceptors for all requests from this client, and returns the client\n   * instance.  If values is ommitted, returns the current array of\n   * interceptors.\n   */\n  this.interceptors = property('interceptors', isArray);\n\n  /**\n   * @method\n   * @name addInterceptor\n   * @param {Object} interceptor - Add the interceptor to the end of the\n   * chain of interceptors.\n   * @return {Http} - The current client instance.\n   */\n  this.addInterceptor = function (interceptor) {\n    settings.interceptors.push(interceptor);\n    return this;\n  };\n\n  /**\n   * @method\n   * @name removeInterceptor\n   * @param interceptor - Remove the interceptor from the chain of interceptors.\n   * @returns {Http} - The current client instance.\n   */\n  this.removeInterceptor = function (interceptor) {\n    settings.interceptors = remove(settings.interceptors, (i) => i === interceptor);\n    return this;\n  };\n\n  /**\n   * @method\n   * @name request\n   * @param {string} url - the URL where the request will be sent.\n   * @param {Object} [options] - add/override settings for this request.\n   * @return {@link Request}\n   * @example\n   * new Http({ baseUrl: 'http://mydomain.com', timeout: 5000 }).request('/some/stuff', {\n   *   method: 'POST',\n   *   body: { foo: \"bar\", baz: 1 },\n   *   timeout: 10000\n   * })\n   */\n  const request = this.request = function (url, options = {}) {\n    let fullUrl = url;\n    if (settings.baseUrl) {\n      fullUrl = Path.join(settings.baseUrl, url);\n    }\n\n    const parsed = parseUri(fullUrl);\n    const config = defaults(options, settings);\n\n    assign(parsed.query, options.query);\n    assign(config, { url: new Url(parsed) });\n\n    return new Request(config);\n  };\n\n  function generateRequestMethod(method) {\n    return function (url, options = {}) {\n      return request(url, assign({ method }, options));\n    };\n  }\n\n  /**\n   * @method\n   * @name head\n   * Helper method for request.  Automatically sets method to HEAD.\n   * @param {string} url - the URL where the request will be sent.\n   * @param {Object} [options] - add/override settings for this request.\n   * @return {@link Request}\n   * @example\n   * new Http({ baseUrl: 'http://mydomain.com', timeout: 5000 }).head('/some/stuff', {\n   *   retries: 2,\n   *   timeout: 10000\n   * })\n   */\n  this.head = generateRequestMethod('HEAD');\n\n  /**\n   * @method\n   * @name get\n   * Helper method for request.  Automatically sets method to GET.\n   * @param {string} url - the URL where the request will be sent.\n   * @param {Object} [options] - add/override settings for this request.\n   * @return {@link Request}\n   * @example\n   * new Http({ baseUrl: 'http://mydomain.com', timeout: 5000 }).get('/some/stuff', {\n   *   retries: 2\n   *   timeout: 10000\n   * })\n   */\n  this.get = generateRequestMethod('GET');\n\n  /**\n   * @method\n   * @name options\n   * Helper method for request.  Automatically sets method to OPTIONS.\n   * @param {string} url - the URL where the request will be sent.\n   * @param {Object} [options] - add/override settings for this request.\n   * @return {@link Request}\n   * @example\n   * new Http({ baseUrl: 'http://mydomain.com', timeout: 5000 }).head('/some/stuff', {\n   *   retries: 2,\n   *   timeout: 10000\n   * })\n   */\n  this.options = generateRequestMethod('OPTIONS');\n\n  /**\n   * @method\n   * @name delete\n   * Helper method for request.  Automatically sets method to DELETE.\n   * @param {string} url - the URL where the request will be sent.\n   * @param {Object} [options] - add/override settings for this request.\n   * @return {@link Request}\n   * @example\n   * new Http({ baseUrl: 'http://mydomain.com', timeout: 5000 }).delete('/some/stuff', {\n   *   retries: 2,\n   *   timeout: 10000\n   * })\n   */\n  this.delete = generateRequestMethod('DELETE');\n\n  /**\n   * @method\n   * @name trace\n   * Helper method for request.  Automatically sets method to TRACE.\n   * @param {string} url - the URL where the request will be sent.\n   * @param {Object} [options] - add/override settings for this request.\n   * @return {@link Request}\n   * @example\n   * new Http({ baseUrl: 'http://mydomain.com', timeout: 5000 }).trace('/some/stuff', {\n   *   retries: 2,\n   *   timeout: 10000\n   * })\n   */\n  this.trace = generateRequestMethod('TRACE');\n\n  /**\n   * @method\n   * @name post\n   * Helper method for request.  Automatically sets method to POST.\n   * @param {string} url - the URL where the request will be sent.\n   * @param {Object} [options] - add/override settings for this request.\n   * @return {@link Request}\n   * @example\n   * new Http({ baseUrl: 'http://mydomain.com', timeout: 5000 }).post('/some/stuff', {\n   *   body: { foo: \"bar\", baz: 1 },\n   *   timeout: 10000\n   * })\n   */\n  this.post = generateRequestMethod('POST');\n\n  /** @method\n  * @name put\n  * Helper method for request.  Automatically sets method to PUT.\n  * @param {string} url - the URL where the request will be sent.\n  * @param {Object} [options] - add/override settings for this request.\n  * @return {@link Request}\n  * @example\n  * new Http({ baseUrl: 'http://mydomain.com', timeout: 5000 }).put('/some/stuff', {\n  *   body: { foo: \"bar\", baz: 1 },\n  *   timeout: 10000\n  * })\n  **/\n  this.put = generateRequestMethod('PUT');\n\n  /**\n   * @method\n   * @name patch\n   * Helper method for request.  Automatically sets method to PATCH.\n   * @param {string} url - the URL where the request will be sent.\n   * @param {Object} [options] - add/override settings for this request.\n   * @return {@link Request}\n   * @example\n   * new Http({ baseUrl: 'http://mydomain.com', timeout: 5000 }).patch('/some/stuff', {\n   *   body: { foo: \"bar\", baz: 1 },\n   *   timeout: 10000\n   * })\n   */\n  this.patch = generateRequestMethod('PATCH');\n}\n\nHttp.defaults = {\n  baseUrl: '',\n  retries: 0,\n  timeout: 30000,\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n  withCredentials: false,\n  interceptors: [\n    Interceptors.MethodOverride,\n    Interceptors.BodyTransformer,\n    Interceptors.XSRF,\n    Interceptors.ErrorHandling\n  ],\n  provider: XHRProvider\n};\n\nmodule.exports = Http;\n\n\n\n// WEBPACK FOOTER //\n// ./src/http.js","import Url from './url';\nimport Http from './http';\nimport Headers from './headers';\nimport { Interceptors } from './interceptors';\n\nexport {\n  Url,\n  Http,\n  Headers,\n  Interceptors\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import { isUndefined, identity, assign, isString, isObject } from 'lodash';\nimport PropertyValidationException from './exceptions';\nimport Path from './path';\nimport Url from './url';\nimport { parseUri } from './utilities';\n\nlet _method = new WeakMap();\nlet _headers = new WeakMap();\nlet _body = new WeakMap();\nlet _url = new WeakMap();\nlet _retries = new WeakMap();\nlet _interceptors = new WeakMap();\nlet _xsrfCookieName = new WeakMap();\nlet _xsrfHeaderName = new WeakMap();\nlet _withCredentials = new WeakMap();\nlet _username = new WeakMap();\nlet _password = new WeakMap();\nlet _provider = new WeakMap();\n\n/**\n * A Request should only ever be created by an instance of {@link Http}\n * @class\n * @param {Object} config - Override default settings for this Request only.\n */\nexport default class Request {\n  constructor(config) {\n    _method.set(this, config.method || null);\n    _headers.set(this, config.headers || {});\n    _body.set(this, config.body || null);\n    _url.set(this, config.url || null);\n    _retries.set(this, config.retries || 0);\n    _interceptors.set(this, config.interceptors || {})\n    _xsrfCookieName.set(this, config.xsrfCookieName);\n    _xsrfHeaderName.set(this, config.xsrfHeaderName);\n    _withCredentials.set(this, !!config.withCredentials);\n    _username.set(this, config.username || null);\n    _password.set(this, config.password || null);\n    _provider.set(this, config.provider);\n  }\n\n  /**\n   * @method\n   * @name method\n   * @param {string} [value] - The HTTP method for this request\n   * @returns {string|Request} - If value is specified, sets the HTTP method\n   * for this request and returns the current Request.  If value is ommitted,\n   * returns the current HTTP method\n   */\n  method(value) {\n    if (isUndefined(value)) {\n     return _method.get(this);\n    }\n\n    _method.set(this, value);\n    return this;\n  }\n\n  /**\n   * @method\n   * @name header\n   * @param {string} name - The name of the header\n   * @param {string} [value] - The value to assign to the header\n   * @returns {string|Request} - If value is specified, sets the header\n   * and returns the current Request.  If value is ommitted, returns the\n   * value for the header.\n   */\n  header(name, value) {\n    let headers = _headers.get(this);\n    if (isUndefined(value)) {\n      return headers[name];\n    }\n    headers[name] = value.toString();\n    _headers.set(this, headers);\n    return this;\n  }\n\n  /**\n   * @method\n   * @name headers\n   * @param {Object} [value] - The hash of headers to send with this request.\n   * Replaces any existing headers\n   * @returns {object|Request} - If value is specified, sets the headers\n   * and returns the current Request.  If value is ommitted, returns a copy\n   * of the current headers.\n   */\n  headers(value) {\n    if (isUndefined(value)) {\n      return assign({}, _headers.get(this));\n    }\n\n    _headers.set(this, value);\n    return this;\n  }\n\n  /**\n   * @method\n   * @name body\n   * @param {Object|FormData|Blob|File|string} [value] - The body for this request\n   * @returns {Object|FormData|Blob|File|string|Request} - If value is specified, sets the body\n   * for this request and returns the current Request.  If value is ommitted,\n   * returns the current body\n   */\n  body(value) {\n    if (isUndefined(value)) {\n     return _body.get(this);\n    }\n\n    _body.set(this, value);\n    return this;\n  }\n\n  /**\n   * @method\n   * @name url\n   * @param {Url} [value] - The {@link Url} for this request.\n   * @returns {Url|Request} - If value is specified, sets the {@link Url} for\n   * this request and returns the current Request.  If value is ommitted,\n   * returns the current {@link Url}.\n   */\n  url(value) {\n    if (isUndefined(value)) {\n      return _url.get(this);\n    }\n\n    if (value instanceof Url) {\n      _url.set(this, value);\n      return this;\n    }\n\n    if (isString(value) || isObject(value)) {\n      const newUrl = Url.factory(url);\n      if (newUrl.isAbsolute()) {\n        _url.set(this, newUrl);\n        return this;\n      } else if (_url.get(this) && _url.get().isAbsolute()) {\n        _url.set(this, _url.get(this).merge(newUrl));\n        return this;\n      }\n    }\n\n    throw new PropertyValidationException('url', url);\n  }\n\n  /**\n   * @method\n   * @name retries\n   * @param {number} [value] - The number of times this request will be retried on failure.\n   * @returns {number|Request} - If value is specified, sets the number of retries\n   * for this request and returns the current Request.  If value is ommitted,\n   * returns the current number of retries.\n   */\n  retries(value) {\n    if (isUndefined(value)) {\n      return _retries.get(this);\n    }\n    _retries.set(this, value);\n    return this;\n  }\n\n  /**\n   * @method\n   * @name interceptors\n   * @param {Object} [value] - The set of interceptors to be run against this Request and/or Response\n   * @returns {Object|Request} - If value is specified, overrides the current set of interceptors\n   * for this Request and/or Response and returns the current Request.  If value is ommitted,\n   * returns the current set of interceptors.\n   */\n  interceptors(value) {\n    if (isUndefined(value)) {\n      return _interceptors.get(this);\n    }\n    _interceptors.set(this, value);\n    return this;\n  }\n\n  /**\n   * @method\n   * @name xsrfCookieName\n   * @param {string} [value] - The name of the XSRF cookie\n   * @returns {string|Request} - If the value is specified, sets the name of the XSRF Cookie\n   * and returns the current Request.  If value is ommitted, returns the current name.\n   */\n  xsrfCookieName(value) {\n    if (isUndefined(value)) {\n      return _xsrfCookieName.get(this);\n    }\n    _xsrfCookieName.set(this, value);\n    return this;\n  }\n\n  /**\n   * @method\n   * @name xsrfHeaderName\n   * @param {string} [value] - The name of the XSRF header\n   * @returns {string|Request} - If the value is specified, sets the name of the XSRF Header\n   * and returns the current Request.  If value is ommitted, returns the current name.\n   */\n  xsrfHeaderName(value) {\n    if (isUndefined(value)) {\n      return _xsrfHeaderName.get(this);\n    }\n    _xsrfHeaderName.set(this, value);\n    return this;\n  }\n\n  /**\n   * @method\n   * @name withCredentials\n   * @param {boolean} [value] - Flag indicating whether cross-site AccessControl\n   * requests should be made using cookies, authorization headers, or TLS client\n   * certificates.  More detail: https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/withCredentials\n   * @returns {boolean|Request} - If the value is specified, sets the withCredentials flag\n   * and returns the current Request.  If value is ommitted, returns the current\n   * value of the flag.\n   */\n  withCredentials(value) {\n    if (isUndefined(value)) {\n      return this.config.withCredentials = value;\n    }\n    this.config.withCredentials = value;\n    return this;\n  }\n\n  /**\n   * @method\n   * @name username\n   * @param {string} [value] - Basic auth username\n   * @returns {string|Request} - If the value is specified, sets the username and returns\n   * the current Request.  If value is ommitted, retursn the current username.\n   */\n  username(value) {\n    if (isUndefined(value)) {\n      return _username.get(this);\n    }\n    _username.set(this, value);\n    return this;\n  }\n\n  /**\n   * @method\n   * @name password\n   * @param {string} [value] - Basic auth password\n   * @returns {string|Request} - If the value is specified, sets the password and returns\n   * the current Request.  If value is ommitted, retursn the current password.\n   */\n  password(value) {\n    if (isUndefined(value)) {\n      return _password.get(this);\n    }\n    _password.set(this, value);\n    return this;\n  }\n\n  /**\n   * @method\n   * @name execute\n   * @returns {Object} - Executes the request and returns an object containing\n   * the response, uploadProgress, and downloadProgress streams.\n   * @example\n   * var streams = request.execute();\n   * streams.flatMap(response => response.body()).forEach((body) => console.log(body));\n   * streams.flatmap(response => response.uploadProgress()).forEach((event) => console.log(event));\n   * streams.flatMap(response => response.downloadProgress()).forEach((event) => console.log(event));\n   */\n  execute() {\n    const provider = _provider.get(this);\n    return provider(this);\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/request.js","import { isUndefined, isFunction } from 'lodash';\nimport Headers from './headers';\n\nlet _status = new WeakMap();\nlet _statusText = new WeakMap();\nlet _headers = new WeakMap();\nlet _body = new WeakMap();\nlet _uploadProgress = new WeakMap();\nlet _downloadProgress = new WeakMap();\nlet _isChunked = new WeakMap();\n\nfunction evaluateLazy(property) {\n  const value = property.get(this);\n  if (!isUndefined(value) && isFunction(value)) {\n    property.set(this, value());\n  }\n  return property.get(this);\n}\n\n/**\n * Immutable response container.  Should only be created by executing a {@link Request}.\n * @class\n * @name Response\n * @param {XMLHttpRequest} xhr\n * @param {Observable<string>} body - An Observable representing the body/entity of the response\n * @param {Observable<Object>} uploadProgress - An Observable representing a stream of all upload progress events\n * @param {Observable<Object>} downloadProgress - An Observable representing a stram of all download progress events\n */\nexport default class Response {\n\n  constructor(xhr, body, uploadProgress, downloadProgress) {\n    _status.set(this, xhr.status);\n    _statusText.set(this, xhr.statusText);\n    _headers.set(this, xhr.getAllResponseHeaders());\n    _body.set(this, body);\n    _uploadProgress.set(this, uploadProgress);\n    _downloadProgress.set(this, downloadProgress);\n  }\n\n  /**\n   * @method\n   * @name uploadProgress\n   * @returns {Observable<Object>} - an Observable stream of upload progress events\n   */\n  uploadProgress() {\n    return evaluateLazy.call(this, _uploadProgress);\n  }\n\n  /**\n   * @method\n   * @name downloadProgress\n   * @returns {Observable<Object>} - an Observable stream of download progress events\n   */\n  downloadProgress() {\n    return evaluateLazy.call(this, _downloadProgress);\n  }\n\n  /**\n   * @method\n   * @name body\n   * @returns {Observable<string>} - An Observable stream of the response body/entity contents\n   */\n  body() {\n    return evaluateLazy.call(this, _body);\n  }\n\n  /**\n   * @method\n   * @name status\n   * @returns {number} - The HTTP status code of the response\n   */\n  status() {\n    return _status.get(this);\n  }\n\n  /**\n   * @method\n   * @name statusText\n   * @returns {string} - The status text of the response\n   */\n  statusText() {\n    return _statusText.get(this);\n  }\n\n  /**\n   * @method\n   * @name headers\n   * @returns {Object} - An object containing the response headers\n   * @example\n   * { \"Content-Type\": \"application/json\", \"Content-Length\": \"22\" }\n   */\n  headers() {\n    return _headers.get(this);\n  }\n\n  /**\n   * Look-up the value of an individual resonse header\n   * @method\n   * @name header\n   * @param {string} name - The name of the header to lookup\n   * @returns {string} - The value of the header, or undefined if not found\n   */\n  header(name) {\n    return _headers.get(this)[name];\n  }\n\n  /**\n   * @method\n   * @name isChunked\n   * @returns {boolean} - Determines if this is a chunked response.  A chunked\n   * response will send each chunk through the {@link body} stream.  A non-chunked\n   * response will only push the final result through the stream.\n   */\n  isChunked() {\n    if (!_isChunked.has(this)) {\n      let transferEncoding = (this.header(Headers.TRANSFER_ENCODING) || '').toLowerCase();\n      let isChunked = transferEncoding.indexOf('chunked') > -1 ||\n                      transferEncoding.indexOf('identity') > -1;\n      // Detect SPDY. It uses chunked transfer but doesn't set the Transfer-Encoding header.\n      if (!isChunked) {\n        let c = window.chrome;\n        let loadTimes = c && c.loadTimes && c.loadTimes();\n        let chromeSpdy = loadTimes && loadTimes.wasFetchedViaSpdy;\n        let ffSpdy = !!this.header('X-Firefox-Spdy');\n        isChunked = ffSpdy || chromeSpdy;\n      }\n      _isChunked.set(this, isChunked);\n    }\n    return _isChunked.get(this);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/response.js","import { isInteger, partial, noop } from 'lodash';\nimport { RequestInterceptorChain } from './interceptors';\n\nconst STATE = {\n  UNSENT: 0,\n  OPEN: 1,\n  HEADERS_RECEIVED: 2,\n  LOADING: 3,\n  DONE: 4\n}\n\n/**\n * Internal class used to construct and XMLHttpRequest\n * @private\n * @class\n * @name XHRBuilder\n */\nexport default class XHRBuilder {\n  constructor() {\n    this.headersReceived = noop;\n    this.downloadProgress = noop;\n    this.uploadProgress = noop;\n    this.complete = noop;\n    this.progress = noop;\n    this.error = noop;\n    this.abort = noop;\n    this.load = noop;\n    this.loadEnd = noop;\n  }\n\n  onHeadersReceived(fn) {\n    this.headersReceived = fn;\n    return this;\n  }\n\n  onDownloadProgress(fn) {\n    this.downloadProgress = fn;\n    return this;\n  }\n\n  onUploadProgress(fn) {\n    this.uploadProgress = fn;\n    return this;\n  }\n\n  onError(fn) {\n    this.error = fn;\n    return this;\n  }\n\n  onAbort(fn) {\n    this.abort = fn;\n    return this;\n  }\n\n  onLoad(fn) {\n    this.load = fn;\n    return this;\n  }\n\n  onLoadEnd(fn) {\n    this.loadEnd = fn;\n    return this;\n  }\n\n  request(req) {\n    this.req = req;\n    return this;\n  }\n\n  build() {\n    const self = this;\n    const request = this.req;\n    const xhr = new XMLHttpRequest();\n\n    const openArgs = [request.method(), request.url().toString(), true];\n    if (request.username()) {\n      openArgs.push(request.username());\n\n      if (request.password()) {\n        openArgs.push(request.password());\n      }\n    }\n\n    xhr.open(...openArgs);\n\n    if (isInteger(request)) {\n      xhr.timeout = request.timeout();\n    }\n\n    const headers = request.headers();\n\n    Object.keys(headers).forEach(headerName => {\n      xhr.setRequestHeader(headerName, headers[headerName]);\n    });\n\n    if (xhr.upload) {\n      xhr.upload.addEventListener('progress', self.uploadProgress);\n      xhr.upload.addEventListener('error', self.error);\n      xhr.upload.addEventListener('abort', self.abort);\n    }\n\n    xhr.addEventListener('progress', self.downloadProgress);\n    xhr.addEventListener('error', self.error);\n    xhr.addEventListener('abort', self.abort);\n    xhr.addEventListener('load', self.load);\n    xhr.addEventListener('loadend', self.loadEnd);\n\n    xhr.addEventListener('readystatechange', (evt) => {\n      if (xhr.readyState === STATE.HEADERS_RECEIVED) {\n        self.headersReceived(evt);\n      }\n    });\n\n    return xhr;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/xhr-builder.js","import { partial, isInteger } from 'lodash';\nimport Rx from 'rxjs';\nimport XHRBuilder from './xhr-builder';\nimport Response from './response';\nimport { RequestInterceptorChain, ResponseInterceptorChain } from './interceptors';\n\n/** @function\n * Provider-implementation for browser-based clients.  Providers are simply\n * functions that take in a {@link Request} and return an RxJS Observable\n * that eventually contains the {@link Response}.\n * @name XHRProvider\n * @param {Request} request\n * @returns {Observable<Response>}\n */\nexport default function XHRProvider(request) {\n  const interceptors = request.interceptors();\n\n  function attempt(observable, retries = request.retries()) {\n    let response;\n    let offset = 0;\n    let body = new Rx.Subject();\n    let uploadProgress = new Rx.Subject();\n    let downloadProgress = new Rx.Subject();\n    let all = [observable, body, uploadProgress, downloadProgress];\n\n    function errorAll(err) {\n      all.forEach(o => o.error(err));\n    }\n\n    function completeAll() {\n      all.forEach(o => o.complete());\n    }\n\n    function exceptionHandler(evt) {\n      if (retries > 0) attempt(observable, retries - 1);\n      else errorAll(evt);\n    }\n\n    function nextChunk() {\n      let chunk = xhr.responseText.slice(offset);\n      offset = xhr.responseText.length;\n      body.next(chunk);\n    }\n\n    const xhr = new XHRBuilder()\n      .request(request)\n      .onHeadersReceived((evt) => {\n        response = new Response(\n          xhr,\n          body,\n          uploadProgress,\n          downloadProgress\n        );\n\n        const responseChain = new ResponseInterceptorChain(\n          interceptors,\n          (transformedResponse) => observable.next(transformedResponse),\n          exceptionHandler\n        );\n\n        responseChain.run(response);\n      })\n      .onUploadProgress((evt) => {\n        uploadProgress.next(evt);\n      })\n      .onDownloadProgress((evt) => {\n        downloadProgress.next(evt);\n        if (response.isChunked()) {\n          nextChunk();\n        }\n      })\n      .onLoad((evt) => {\n        if (response.isChunked()) {\n          if (xhr.responseText.length > offset) {\n            nextChunk();\n          }\n        } else {\n          body.next(xhr.responseText);\n        }\n      })\n      .onError(exceptionHandler)\n      .onAbort(exceptionHandler)\n      .onLoadEnd(completeAll)\n      .build();\n\n    const success = transformed => {\n      if (!!transformed.body()) xhr.send(transformed.body());\n      else xhr.send();\n    };\n\n    const requestChain = new RequestInterceptorChain(\n      interceptors,\n      success,\n      (err) => {\n        observable.error(err);\n        completeAll();\n      }\n    );\n\n    requestChain.run(request);\n  }\n\n  return Rx.Observable.create(attempt);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/xhr-provider.js","module.exports = __WEBPACK_EXTERNAL_MODULE_13__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"Cookies\",\"commonjs2\":[\"js-cookie\"],\"commonjs\":\"js-cookie\",\"amd\":\"js-cookie\"}\n// module id = 13\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_14__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"Rx\",\"commonjs2\":[\"rxjs\"],\"commonjs\":\"rxjs\",\"amd\":\"rxjs\"}\n// module id = 14\n// module chunks = 0"],"sourceRoot":""}