{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 08f2b6f7dd8c4872b797","webpack:///external {\"root\":\"_\",\"commonjs2\":[\"lodash\"],\"commonjs\":\"lodash\",\"amd\":\"lodash\"}","webpack:///./src/utilities.js","webpack:///./src/errors.js","webpack:///./src/interceptor.js","webpack:///./src/serializer.js","webpack:///./src/url.js","webpack:///./src/headers.js","webpack:///./src/interceptors/index.js","webpack:///./src/serializers/index.js","webpack:///./src/path.js","webpack:///./src/serializers/form-data-serializer.js","webpack:///./src/serializers/json-serializer.js","webpack:///./src/serializers/text-serializer.js","webpack:///./src/http.js","webpack:///./src/index.js","webpack:///./src/interceptors/body-transformer.js","webpack:///./src/interceptors/error-handling.js","webpack:///./src/interceptors/method-override.js","webpack:///./src/interceptors/xsrf.js","webpack:///./src/request-interceptor-chain.js","webpack:///./src/request.js","webpack:///./src/response-interceptor-chain.js","webpack:///./src/response.js","webpack:///./src/serializers/default-serializer.js","webpack:///./src/xhr-builder.js","webpack:///./src/xhr-provider.js","webpack:///external {\"root\":\"Cookies\",\"commonjs2\":[\"js-cookie\"],\"commonjs\":\"js-cookie\",\"amd\":\"js-cookie\"}","webpack:///external {\"root\":\"Rx\",\"commonjs2\":[\"rxjs\"],\"commonjs\":\"rxjs\",\"amd\":\"rxjs\"}"],"names":["isFile","isFormData","isBlob","parseUri","value","toString","call","str","o","options","m","parser","strictMode","exec","uri","i","key","q","name","replace","$0","$1","$2","strict","loose","CustomError","message","constructor","stack","Error","prototype","Object","create","NotImplementedError","PropertyValidationError","property","msg","NoSerializerFoundError","contentType","NoDeserializerFoundError","Interceptor","request","accept","reject","error","response","Serializer","encode","val","encodeURIComponent","member","get","set","_protocol","WeakMap","_user","_password","_host","_port","_directory","_file","_fragment","_query","Url","parts","protocol","user","password","host","port","directory","file","fragment","isAbsolute","existing","u","p","trim","pr","ui","userInfo","h","dir","f","substring","other","copied","otherParts","propertiesToMerge","forEach","serializeQuery","auth","authority","path","querySerializer","query","fullyQualified","queryParts","accum","pair","push","fullyQualifiedWithQuery","join","factory","CONTENT_TYPE","TRANSFER_ENCODING","MethodOverride","BodyTransformer","XSRF","ErrorHandling","separator","initial","arguments","args","slice","FormDataSerializer","result","FormData","append","entries","entry","JsonSerializer","JSON","stringify","TextSerializer","isValid","settings","_settings","generateRequestMethod","method","url","Http","initialSettings","defaults","values","interceptor","interceptors","fullUrl","baseUrl","parsed","config","retries","timeout","xsrfCookieName","xsrfHeaderName","withCredentials","provider","Headers","Interceptors","Errors","Serializers","body","serializer","serialize","status","BROWSER_METHODS","originalMethod","some","header","xsrfToken","xsrfHeader","RequestInterceptorChain","failure","remaining","recover","step","rest","err","xs","transform","requestError","next","run","success","_method","_headers","_timeout","_body","_serializer","_url","_interceptors","_xsrfCookieName","_xsrfHeaderName","_withCredentials","_username","_provider","Request","headers","username","currentEntry","find","toLowerCase","Default","newUrl","merge","ResponseInterceptorChain","responseError","_status","_statusText","_uploadProgress","_downloadProgress","_isChunked","evaluateLazy","Response","xhr","uploadProgress","downloadProgress","statusText","getAllResponseHeaders","has","transferEncoding","isChunked","indexOf","c","window","chrome","loadTimes","chromeSpdy","wasFetchedViaSpdy","ffSpdy","contentTypeSerializers","autoDetect","DefaultSerializer","delegate","STATE","UNSENT","OPEN","HEADERS_RECEIVED","LOADING","DONE","XHRBuilder","headersReceived","complete","progress","abort","load","loadEnd","fn","req","self","XMLHttpRequest","openArgs","open","keys","setRequestHeader","headerName","upload","addEventListener","evt","readyState","XHRProvider","attempt","observable","offset","Subject","all","errorAll","completeAll","nextChunk","chunk","responseText","length","onHeadersReceived","responseChain","transformedResponse","Observable","throw","onUploadProgress","onDownloadProgress","onLoad","onError","onAbort","onLoadEnd","build","transformed","send","requestChain"],"mappings":"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","file":"rx-http.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"lodash\"), require(\"js-cookie\"), require(\"rxjs\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"rx-http\", [\"lodash\", \"js-cookie\", \"rxjs\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"rx-http\"] = factory(require(\"lodash\"), require(\"js-cookie\"), require(\"rxjs\"));\n\telse\n\t\troot[\"rx-http\"] = factory(root[\"_\"], root[\"Cookies\"], root[\"Rx\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_26__, __WEBPACK_EXTERNAL_MODULE_27__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 14);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 08f2b6f7dd8c4872b797","module.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"_\",\"commonjs2\":[\"lodash\"],\"commonjs\":\"lodash\",\"amd\":\"lodash\"}\n// module id = 0\n// module chunks = 0","/** @private **/\nexport function isFile(value) {\n  return toString.call(value) === '[object File]';\n}\n\n/** @private **/\nexport function isFormData(value) {\n  return toString.call(value) === '[object FormData]';\n}\n\n/** @private **/\nexport function isBlob(value) {\n  return toString.call(value) === '[object Blob]';\n}\n\n/** parseUri 1.2.2\n * (c) Steven Levithan <stevenlevithan.com>\n * MIT License\n * @private\n */\nexport function parseUri(str) {\n  let\to = parseUri.options;\n  let m = o.parser[o.strictMode ? 'strict' : 'loose'].exec(str);\n  let uri = {};\n  let i = 14;\n\n  while (i--) uri[o.key[i]] = m[i] || '';\n\n  uri[o.q.name] = {};\n  uri[o.key[12]].replace(o.q.parser, function ($0, $1, $2) {\n    if ($1) uri[o.q.name][$1] = $2;\n  });\n\n  return uri;\n};\n\nparseUri.options = {\n  strictMode: false,\n  key: [\n    'source',\n    'protocol',\n    'authority',\n    'userInfo',\n    'user',\n    'password',\n    'host',\n    'port',\n    'relative',\n    'path',\n    'directory',\n    'file',\n    'query',\n    'anchor'\n  ],\n  q: {\n    name: 'queryKey',\n    parser: /(?:^|&)([^&=]*)=?([^&]*)/g\n  },\n  parser: {\n    strict: /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?))?((((?:[^?#\\/]*\\/)*)([^?#]*))(?:\\?([^#]*))?(?:#(.*))?)/,\n    loose: /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/utilities.js","class CustomError {\n  constructor(message) {\n    this.name = this.constructor.name;\n    this.message = message;\n    this.stack = (new Error(message)).stack;\n  }\n}\nCustomError.prototype = Object.create(Error.prototype);\nCustomError.prototype.constructor = CustomError;\n\n/**\n * @class\n * @name NotImplementedError\n */\nclass NotImplementedError extends CustomError {\n  constructor(message) {\n    super(message || 'Not Implemented');\n  }\n}\n\n/**\n * @class\n * @name PropertyValidationError\n */\nclass PropertyValidationError extends CustomError {\n  /**\n   * @constructor\n   * @param {String} - property name\n   * @param value\n   */\n  constructor(property, value, msg) {\n    const message = msg || `Value ${value} is not valid for property ${property}`;\n    super(message);\n    this.property = property;\n    this.value = value;\n  }\n}\n\n/**\n * @class\n * @name NoSerializerFoundError\n */\nclass NoSerializerFoundError extends CustomError {\n  constructor(contentType) {\n    super(`No serializer found for content type ${contentType}`);\n    this.contentType = contentType;\n  }\n}\n\n/**\n * @class\n * @name NoDeserializerFoundError\n */\nclass NoDeserializerFoundError extends CustomError {\n  constructor(contentType) {\n    super(`No deserializer found for content type ${contentType}`);\n    this.contentType = contentType;\n  }\n}\n\nexport default {\n  NotImplementedError,\n  PropertyValidationError,\n  NoSerializerFoundError,\n  NoDeserializerFoundError\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/errors.js","/**\n * Base class to be inherited by Interceptors\n * @class\n * @name Interceptor\n */\nexport default class Interceptor {\n  /**\n   * Transforms (or fails) an outgoing request.\n   * @method\n   * @name request\n   * @param {Request} request - The request to be processed\n   * @param {Function<Request>} accept - called on success to process a (potentially transformed) {@link Request}\n   * @param {Function} reject - called on failure to pass an error\n   */\n  request(request, accept, reject) {\n    accept(request);\n  }\n\n\n  /**\n   * Try to recover from a request error so processing can resume.\n   * @method\n   * @name requestError\n   * @param error - The error to be processed\n   * @param {Function} accept - called on success if we were able to recover\n   * @param {Function} reject - called on failure to pass an error\n   */\n  requestError(error, accept, reject) {\n    reject(error);\n  }\n\n  /**\n   * @method\n   * @name response\n   * @param {Response} response - The response to be processed\n   * @param {Function<Response>} accept - called on success to process a (potentially transformed) {@link Response}\n   * @param {Function} reject - called on failure to pass an error\n   */\n  response(response, accept, reject) {\n    accept(response);\n  }\n\n  /**\n   * Try to recover from a response error so processing can resume.\n   * @method\n   * @name responseError\n   * @param error - The error to be processed\n   * @param {Function} accept - called on success if we were able to recover\n   * @param {Function} reject - called on failure to pass an error\n   */\n  responseError(error, accept, reject) {\n    reject(error);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/interceptor.js","import { NotImplementedError } from './errors';\n\n/**\n * Base class for {@link Request} body serializers\n * @class\n * @name Serializer\n */\nexport default class Serializer {\n  /**\n   * @constructor\n   * @param {String} [contentType] - The value of the Content-Type header\n   */\n  constructor(contentType) {\n    if (!!contentType) this.contentType = contentType;\n  }\n\n  /**\n   * @method\n   * @name serialize\n   * @param value - The content to be serialized\n   * @returns - The serialized content\n   */\n  serialize(value) {\n    throw new NotImplementedError();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/serializer.js","import {\n  isObject,\n  isString,\n  isUndefined,\n  isEmpty,\n  assign,\n  reduce,\n  endsWith,\n  startsWith,\n  identity,\n  cloneDeep\n} from 'lodash';\nimport { parseUri } from './utilities';\n\nfunction encode(val) {\n  return encodeURIComponent(val)\n    .replace(/%40/gi, '@')\n    .replace(/%3A/gi, ':')\n    .replace(/%24/g, '$')\n    .replace(/%2C/gi, ',')\n    .replace(/%20/g, '+')\n    .replace(/%5B/gi, '[')\n    .replace(/%5D/gi, ']');\n}\n\nfunction property(member, value) {\n  if (isUndefined(value)) {\n    member.get(this);\n  }\n\n  member.set(this);\n  return this;\n}\n\nconst _protocol = new WeakMap();\nconst _user = new WeakMap();\nconst _password = new WeakMap();\nconst _host = new WeakMap();\nconst _port = new WeakMap();\nconst _directory = new WeakMap();\nconst _file = new WeakMap();\nconst _fragment = new WeakMap();\nconst _query = new WeakMap();\n\n/**\n * @class\n * @name Url\n * @param {Object} parts\n */\nclass Url {\n  /**\n   * @constructor\n   * @param {Object} parts\n   */\n  constructor(parts) {\n    if (parts.protocol) _protocol.set(this, parts.protocol);\n    if (parts.user) _user.set(this, parts.user);\n    if (parts.password) _password.set(this, parts.password);\n    if (parts.host) _host.set(this, parts.host);\n    if (parts.port) _port.set(this, parts.port);\n    if (parts.directory) _directory.set(this, parts.directory);\n    if (parts.file) _file.set(this, parts.file);\n    if (parts.fragment) _fragment.set(this, parts.fragment);\n  }\n\n  /**\n   * @method\n   * @name protocol\n   * @param {String} [value]\n   * @returns {Url|String} - If value is specified, sets the protocol for the url\n   * and returns the current instance.  If value is ommitted, returns the\n   * current protocol.\n   */\n  protocol(value) {\n    return property.call(this, _protocol, value);\n  }\n\n  /**\n   * @method\n   * @name user\n   * @param {String} [value]\n   * @returns {Url|String} - If value is specified, sets the user and returns\n   * the current instance.  If value is ommitted, returns the current user.\n   */\n  user(value) {\n    return property.call(this, _user, value);\n  }\n\n  /**\n   * @method\n   * @name password\n   * @param {String} [value]\n   * @returns {Url|String} - If value is specified, sets the password and returns\n   * the current instance.  If value is ommitted, returns the current password.\n   */\n  password(value) {\n    return property.call(this, _password, value);\n  }\n\n  /**\n   * @method\n   * @name host\n   * @param {String} [value]\n   * @returns {Url|String} - If value is specified, sets the host and returns\n   * the current instance.  If value is ommitted, returns the current host.\n   */\n  host(value) {\n    return property.call(this, _host, value);\n  }\n\n  /**\n   * @method\n   * @name port\n   * @param {String|Number} [value]\n   * @returns {Url|String|Number} - If value is specified, sets the port and returns\n   * the current instance.  If value is ommitted, returns the current port.\n   */\n  port(value) {\n    return property.call(this, _port, value);\n  }\n\n  /**\n   * @method\n   * @name directory\n   * @param {String} [value]\n   * @returns {Url|String} - If value is specified, sets the directory and returns\n   * the current instance.  If value is ommitted, returns the current directory.\n   */\n  directory(value) {\n    return property.call(this, _directory, value);\n  }\n\n  /**\n   * @method\n   * @name file\n   * @param {String} [value]\n   * @returns {Url|String} - If value is specified, sets the file and returns\n   * the current instance.  If value is ommitted, returns the current file.\n   */\n  file(value) {\n    return property.call(this, _file, value);\n  }\n\n  /**\n   * @method\n   * @name fragment\n   * @param {String} [value]\n   * @returns {Url|String} - If value is specified, sets the fragment and returns\n   * the current instance.  If value is ommitted, returns the current fragment.\n   */\n  fragment(value) {\n    return property.call(this, _fragment, value);\n  }\n\n  /**\n   * @method\n   * @name isAbsolute\n   * @returns {Boolean} - true if the url is absolute, false if it is relative.\n   */\n  isAbsolute() {\n    return !!this.host();\n  }\n\n  /**\n   * @method\n   * @name isRelative\n   * @returns {Boolean} - true if the url is relative, false if it is absolute.\n   */\n  isRelative() {\n    return !this.isAbsolute();\n  }\n\n  /**\n   * @method\n   * @name query\n   * @param {String|Object} [name] - The name of the query-string parameter\n   * @param [value] - The value of the query-string parameter\n   * @returns {Object|String|Request} -\n   * If no parameters are specified - returns a copy of the entire query hash.\n   * @example\n   * request.query() // returns { \"foo\": \"bar\" }\n   * If only name is specified, and name is a string - returns the value for the key in the query hash.\n   * @example\n   * request.query(\"foo\") // returns \"bar\"\n   * If only name is specified, and name is an object - replaces the entire query hash\n   * and returns the current Request.\n   * @example\n   * request.query({ \"foo\": \"bar\", \"baz\": 1 }).execute()\n   * If name and value are specified - sets the value of name in the query hash\n   * and returns the current Request.\n   * @example\n   * request.query(\"foo\", \"bar\").execute()\n   */\n  query(name, value) {\n    if (!isUndefined(name)) {\n      if (isUndefined(value)) {\n        if (isObject(name)) {\n          _query.set(this, name);\n          return this;\n        }\n        return _query.get(this)[name];\n      }\n      const existing = _query.get(this);\n      existing[name] = value;\n      return this;\n    }\n\n    return assign({}, _query.get(this));\n  }\n\n  /**\n   * @method\n   * @name userInfo\n   * @returns {String} - returns basic auth credentials in the format\n   * user:password, if both user and password are set.\n   */\n  userInfo() {\n    const u = _user.get(this);\n    const p = _password.get(this);\n\n    if (isString(u) && !isEmpty(u.trim()) && isString(p) && isEmpty(p.trim())) {\n      return `${u}:${p}`;\n    }\n\n    return null;\n  }\n\n  /**\n   * @method\n   * @name authority\n   * @returns {String} - returns the authority portion of the url ([protocol]://[userInfo@]host[:port])\n   */\n  authority() {\n    const pr = _protocol.get(this) ? `${_protocol.get(this)}://` : '';\n    const ui = this.userInfo() ? `${this.userInfo()}@` : '';\n    const h = _host.get(this) || '';\n    const p = _port.get(this) ? `:${_port.get(this)}` : '';\n\n    return pr + ui + h + p;\n  }\n\n  /**\n   * @method\n   * @name path\n   * @returns {String} - returns the path portion of the url\n   */\n  path() {\n    const dir = _directory.get(this) || '';\n    const f = _file.get(this) || '';\n\n    if (endsWith(dir, '/')) {\n      if (startsWith(f, '/')) {\n        return dir + f.substring(1);\n      }\n\n      return dir + f;\n    } else if (startsWith(f, '/')) {\n      return dir + f;\n    }\n\n    return `${dir}/${f}`;\n    return '';\n  }\n\n  /**\n   * @method\n   * @name merge\n   * @param {Url} other - the {@link Url} to merge into this one\n   * @returns {Url} - returns a copy of this {@link Url} with the directory,\n   * file, gragment, path, and query portions from taken from other.  If\n   * any of those properties do not exist in other, they will be removed\n   * from the copy.\n   */\n  merge(other) {\n    const copied = cloneDeep(parts);\n    const otherParts = parseUri(other.toString());\n    const propertiesToMerge = ['directory', 'file', 'fragment', 'path', 'query'];\n    propertiesToMerge.forEach((property) => {\n      if (!!otherParts[property]) {\n        copied[property] = otherParts[property];\n      } else if (!!copied[property]) {\n        delete copied[property];\n      }\n    });\n\n    return new Url(copied);\n  }\n\n  /**\n   * @method\n   * @name toString\n   * @param {Function<Object, String>} serializeQuery - a function that can customize\n   * how the query-string hash is rendered in the resulting url\n   * @returns {String}\n   */\n  toString(serializeQuery) {\n    const auth = this.authority();\n    const p = this.path();\n    const f = this.fragment();\n    const querySerializer = serializeQuery || identity;\n    const q = querySerializer(this.query());\n\n    const fullyQualified = (() => {\n      if (endsWith(auth, '/')) {\n        if (endsWith(p, '/')) {\n          return auth + p.substring(1);\n        }\n\n        return auth + p;\n      } else if (startsWith(p, '/')) {\n        return auth + p;\n      }\n\n      return `${auth}/${p}`;\n    })();\n\n    const queryParts = reduce(q, (accum, value, key) => {\n      let pair = `${encode(key)}=${encode(value)}`;\n\n      accum.push(pair);\n      return accum;\n    }, []);\n\n    const fullyQualifiedWithQuery = (() => {\n      if (!isEmpty(queryParts)) {\n        return `${fullyQualified}?${queryParts.join('&')}`;\n      }\n\n      return fullyQualified;\n    })();\n\n    if (!isEmpty(f)) {\n      return `${fullyQualifiedWithQuery}#${f}`;\n    }\n\n    return fullyQualifiedWithQuery;\n  }\n}\n\n/**\n * @function\n * @name factory\n * @param {Object|String} value - A hash containing the Url parts, or a string\n * representation of a Url\n * @returns {Url}\n */\nUrl.factory = (value) => {\n  if (isString(value)) {\n    return new Url(parseUri(value));\n  }\n  return new Url(value);\n}\n\nexport default Url;\n\n\n\n// WEBPACK FOOTER //\n// ./src/url.js","export default {\n\n  CONTENT_TYPE: \"Content-Type\",\n\n  TRANSFER_ENCODING: \"Transfer-Encoding\"\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/headers.js","import MethodOverride from './method-override';\nimport BodyTransformer from './body-transformer';\nimport XSRF from './xsrf';\nimport ErrorHandling from './error-handling';\n\nexport default {\n  MethodOverride: new MethodOverride(),\n  BodyTransformer: new BodyTransformer(),\n  XSRF: new XSRF(),\n  ErrorHandling: new ErrorHandling()\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/interceptors/index.js","import DefaultSerializer from './default-serializer';\nimport FormDataSerializer from './form-data-serializer';\nimport JsonSerializer from './json-serializer';\nimport TextSerializer from './text-serializer';\n\nexport default {\n  'Default': DefaultSerializer,\n  'Form': FormDataSerializer,\n  'Json': JsonSerializer,\n  'Text': TextSerializer\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/serializers/index.js","import { reduce, startsWith, endsWith } from 'lodash';\n\nexport default {\n  separator: '/',\n\n  join() {\n    const separator = this.separator;\n    const initial = arguments[0];\n    const args = [...arguments].slice(1)\n\n    return reduce(args, (accum, value) => {\n      if (value.trim() != '') {\n        if (endsWith(accum, separator) && startsWith(value, separator)) {\n          accum += value.substring(1);\n        } else if (endsWith(accum, separator) || startsWith(value, separator)) {\n          accum += value;\n        } else {\n          accum += '/' + value;\n        }\n      }\n\n      return accum;\n    }, initial);\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/path.js","import { isObject } from 'lodash';\nimport { isFile, isFormData, isBlob } from '../utilities';\nimport Serializer from '../serializer';\n\n/**\n * @class\n * @name FormDataSerializer\n * @extends Serializer\n */\nexport default class FormDataSerializer extends Serializer {\n  /**\n   * @constructor\n   * @param {String} [contentType] - The value of the Content-Type header\n   */\n  constructor(contentType) {\n    super(contentType || 'multipart/form-data');\n  }\n\n  /**\n   * @method\n   * @name serialize\n   * @param {FormData|Blob|Object} value - The content to convert to a\n   * {@link FormData} value.\n   * @returns {FormData} - The {@link FormData} value to be sent to the server\n   */\n  serialize(value) {\n    if (isFormData(value)) return value;\n\n    const result = new FormData();\n\n    if (isFile(value) || isBlob(value)) {\n      result.append('data', value);\n    }\n\n    if (isObject(value)) {\n      Object.entries(value).forEach((entry) => {\n        result.append(entry[0], entry[1]);\n      });\n    }\n\n    throw `${value} is not an object and cannot be converted to FormData`;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/serializers/form-data-serializer.js","import Serializer from '../serializer';\n\n/**\n * @class\n * @name JsonSerializer\n * @extends Serializer\n */\nexport default class JsonSerializer extends Serializer {\n  /**\n   * @constructor\n   * @param {String} [contentType] - The value of the Content-Type header\n   */\n  constructor(contentType) {\n    super(contentType || 'application/json');\n  }\n\n  /**\n   * @method\n   * @name serialize\n   * @param {Object|String|Number|Array|Boolean} value - The content to convert\n   * to a JSON string\n   * @returns {String} - The serialized JSON string\n   */\n  serialize(value) {\n    return JSON.stringify(value);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/serializers/json-serializer.js","import Serializer from '../serializer';\n\n/**\n * @class\n * @name TextSerializer\n * @extends Serializer\n */\nexport default class TextSerializer extends Serializer {\n  /**\n   * @constructor\n   * @param {String} [contentType] - The value of the Content-Type header\n   */\n  constructor(contentType) {\n    super(contentType || 'text/plain');\n  }\n\n  /**\n   * @method\n   * @name serialize\n   * @param value - The content to be serialized\n   * @returns {String} - The serialized string to be sent to the server\n   */\n  serialize(value) {\n    return value.toString();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/serializers/text-serializer.js","import { isBoolean, isString, isInteger, isArray, isUndefined, assign, defaults, remove } from 'lodash';\nimport Request from './request';\nimport Interceptors from './interceptors';\nimport XHRProvider from './xhr-provider';\nimport Url from './url';\nimport Path from './path';\nimport { PropertyValidationError } from './errors';\nimport { parseUri } from './utilities';\n\nfunction property(key, isValid) {\n  return function(value) {\n    const settings = _settings.get(this);\n\n    if (isUndefined(value)) {\n      return settings[key];\n    }\n\n    if (isValid(value)) {\n      settings[key] = value;\n      return this;\n    }\n\n    throw new PropertyValidationError(key, value);\n  };\n}\n\nfunction generateRequestMethod(method) {\n  return function(url, options = {}) {\n    return this.request(url, assign({ method }, options));\n  };\n}\n\nconst _settings = new WeakMap();\n\n/**\n * An HTTP client.\n * @class\n * @name Http\n */\nclass Http {\n  /**\n   * @constructor\n   * @param {Object} [options] - A hash of settings for this client.\n   */\n  constructor(options = {}) {\n    const initialSettings = assign({}, Http.defaults, options)\n    _settings.set(this, initialSettings);\n  }\n\n  /**\n   * @method\n   * @name baseUrl\n   * @param {String|Http} [url] - the base URL applied by default to all\n   * requests from this client.\n   * @returns {String|Http} - If url is specified, updates the default baseUrl\n   * for all requests created with this client, and returns the client instance.\n   * If value is ommitted, returns the current baseUrl.\n   */\n  baseUrl(url) {\n    return property('baseUrl', isString).call(this, url);\n  }\n\n  /**\n   * @method\n   * @name timeout\n   * @param {Number} [value] - The request timeout in milliseconds\n   * @returns {Number|Http} - If value is specified, updates the default request\n   * timeout for all requests created with this client, and returns the client\n   * instance.  If value is ommitted, returns the current timeout value.\n   */\n  timeout(value) {\n    return property('timeout', isInteger).call(this, value);\n  }\n\n  /**\n   * @method\n   * @name xsrfCookieName\n   * @param {String} [value] - The name of the XSRF cookie\n   * @returns {String|Http} - If the value is specified, sets the name of the XSRF Cookie\n   * and returns the current Http.  If value is ommitted, returns the current name.\n   */\n  xsrfCookieName(value) {\n    return property('xsrfCookieName', isString).call(this, value);\n  }\n\n  /**\n   * @method\n   * @name xsrfHeaderName\n   * @param {String} [value] - The name of the XSRF header\n   * @returns {String|Http} - If the value is specified, sets the name of the XSRF Header\n   * and returns the current Http.  If value is ommitted, returns the current name.\n   */\n  xsrfHeaderName(value) {\n    return property('xsrfHeaderName', isString).call(this, value);\n  }\n\n  /**\n   * @method\n   * @name withCredentials\n   * @param {Boolean} [value] - Flag indicating whether cross-site AccessControl\n   * requests should be made using cookies, authorization headers, or TLS client\n   * certificates.  More detail: https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/withCredentials\n   * @returns {Boolean|Http} - If the value is specified, sets the withCredentials flag\n   * and returns the current Http.  If value is ommitted, returns the current\n   * value of the flag.\n   */\n  withCredentials(value) {\n    return property('withCredentials', isBoolean).call(this, value);\n  }\n\n  /**\n   * @method\n   * @name username\n   * @param {String} [value] - Basic auth username\n   * @returns {String|Http} - If the value is specified, sets the username and returns\n   * the current Http.  If value is ommitted, returns the current username.\n   */\n  username(value) {\n    return property('username', isString).call(this, value);\n  }\n\n  /**\n   * @method\n   * @name password\n   * @param {String} [value] - Basic auth password\n   * @returns {String|Http} - If the value is specified, sets the password and returns\n   * the current Http.  If value is ommitted, returns the current password.\n   */\n  password(value) {\n    return property('password', isString).call(this, value);\n  }\n\n  /**\n   * @method\n   * @name interceptors\n   * @param {Interceptor[]} [values] - An array of interceptors.\n   * @returns {Interceptor[]|Http} - If values is specified, replaces the default\n   * interceptors for all requests from this client, and returns the client\n   * instance.  If values is ommitted, returns the current array of\n   * interceptors.\n   */\n  interceptors(values) {\n    return property('interceptors', isArray).call(this, values);\n  }\n\n  /**\n   * @method\n   * @name addInterceptor\n   * @param {Interceptor} interceptor - Add the interceptor to the end of the\n   * chain of interceptors.\n   * @return {Http} - The current client instance.\n   */\n  addInterceptor(interceptor) {\n    _settings.get(this).interceptors.push(interceptor);\n    return this;\n  }\n\n  /**\n   * @method\n   * @name removeInterceptor\n   * @param {Interceptor} interceptor - Remove the interceptor from the chain of interceptors.\n   * @returns {Http} - The current client instance.\n   */\n  removeInterceptor(interceptor) {\n    const settings = _settings.get(this);\n    settings.interceptors = remove(settings.interceptors, (i) => i === interceptor);\n    return this;\n  }\n\n  /**\n   * @method\n   * @name request\n   * @param {String} url - the URL where the request will be sent.\n   * @param {Object} [options] - add/override settings for this request.\n   * @return {Request}\n   * @example\n   * new Http({ baseUrl: 'http://mydomain.com', timeout: 5000 }).request('/some/stuff', {\n   *   method: 'POST',\n   *   body: { foo: \"bar\", baz: 1 },\n   *   timeout: 10000\n   * })\n   */\n  request(url, options = {}) {\n    const settings = _settings.get(this);\n    let fullUrl = url;\n\n    if (settings.baseUrl) {\n      fullUrl = Path.join(settings.baseUrl, url);\n    }\n\n    const parsed = parseUri(fullUrl);\n    const config = defaults(options, settings);\n\n    assign(parsed.query, options.query);\n    assign(config, { url: new Url(parsed) });\n\n    return new Request(config);\n  }\n\n  /**\n   * @method\n   * @name head\n   * Helper method for request.  Automatically sets method to HEAD.\n   * @param {string} url - the URL where the request will be sent.\n   * @param {Object} [options] - add/override settings for this request.\n   * @return {Request}\n   * @example\n   * new Http({ baseUrl: 'http://mydomain.com', timeout: 5000 }).head('/some/stuff', {\n   *   retries: 2,\n   *   timeout: 10000\n   * })\n   */\n  head(url, options) {\n    return generateRequestMethod('HEAD').call(this, url, options);\n  }\n\n  /**\n   * @method\n   * @name get\n   * Helper method for request.  Automatically sets method to GET.\n   * @param {String} url - the URL where the request will be sent.\n   * @param {Object} [options] - add/override settings for this request.\n   * @return {Request}\n   * @example\n   * new Http({ baseUrl: 'http://mydomain.com', timeout: 5000 }).get('/some/stuff', {\n   *   retries: 2\n   *   timeout: 10000\n   * })\n   */\n  get(url, options) {\n    return generateRequestMethod('GET').call(this, url, options);\n  }\n\n  /**\n   * @method\n   * @name options\n   * Helper method for request.  Automatically sets method to OPTIONS.\n   * @param {String} url - the URL where the request will be sent.\n   * @param {Object} [options] - add/override settings for this request.\n   * @return {Request}\n   * @example\n   * new Http({ baseUrl: 'http://mydomain.com', timeout: 5000 }).head('/some/stuff', {\n   *   retries: 2,\n   *   timeout: 10000\n   * })\n   */\n  options(url, options) {\n    return generateRequestMethod('OPTIONS').call(this, url, options);\n  }\n\n  /**\n   * @method\n   * @name delete\n   * Helper method for request.  Automatically sets method to DELETE.\n   * @param {String} url - the URL where the request will be sent.\n   * @param {Object} [options] - add/override settings for this request.\n   * @return {Request}\n   * @example\n   * new Http({ baseUrl: 'http://mydomain.com', timeout: 5000 }).delete('/some/stuff', {\n   *   retries: 2,\n   *   timeout: 10000\n   * })\n   */\n  delete(url, options) {\n    return generateRequestMethod('DELETE').call(this, url, options);\n  }\n\n  /**\n   * @method\n   * @name trace\n   * Helper method for request.  Automatically sets method to TRACE.\n   * @param {String} url - the URL where the request will be sent.\n   * @param {Object} [options] - add/override settings for this request.\n   * @return {Request}\n   * @example\n   * new Http({ baseUrl: 'http://mydomain.com', timeout: 5000 }).trace('/some/stuff', {\n   *   retries: 2,\n   *   timeout: 10000\n   * })\n   */\n  trace(url, options) {\n    return generateRequestMethod('TRACE').call(this, url, options);\n  }\n\n  /**\n   * @method\n   * @name post\n   * Helper method for request.  Automatically sets method to POST.\n   * @param {String} url - the URL where the request will be sent.\n   * @param {Object} [options] - add/override settings for this request.\n   * @return {Request}\n   * @example\n   * new Http({ baseUrl: 'http://mydomain.com', timeout: 5000 }).post('/some/stuff', {\n   *   body: { foo: \"bar\", baz: 1 },\n   *   timeout: 10000\n   * })\n   */\n  post(url, options) {\n    return generateRequestMethod('POST').call(this, url, options);\n  }\n\n  /** @method\n  * @name put\n  * Helper method for request.  Automatically sets method to PUT.\n  * @param {String} url - the URL where the request will be sent.\n  * @param {Object} [options] - add/override settings for this request.\n  * @return {Request}\n  * @example\n  * new Http({ baseUrl: 'http://mydomain.com', timeout: 5000 }).put('/some/stuff', {\n  *   body: { foo: \"bar\", baz: 1 },\n  *   timeout: 10000\n  * })\n  **/\n  put(url, options) {\n    return generateRequestMethod('PUT').call(this, url, options);\n  }\n\n  /**\n   * @method\n   * @name patch\n   * Helper method for request.  Automatically sets method to PATCH.\n   * @param {String} url - the URL where the request will be sent.\n   * @param {Object} [options] - add/override settings for this request.\n   * @return {Request}\n   * @example\n   * new Http({ baseUrl: 'http://mydomain.com', timeout: 5000 }).patch('/some/stuff', {\n   *   body: { foo: \"bar\", baz: 1 },\n   *   timeout: 10000\n   * })\n   */\n  patch(url, options) {\n    return generateRequestMethod('PATCH').call(this, url, options);\n  }\n}\n\nHttp.defaults = {\n  baseUrl: '',\n  retries: 0,\n  timeout: 30000,\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n  withCredentials: false,\n  interceptors: [\n    Interceptors.MethodOverride,\n    Interceptors.BodyTransformer,\n    Interceptors.XSRF,\n    Interceptors.ErrorHandling\n  ],\n  provider: XHRProvider\n};\n\nexport default Http;\n\n\n\n// WEBPACK FOOTER //\n// ./src/http.js","import Url from './url';\nimport Http from './http';\nimport Headers from './headers';\nimport Interceptor from './interceptor';\nimport Interceptors from './interceptors';\nimport Errors from './errors';\nimport Serializer from './serializer';\nimport Serializers from './serializers';\n\nexport {\n  Url,\n  Http,\n  Headers,\n  Interceptor,\n  Interceptors,\n  Errors,\n  Serializer,\n  Serializers\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import { isObject } from 'lodash';\nimport { isFile, isFormData, isBlob } from '../utilities';\nimport Interceptor from '../interceptor';\n\n/**\n * Tries to automatically detect the response content type and deserialize the\n * raw body into the appropriate type.\n * @class\n * @name BodyTransformer\n */\nexport default class BodyTransformer extends Interceptor {\n  /**\n   * Transforms (or fails) an outgoing request.\n   * @method\n   * @name request\n   * @param {Request} request - The request to be processed\n   * @param {Function<Request>} accept - called on success to process a (potentially transformed) {@link Request}\n   * @param {Function} reject - called on failure to pass an error\n   */\n  request(request, accept, reject) {\n    const body = request.body();\n\n    if (!!body) {\n      const serializer = request.serializer();\n      const contentType = request.contentType();\n\n      request\n        .contentType(contentType || serializer.contentType)\n        .body(serializer.serialize(body));\n    }\n\n    accept(request);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/interceptors/body-transformer.js","import Interceptor from '../interceptor';\n\n/**\n * Rejects a response with a non-20x status-code.\n * @class\n * @name ErrorHandling\n */\nexport default class ErrorHandling extends Interceptor {\n  /**\n   * @method\n   * @name response\n   * @param {Response} response - The response to be processed\n   * @param {Function<Response>} accept - called on success to process a (potentially transformed) {@link Response}\n   * @param {Function} reject - called on failure to pass an error\n   */\n  response(response, accept, reject) {\n    if (response.status() / 100 === 2) {\n      accept(response);\n    } else {\n      reject(response);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/interceptors/error-handling.js","import Interceptor from '../interceptor';\n\nconst BROWSER_METHODS = ['GET', 'POST'];\n\n/**\n * If the HTTP verb is not one understood by Browsers, change the verb\n * to a POST and send the X-HTTP-Method-Override header with the original\n * method.  This should generally be understood by the routers of most\n * server backends.\n * @class\n * @name MethodOverride\n */\nexport default class MethodOverride extends Interceptor {\n  /**\n   * Transforms (or fails) an outgoing request.\n   * @method\n   * @name request\n   * @param {Request} request - The request to be processed\n   * @param {Function<Request>} accept - called on success to process a (potentially transformed) {@link Request}\n   * @param {Function} reject - called on failure to pass an error\n   */\n  request (request, accept, reject) {\n    const originalMethod = request.method();\n\n    if (!BROWSER_METHODS.some(m => m === originalMethod)) {\n      request\n        .method('POST')\n        .header('X-HTTP-Method-Override', originalMethod);\n    }\n\n    accept(request);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/interceptors/method-override.js","import { isUndefined, isString } from 'lodash';\nimport Cookies from 'js-cookie';\nimport Interceptor from '../interceptor';\n\n/**\n * Reads the value from the configured XSRF cookie and sends it back to the\n * server and sends it back in the configured header.\n * @class\n * @name XSRF\n */\nexport default class XSRF extends Interceptor {\n  /**\n   * Transforms (or fails) an outgoing request.\n   * @method\n   * @name request\n   * @param {Request} request - The request to be processed\n   * @param {Function<Request>} accept - called on success to process a (potentially transformed) {@link Request}\n   * @param {Function} reject - called on failure to pass an error\n   */\n  request(request, accept, reject) {\n    const xsrfToken = Cookies.get(request.xsrfCookieName());\n    const xsrfHeader = request.xsrfHeaderName();\n\n    if (!isUndefined(xsrfToken) && isString(xsrfToken)) {\n      request.header(xsrfHeader, xsrfToken);\n    }\n\n    accept(request);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/interceptors/xsrf.js","import { isEmpty, head, tail, partial } from 'lodash';\n\n/**\n * Runs the request interceptors, and requestError interceptors if necessary.\n * @private\n * @class\n * @param {Object[]} interceptors - The array of interceptors to be run\n * @param {Function} accept - Callback that is invoked with the final request\n * object after all interceptors have run successfully.\n * @param {Function} reject - Callback that is invoked with an error object\n * if all of the interceptors fail to recover from an error.\n */\nexport default function RequestInterceptorChain(interceptors, accept, reject) {\n  /**\n   * Handler for a rejected interceptor.  Runs requestError interceptor for\n   * all interceptors following the failure, in an attempt to recover.\n   * If one of the interceptors manages to recover, hop back into the next\n   * interceptor after the initial failure.\n   */\n  function failure(remaining, recover) {\n    return function (error) {\n      function step(rest, err) {\n        if (!isEmpty(rest)) {\n          const interceptor = head(rest);\n          const xs = tail(rest);\n          const transform = interceptor.requestError;\n          const next = partial(step, xs);\n\n          transform(err, recover, next);\n        } else {\n          reject(err);\n        }\n      }\n\n      step(remaining, error);\n    };\n  }\n\n  /** @method\n   * Runs the request through the chain of request interceptors\n   * @name run\n   * @param {Request} request\n   */\n  this.run = function (request) {\n    function step(remaining, next) {\n      if (!isEmpty(remaining)) {\n        const interceptor = head(remaining);\n        const xs = tail(remaining);\n        const transform = interceptor.request;\n        const success = partial(step, xs);\n\n        transform(request, success, failure(xs, success));\n      } else {\n        accept(request);\n      }\n    }\n\n    step(interceptors, request);\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/request-interceptor-chain.js","import { isUndefined, identity, assign, isString, isObject } from 'lodash';\nimport { PropertyValidationError } from './errors';\nimport Path from './path';\nimport Url from './url';\nimport { parseUri } from './utilities';\nimport Serializers from './serializers';\n\nlet _method = new WeakMap();\nlet _headers = new WeakMap();\nlet _timeout = new WeakMap();\nlet _body = new WeakMap();\nlet _serializer = new WeakMap();\nlet _url = new WeakMap();\nlet _interceptors = new WeakMap();\nlet _xsrfCookieName = new WeakMap();\nlet _xsrfHeaderName = new WeakMap();\nlet _withCredentials = new WeakMap();\nlet _username = new WeakMap();\nlet _password = new WeakMap();\nlet _provider = new WeakMap();\n\n/**\n * A Request should only ever be created by an instance of {@link Http}\n * @class\n * @name Request\n */\nexport default class Request {\n  /**\n   * @constructor\n   * @param {Object} config - Override default settings for this Request only.\n   */\n  constructor(config) {\n    _method.set(this, config.method || null);\n    _headers.set(this, config.headers || {});\n    _timeout.set(this, config.timeout || null);\n    _body.set(this, config.body || null);\n    _url.set(this, config.url || null);\n    _interceptors.set(this, config.interceptors || {})\n    _xsrfCookieName.set(this, config.xsrfCookieName);\n    _xsrfHeaderName.set(this, config.xsrfHeaderName);\n    _withCredentials.set(this, !!config.withCredentials);\n    _username.set(this, config.username || null);\n    _password.set(this, config.password || null);\n    _provider.set(this, config.provider);\n  }\n\n  /**\n   * @method\n   * @name method\n   * @param {String} [value] - The HTTP method for this request\n   * @returns {String|Request} - If value is specified, sets the HTTP method\n   * for this request and returns the current Request.  If value is ommitted,\n   * returns the current HTTP method\n   */\n  method(value) {\n    if (isUndefined(value)) {\n     return _method.get(this);\n    }\n\n    _method.set(this, value);\n    return this;\n  }\n\n  /**\n   * @method\n   * @name header\n   * @param {String} name - The name of the header\n   * @param {String} [value] - The value to assign to the header\n   * @returns {String|Request} - If value is specified, sets the header\n   * and returns the current Request.  If value is ommitted, returns the\n   * value for the header.\n   */\n  header(name, value) {\n    let headers = _headers.get(this);\n    if (isUndefined(value)) {\n      return headers[name];\n    }\n    headers[name] = value.toString();\n    return this;\n  }\n\n  /**\n   * @method\n   * @name headers\n   * @param {Object} [value] - The hash of headers to send with this request.\n   * Replaces any existing headers\n   * @returns {Object|Request} - If value is specified, sets the headers\n   * and returns the current Request.  If value is ommitted, returns a copy\n   * of the current headers.\n   */\n  headers(value) {\n    if (isUndefined(value)) {\n      return assign({}, _headers.get(this));\n    }\n\n    _headers.set(this, value);\n    return this;\n  }\n\n  /**\n   * Convenience method for getting/setting the Content-Type header.\n   * @method\n   * @name contentType\n   * @param {String} [value] - The value of the Content-Type header\n   * @returns {String|Request} - If value is specified, sets the\n   * Content-Type header.  If value is ommitted, returns the current value\n   * of the Content-Type header (or undefined);\n   */\n  contentType(value) {\n    const headers = _headers.get(this);\n    const currentEntry = Object.entries(headers).find((header) => header[0].toLowerCase() === 'content-type');\n\n    if (isUndefined(value)) {\n      return currentEntry[0];\n    }\n\n    headers[currentEntry] = value;\n    return this;\n  }\n\n  /**\n   * @method\n   * @name timeout\n   * @param {Number} [value] - The request timeout in milliseconds\n   * @returns {Number|Request} - If value is specified, sets the timeout\n   * for this request. and returns the current request. If value is ommitted,\n   * returns the current timeout value.\n   */\n  timeout(value) {\n    if (isUndefined(value)) {\n      return _timeout.get(this);\n    }\n\n    _timeout.set(this, value);\n    return this;\n  }\n\n  /**\n   * @method\n   * @name body\n   * @param {Serializer} [value] - The serializer for the body\n   * @returns {Serializer|Request} - If value is specified, sets the Serializer\n   * for this request and returns the current Request.  If value is ommitted,\n   * returns the current Serializer\n   */\n  serializer(value) {\n    if (isUndefined(value)) {\n      return _serializer.get(this);\n    }\n\n    _serializer.set(this, value);\n    return this;\n  }\n\n  /**\n   * @method\n   * @name body\n   * @param {Object|FormData|Blob|File|String} [value] - The body for this request\n   * @param {Serializer} [serializer] - The serializer for the body\n   * @returns {Object|FormData|Blob|File|String|Request} - If value is specified, sets the body\n   * for this request and returns the current Request.  If value is ommitted,\n   * returns the current body\n   */\n  body(value, serializer) {\n    if (isUndefined(value)) {\n     return _body.get(this);\n    }\n\n    _body.set(this, value);\n    _serializer.set(this, serializer || new Serializers.Default());\n\n    return this;\n  }\n\n  /**\n   * @method\n   * @name url\n   * @param {Url} [value] - The {@link Url} for this request.\n   * @returns {Url|Request} - If value is specified, sets the {@link Url} for\n   * this request and returns the current Request.  If value is ommitted,\n   * returns the current {@link Url}.\n   */\n  url(value) {\n    if (isUndefined(value)) {\n      return _url.get(this);\n    }\n\n    if (value instanceof Url) {\n      _url.set(this, value);\n      return this;\n    }\n\n    if (isString(value) || isObject(value)) {\n      const newUrl = Url.factory(url);\n      if (newUrl.isAbsolute()) {\n        _url.set(this, newUrl);\n        return this;\n      } else if (_url.get(this) && _url.get().isAbsolute()) {\n        _url.set(this, _url.get(this).merge(newUrl));\n        return this;\n      }\n    }\n\n    throw new PropertyValidationError('url', url);\n  }\n\n  /**\n   * @method\n   * @name interceptors\n   * @param {Interceptor[]} [value] - The set of interceptors to be run against this Request and/or Response\n   * @returns {Interceptor[]|Request} - If value is specified, overrides the current set of interceptors\n   * for this Request and/or Response and returns the current Request.  If value is ommitted,\n   * returns the current set of interceptors.\n   */\n  interceptors(value) {\n    if (isUndefined(value)) {\n      return _interceptors.get(this);\n    }\n    _interceptors.set(this, value);\n    return this;\n  }\n\n  /**\n   * @method\n   * @name xsrfCookieName\n   * @param {String} [value] - The name of the XSRF cookie\n   * @returns {String|Request} - If the value is specified, sets the name of the XSRF Cookie\n   * and returns the current Request.  If value is ommitted, returns the current name.\n   */\n  xsrfCookieName(value) {\n    if (isUndefined(value)) {\n      return _xsrfCookieName.get(this);\n    }\n    _xsrfCookieName.set(this, value);\n    return this;\n  }\n\n  /**\n   * @method\n   * @name xsrfHeaderName\n   * @param {String} [value] - The name of the XSRF header\n   * @returns {String|Request} - If the value is specified, sets the name of the XSRF Header\n   * and returns the current Request.  If value is ommitted, returns the current name.\n   */\n  xsrfHeaderName(value) {\n    if (isUndefined(value)) {\n      return _xsrfHeaderName.get(this);\n    }\n    _xsrfHeaderName.set(this, value);\n    return this;\n  }\n\n  /**\n   * @method\n   * @name withCredentials\n   * @param {Boolean} [value] - Flag indicating whether cross-site AccessControl\n   * requests should be made using cookies, authorization headers, or TLS client\n   * certificates.  More detail: https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/withCredentials\n   * @returns {Boolean|Request} - If the value is specified, sets the withCredentials flag\n   * and returns the current Request.  If value is ommitted, returns the current\n   * value of the flag.\n   */\n  withCredentials(value) {\n    if (isUndefined(value)) {\n      return this.config.withCredentials = value;\n    }\n    this.config.withCredentials = value;\n    return this;\n  }\n\n  /**\n   * @method\n   * @name username\n   * @param {String} [value] - Basic auth username\n   * @returns {String|Request} - If the value is specified, sets the username and returns\n   * the current Request.  If value is ommitted, retursn the current username.\n   */\n  username(value) {\n    if (isUndefined(value)) {\n      return _username.get(this);\n    }\n    _username.set(this, value);\n    return this;\n  }\n\n  /**\n   * @method\n   * @name password\n   * @param {String} [value] - Basic auth password\n   * @returns {String|Request} - If the value is specified, sets the password and returns\n   * the current Request.  If value is ommitted, retursn the current password.\n   */\n  password(value) {\n    if (isUndefined(value)) {\n      return _password.get(this);\n    }\n    _password.set(this, value);\n    return this;\n  }\n\n  /**\n   * @method\n   * @name execute\n   * @returns {Object} - Executes the request and returns an object containing\n   * the response, uploadProgress, and downloadProgress streams.\n   * @example\n   * var streams = request.execute();\n   * streams.flatMap(response => response.body()).forEach((body) => console.log(body));\n   * streams.flatmap(response => response.uploadProgress()).forEach((event) => console.log(event));\n   * streams.flatMap(response => response.downloadProgress()).forEach((event) => console.log(event));\n   */\n  execute() {\n    const provider = _provider.get(this);\n    return provider(this);\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/request.js","import { isEmpty, head, tail, partial } from 'lodash';\n\n/**\n * Runs the response interceptors, and responseError interceptors if necessary.\n * @private\n * @class\n * @param {Interceptor[]} interceptors - The array of interceptors to be run\n * @param {Function} accept - Callback that is invoked with the final response\n * object after all interceptors have run successfully.\n * @param {Function} reject - Callback that is invoked with an error object\n * if all of the interceptors fail to recover from an error.\n */\nexport default function ResponseInterceptorChain(interceptors, accept, reject) {\n  /**\n   * Handler for a rejected interceptor.  Runs responseError interceptor for\n   * all interceptors following the failure, in an attempt to recover.\n   * If one of the interceptors manages to recover, hop back into the next\n   * interceptor after the initial failure.\n   */\n  function failure(remaining, recover) {\n    return function (error) {\n      function step(rest, err) {\n        if (isEmpty(rest)) {\n          const interceptor = head(rest);\n          const xs = tail(rest);\n          const transform = interceptor.responseError;\n          const next = partial(step, xs);\n\n          transform(err, recover, next);\n        } else {\n          reject(err);\n        }\n      }\n\n      step(remaining, error);\n    };\n  }\n\n  /** @method\n   * Runs the response through the chain of response interceptors\n   * @name run\n   * @param {Response} response\n   */\n  this.run = function (response) {\n    function step(remaining, next) {\n      if (!isEmpty(remaining)) {\n        const interceptor = head(remaining);\n        const xs = tail(remaining);\n        const transform = interceptor.response;\n        const success = partial(step, xs);\n\n        transform(response, success, failure(xs, success));\n      } else {\n        accept(response);\n      }\n    }\n\n    step(interceptors, response);\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/response-interceptor-chain.js","import { isUndefined, isFunction } from 'lodash';\nimport Headers from './headers';\n\nlet _status = new WeakMap();\nlet _statusText = new WeakMap();\nlet _headers = new WeakMap();\nlet _body = new WeakMap();\nlet _uploadProgress = new WeakMap();\nlet _downloadProgress = new WeakMap();\nlet _isChunked = new WeakMap();\n\nfunction evaluateLazy(property) {\n  const value = property.get(this);\n  if (!isUndefined(value) && isFunction(value)) {\n    property.set(this, value());\n  }\n  return property.get(this);\n}\n\n/**\n * Immutable response container.  Should only be created by executing a {@link Request}.\n * @class\n * @name Response\n */\nexport default class Response {\n\n  /**\n   * @param {XMLHttpRequest} xhr\n   * @param {Observable<String>} body - An Observable representing the body/entity of the response\n   * @param {Observable<Object>} uploadProgress - An Observable representing a stream of all upload progress events\n   * @param {Observable<Object>} downloadProgress - An Observable representing a stram of all download progress events\n   */\n  constructor(xhr, body, uploadProgress, downloadProgress) {\n    _status.set(this, xhr.status);\n    _statusText.set(this, xhr.statusText);\n    _headers.set(this, xhr.getAllResponseHeaders());\n    _body.set(this, body);\n    _uploadProgress.set(this, uploadProgress);\n    _downloadProgress.set(this, downloadProgress);\n  }\n\n  /**\n   * @method\n   * @name uploadProgress\n   * @returns {Observable<Object>} - an Observable stream of upload progress events\n   */\n  uploadProgress() {\n    return evaluateLazy.call(this, _uploadProgress);\n  }\n\n  /**\n   * @method\n   * @name downloadProgress\n   * @returns {Observable<Object>} - an Observable stream of download progress events\n   */\n  downloadProgress() {\n    return evaluateLazy.call(this, _downloadProgress);\n  }\n\n  /**\n   * @method\n   * @name body\n   * @returns {Observable<String>} - An Observable stream of the response body/entity contents\n   */\n  body() {\n    return evaluateLazy.call(this, _body);\n  }\n\n  /**\n   * @method\n   * @name status\n   * @returns {Number} - The HTTP status code of the response\n   */\n  status() {\n    return _status.get(this);\n  }\n\n  /**\n   * @method\n   * @name statusText\n   * @returns {String} - The status text of the response\n   */\n  statusText() {\n    return _statusText.get(this);\n  }\n\n  /**\n   * @method\n   * @name headers\n   * @returns {Object} - An object containing the response headers\n   * @example\n   * { \"Content-Type\": \"application/json\", \"Content-Length\": \"22\" }\n   */\n  headers() {\n    return _headers.get(this);\n  }\n\n  /**\n   * Look-up the value of an individual resonse header\n   * @method\n   * @name header\n   * @param {String} name - The name of the header to lookup\n   * @returns {String} - The value of the header, or undefined if not found\n   */\n  header(name) {\n    return _headers.get(this)[name];\n  }\n\n  contentType() {\n    const headers = _headers.get(this);\n    const entry = Object.entries(headers)\n      .find((headers) => headers[0].toLowerCase() === 'content-type');\n\n    if (entry) return entry[1];\n  }\n\n  /**\n   * @method\n   * @name isChunked\n   * @returns {Boolean} - Determines if this is a chunked response.  A chunked\n   * response will send each chunk through the {@link body} stream.  A non-chunked\n   * response will only push the final result through the stream.\n   */\n  isChunked() {\n    if (!_isChunked.has(this)) {\n      let transferEncoding = (this.header(Headers.TRANSFER_ENCODING) || '').toLowerCase();\n      let isChunked = transferEncoding.indexOf('chunked') > -1 ||\n                      transferEncoding.indexOf('identity') > -1;\n      // Detect SPDY. It uses chunked transfer but doesn't set the Transfer-Encoding header.\n      if (!isChunked) {\n        let c = window.chrome;\n        let loadTimes = c && c.loadTimes && c.loadTimes();\n        let chromeSpdy = loadTimes && loadTimes.wasFetchedViaSpdy;\n        let ffSpdy = !!this.header('X-Firefox-Spdy');\n        isChunked = ffSpdy || chromeSpdy;\n      }\n      _isChunked.set(this, isChunked);\n    }\n    return _isChunked.get(this);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/response.js","import { isObject, isString } from 'lodash';\nimport { isFile, isFormData, isBlob } from '../utilities';\nimport { NoSerializerFoundError } from '../errors';\nimport Serializer from '../serializer';\nimport JsonSerializer from './json-serializer';\nimport FormDataSerializer from './form-data-serializer';\nimport TextSerializer from './text-serializer';\n\nconst contentTypeSerializers = {\n  'text/json': JsonSerializer,\n  'application/json': JsonSerializer,\n  'multipart/form-data': FormDataSerializer,\n  'application/x-www-urlencoded': FormDataSerializer,\n  'text/plain': TextSerializer\n}\n\nfunction autoDetect(body, contentType) {\n  if (isObject(body)) {\n    if (isFile(body) || isBlob(body) || Object.entries(body).some((entry) => isFile(entry[1]) || isBlob(entry[1]))) {\n      return new FormDataSerializer(contentType);\n    }\n  }\n\n  if (isString(body)) {\n    return new TextSerializer('text/plain');\n  }\n\n  if (!!contentType && contentTypeSerializers[contentType.toLowerCase()]) {\n    const result = contentTypeSerializers[contentType.toLowerCase()];\n    if (!!result) return result;\n    throw new NoSerializerFoundError(contentType);\n  }\n\n  throw new NoSerializerFoundError('unknown');\n}\n\n/**\n * Serializer that attempts uses the given contentType, or tries to detect\n * the content type in order to delegate to the appropriate built-in\n * {@link Serializer}\n * @class\n * @name DefaultSerializer\n * @extends Serializer\n */\nexport default class DefaultSerializer extends Serializer {\n  /**\n   * @method\n   * @name serialize\n   * @param value - the value to be serialized\n   * @returns the serialized content\n   */\n  serialize(value) {\n    const delegate = autoDetect(value, this.contentType)\n    return delegate.serialize(value);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/serializers/default-serializer.js","import { isInteger, partial, noop } from 'lodash';\n\nconst STATE = {\n  UNSENT: 0,\n  OPEN: 1,\n  HEADERS_RECEIVED: 2,\n  LOADING: 3,\n  DONE: 4\n}\n\n/**\n * Internal class used to construct and XMLHttpRequest\n * @private\n * @class\n * @name XHRBuilder\n */\nexport default class XHRBuilder {\n  constructor() {\n    this.headersReceived = noop;\n    this.downloadProgress = noop;\n    this.uploadProgress = noop;\n    this.complete = noop;\n    this.progress = noop;\n    this.error = noop;\n    this.abort = noop;\n    this.load = noop;\n    this.loadEnd = noop;\n  }\n\n  onHeadersReceived(fn) {\n    this.headersReceived = fn;\n    return this;\n  }\n\n  onDownloadProgress(fn) {\n    this.downloadProgress = fn;\n    return this;\n  }\n\n  onUploadProgress(fn) {\n    this.uploadProgress = fn;\n    return this;\n  }\n\n  onError(fn) {\n    this.error = fn;\n    return this;\n  }\n\n  onAbort(fn) {\n    this.abort = fn;\n    return this;\n  }\n\n  onLoad(fn) {\n    this.load = fn;\n    return this;\n  }\n\n  onLoadEnd(fn) {\n    this.loadEnd = fn;\n    return this;\n  }\n\n  request(req) {\n    this.req = req;\n    return this;\n  }\n\n  build() {\n    const self = this;\n    const request = this.req;\n    const xhr = new XMLHttpRequest();\n\n    const openArgs = [request.method(), request.url().toString(), true];\n    if (request.username()) {\n      openArgs.push(request.username());\n\n      if (request.password()) {\n        openArgs.push(request.password());\n      }\n    }\n\n    xhr.open(...openArgs);\n\n    if (isInteger(request)) {\n      xhr.timeout = request.timeout();\n    }\n\n    const headers = request.headers();\n\n    Object.keys(headers).forEach(headerName => {\n      xhr.setRequestHeader(headerName, headers[headerName]);\n    });\n\n    if (xhr.upload) {\n      xhr.upload.addEventListener('progress', self.uploadProgress);\n      xhr.upload.addEventListener('error', self.error);\n      xhr.upload.addEventListener('abort', self.abort);\n    }\n\n    xhr.addEventListener('progress', self.downloadProgress);\n    xhr.addEventListener('error', self.error);\n    xhr.addEventListener('abort', self.abort);\n    xhr.addEventListener('load', self.load);\n    xhr.addEventListener('loadend', self.loadEnd);\n\n    xhr.addEventListener('readystatechange', (evt) => {\n      if (xhr.readyState === STATE.HEADERS_RECEIVED) {\n        self.headersReceived(evt);\n      }\n    });\n\n    return xhr;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/xhr-builder.js","import { partial, isInteger } from 'lodash';\nimport Rx from 'rxjs';\nimport XHRBuilder from './xhr-builder';\nimport Response from './response';\nimport RequestInterceptorChain from './request-interceptor-chain';\nimport ResponseInterceptorChain from './response-interceptor-chain';\n\n/** @function\n * Provider-implementation for browser-based clients.  Providers are simply\n * functions that take in a {@link Request} and return an RxJS Observable\n * that eventually contains the {@link Response}.\n * @name XHRProvider\n * @param {Request} request\n * @returns {Observable<Response>}\n */\nexport default function XHRProvider(request) {\n  const interceptors = request.interceptors();\n\n  function attempt(observable) {\n    let response;\n    let offset = 0;\n    let body = new Rx.Subject();\n    let uploadProgress = new Rx.Subject();\n    let downloadProgress = new Rx.Subject();\n    let all = [observable, body, uploadProgress, downloadProgress];\n\n    function errorAll(err) {\n      all.forEach(o => o.error(err));\n    }\n\n    function completeAll() {\n      all.forEach(o => o.complete());\n    }\n\n    function nextChunk() {\n      let chunk = xhr.responseText.slice(offset);\n      offset = xhr.responseText.length;\n      body.next(chunk);\n    }\n\n    const xhr = new XHRBuilder()\n      .request(request)\n      .onHeadersReceived((evt) => {\n        response = new Response(\n          xhr,\n          body,\n          uploadProgress,\n          downloadProgress\n        );\n\n        const responseChain = new ResponseInterceptorChain(\n          interceptors,\n          (transformedResponse) => observable.next(transformedResponse),\n          Rx.Observable.throw\n        );\n\n        responseChain.run(response);\n      })\n      .onUploadProgress((evt) => {\n        uploadProgress.next(evt);\n      })\n      .onDownloadProgress((evt) => {\n        downloadProgress.next(evt);\n        if (response.isChunked()) {\n          nextChunk();\n        }\n      })\n      .onLoad((evt) => {\n        if (response.isChunked()) {\n          if (xhr.responseText.length > offset) {\n            nextChunk();\n          }\n        } else {\n          body.next(xhr.responseText);\n        }\n      })\n      .onError(Rx.Observable.throw)\n      .onAbort(errorAll)\n      .onLoadEnd(completeAll)\n      .build();\n\n    const success = transformed => {\n      if (!!transformed.body()) xhr.send(transformed.body());\n      else xhr.send();\n    };\n\n    const requestChain = new RequestInterceptorChain(\n      interceptors,\n      success,\n      (err) => {\n        Rx.Observable.throw(err);\n        completeAll();\n      }\n    );\n\n    requestChain.run(request);\n  }\n\n  return Rx.Observable.create(attempt);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/xhr-provider.js","module.exports = __WEBPACK_EXTERNAL_MODULE_26__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"Cookies\",\"commonjs2\":[\"js-cookie\"],\"commonjs\":\"js-cookie\",\"amd\":\"js-cookie\"}\n// module id = 26\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_27__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"Rx\",\"commonjs2\":[\"rxjs\"],\"commonjs\":\"rxjs\",\"amd\":\"rxjs\"}\n// module id = 27\n// module chunks = 0"],"sourceRoot":""}