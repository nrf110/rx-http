{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 16441d77c5e955d12326","webpack:///external {\"root\":\"_\",\"commonjs2\":[\"lodash\"],\"commonjs\":\"lodash\",\"amd\":\"lodash\"}","webpack:///./src/errors.js","webpack:///./src/utilities.js","webpack:///./src/interceptor.js","webpack:///./src/serializer.js","webpack:///./src/serializers/index.js","webpack:///./src/url.js","webpack:///./src/path.js","webpack:///./src/headers.js","webpack:///./src/interceptors/index.js","webpack:///./src/providers/browser/index.js","webpack:///./src/providers/browser/xhr/index.js","webpack:///external {\"root\":\"Rx\",\"commonjs2\":[\"rxjs\"],\"commonjs\":\"rxjs\",\"amd\":\"rxjs\"}","webpack:///./src/http.js","webpack:///./src/providers/index.js","webpack:///./src/index.js","webpack:///./src/interceptors/body-transformer.js","webpack:///./src/interceptors/error-handling.js","webpack:///./src/interceptors/method-override.js","webpack:///./src/interceptors/xsrf.js","webpack:///./src/providers/browser/xhr/xhr-builder.js","webpack:///./src/request-interceptor-chain.js","webpack:///./src/request.js","webpack:///./src/response-interceptor-chain.js","webpack:///./src/response.js","webpack:///./src/serializers/form-data-serializer.js","webpack:///./src/serializers/json-serializer.js","webpack:///./src/serializers/text-serializer.js","webpack:///external {\"root\":\"Cookies\",\"commonjs2\":[\"js-cookie\"],\"commonjs\":\"js-cookie\",\"amd\":\"js-cookie\"}"],"names":["CustomError","message","name","constructor","stack","Error","prototype","Object","create","NotImplementedError","ConnectionError","url","PropertyValidationError","property","value","msg","NoSerializerFoundError","contentType","NoDeserializerFoundError","isFile","isFormData","isBlob","isNonEmptyString","isValidPort","mapProperty","parseHeaders","parseUri","toString","call","trim","member","isValid","val","get","set","existing","rawHeaders","headers","headerLines","split","forEach","line","idx","indexOf","headerName","substring","headerValue","str","o","options","m","parser","strictMode","exec","uri","i","key","q","replace","$0","$1","$2","strict","loose","Interceptor","request","accept","reject","error","response","Serializer","encode","encodeURIComponent","_protocol","WeakMap","_user","_password","_host","_port","_directory","_file","_fragment","_query","Url","parts","protocol","user","password","host","port","directory","file","fragment","query","isAbsolute","u","p","pr","ui","userInfo","h","dir","f","join","other","copied","assign","otherParts","propertiesToMerge","serializeQuery","auth","authority","path","querySerializer","fullyQualified","queryParts","accum","pair","push","fullyQualifiedWithQuery","factory","parsed","result","separator","initial","arguments","args","slice","joined","CONTENT_TYPE","TRANSFER_ENCODING","MethodOverride","BodyTransformer","XSRF","ErrorHandling","provider","XHRProvider","interceptors","attempt","observable","offset","body","Subject","uploadProgress","downloadProgress","BehaviorSubject","loaded","total","all","failed","responseError","err","complete","completeAll","errorAll","nextChunk","chunk","xhr","responseText","length","next","onHeadersReceived","evt","status","statusText","getAllResponseHeaders","responseChain","transformedResponse","run","onUploadProgress","onDownloadProgress","isChunked","onLoad","onError","onAbort","onLoadEnd","build","success","transformed","send","requestChain","Observable","generateRequestMethod","method","_baseUrl","_timeout","_headers","_xsrfCookieName","_xsrfHeaderName","_withCredentials","_interceptors","_provider","Http","baseUrl","timeout","xsrfCookieName","xsrfHeaderName","withCredentials","defaults","values","interceptor","current","updated","filter","self","fullUrl","opts","Browser","XHR","Headers","Interceptors","Errors","Serializers","Providers","contentTypeSerializers","Json","Form","Text","autoDetect","toLowerCase","entries","some","entry","serializer","serialize","bodyTransformer","Math","floor","errorHandling","BROWSER_METHODS","originalMethod","methodOverride","xsrfToken","xsrfHeader","xsrf","STATE","UNSENT","OPEN","HEADERS_RECEIVED","LOADING","DONE","XHRBuilder","headersReceived","progress","abort","load","loadEnd","fn","req","XMLHttpRequest","credentials","btoa","responseType","upload","addEventListener","readyState","open","keys","setRequestHeader","RequestInterceptorChain","failure","remaining","recover","step","rest","xs","transform","requestError","_method","_responseType","_body","_serializer","_url","_uploadProgress","Request","currentEntry","find","header","currentSerializer","newUrl","currentUrl","merge","ResponseInterceptorChain","_status","_statusText","_downloadProgress","_isChunked","evaluateLazy","Response","has","transferEncoding","c","window","chrome","loadTimes","chromeSpdy","wasFetchedViaSpdy","ffSpdy","FormDataSerializer","FormData","append","JsonSerializer","JSON","stringify","TextSerializer"],"mappings":"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","file":"rx-http.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"lodash\"), require(\"rxjs\"), require(\"js-cookie\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"rx-http\", [\"lodash\", \"rxjs\", \"js-cookie\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"rx-http\"] = factory(require(\"lodash\"), require(\"rxjs\"), require(\"js-cookie\"));\n\telse\n\t\troot[\"rx-http\"] = factory(root[\"_\"], root[\"Rx\"], root[\"Cookies\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_12__, __WEBPACK_EXTERNAL_MODULE_28__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 15);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 16441d77c5e955d12326","module.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"_\",\"commonjs2\":[\"lodash\"],\"commonjs\":\"lodash\",\"amd\":\"lodash\"}\n// module id = 0\n// module chunks = 0","class CustomError {\n  constructor(message) {\n    this.name = this.constructor.name;\n    this.message = message;\n    this.stack = (new Error(message)).stack;\n  }\n}\nCustomError.prototype = Object.create(Error.prototype);\nCustomError.prototype.constructor = CustomError;\n\n/**\n * @class\n * @name NotImplementedError\n */\nclass NotImplementedError extends CustomError {\n  constructor(message = 'Not Implemented') {\n    super(message);\n  }\n}\n\n/**\n * @class\n * @name ConnectionError\n */\nclass ConnectionError extends CustomError {\n  constructor(url, message) {\n    super(message || `Error connecting to ${url}`);\n    this.url = url;\n  }\n}\n\n/**\n * @class\n * @name PropertyValidationError\n */\nclass PropertyValidationError extends CustomError {\n  /**\n   * @constructor\n   * @param {String} - property name\n   * @param value\n   */\n  constructor(property, value, msg) {\n    const message = msg || `Value ${value} is not valid for property ${property}`;\n    super(message);\n    this.property = property;\n    this.value = value;\n  }\n}\n\n/**\n * @class\n * @name NoSerializerFoundError\n */\nclass NoSerializerFoundError extends CustomError {\n  constructor(contentType) {\n    super(`No serializer found for content type ${contentType}`);\n    this.contentType = contentType;\n  }\n}\n\n/**\n * @class\n * @name NoDeserializerFoundError\n */\nclass NoDeserializerFoundError extends CustomError {\n  constructor(contentType) {\n    super(`No deserializer found for content type ${contentType}`);\n    this.contentType = contentType;\n  }\n}\n\nexport default {\n  NotImplementedError,\n  ConnectionError,\n  PropertyValidationError,\n  NoSerializerFoundError,\n  NoDeserializerFoundError\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/errors.js","import { isString, isObject, isEmpty, isUndefined, isInteger, assign } from 'lodash';\nimport Errors from 'errors';\n\n/** @private **/\nexport function isFile(value) {\n  return toString.call(value) === '[object File]';\n}\n\n/** @private **/\nexport function isFormData(value) {\n  return toString.call(value) === '[object FormData]';\n}\n\n/** @private **/\nexport function isBlob(value) {\n  return toString.call(value) === '[object Blob]';\n}\n\n/** @private **/\nexport function isNonEmptyString(value) {\n  return isString(value) && !isEmpty(value.trim());\n}\n\nexport function isValidPort(value) {\n  return (isInteger(value) && value > 0) || isNonEmptyString(value);\n}\n\n/** @private **/\nexport function property(name, member, value, isValid = (val) => true) {\n  if (isUndefined(value)) {\n    return member.get(this);\n  }\n\n  if (isValid(value)) {\n    member.set(this, value);\n    return this;\n  } else {\n    throw new Errors.PropertyValidationError(name, value);\n  }\n}\n\n/** @private **/\nexport function mapProperty(member, name, value) {\n  if (!isUndefined(name)) {\n    if (isUndefined(value)) {\n      if (isObject(name)) {\n        // 'name' is actually the entire hash to be set\n        member.set(this, name);\n        return this;\n      }\n      // name is the string key to get the value of\n      return member.get(this)[name];\n    }\n    // 'name' and 'value' were both given.  Set the 'name' key to the new value\n    const existing = member.get(this);\n    existing[name] = value;\n    member.set(this, existing);\n    return this;\n  }\n\n  // no name or value given, return a copy of the hash\n  return assign({}, member.get(this));\n}\n\n/** @private **/\nexport function parseHeaders(rawHeaders) {\n  const headers = {};\n  if (rawHeaders) {\n    const headerLines = rawHeaders.split('\\u000d\\u000a');\n    headerLines.forEach((line) => {\n      const idx = line.indexOf(':');\n      if (idx > 0) {\n        const headerName = line.substring(0, idx);\n        const headerValue = line.substring(idx + 2);\n        headers[headerName] = headerValue;\n      }\n    });\n  }\n  return headers;\n}\n\n\n/** parseUri 1.2.2\n * (c) Steven Levithan <stevenlevithan.com>\n * MIT License\n * @private\n */\nexport function parseUri(str) {\n  let\to = parseUri.options;\n  let m = o.parser[o.strictMode ? 'strict' : 'loose'].exec(str);\n  let uri = {};\n  let i = 14;\n\n  while (i--) uri[o.key[i]] = m[i] || '';\n\n  uri[o.q.name] = {};\n  uri[o.key[12]].replace(o.q.parser, function ($0, $1, $2) {\n    if ($1) uri[o.q.name][$1] = $2;\n  });\n\n  return uri;\n};\n\nparseUri.options = {\n  strictMode: false,\n  key: [\n    'source',\n    'protocol',\n    'authority',\n    'userInfo',\n    'user',\n    'password',\n    'host',\n    'port',\n    'relative',\n    'path',\n    'directory',\n    'file',\n    'search',\n    'fragment'\n  ],\n  q: {\n    name: 'query',\n    parser: /(?:^|&)([^&=]*)=?([^&]*)/g\n  },\n  parser: {\n    strict: /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?))?((((?:[^?#\\/]*\\/)*)([^?#]*))(?:\\?([^#]*))?(?:#(.*))?)/,\n    loose: /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/utilities.js","/**\n * Base class to be inherited by Interceptors\n * @class\n * @name Interceptor\n */\nexport default class Interceptor {\n  /**\n   * Transforms (or fails) an outgoing request.\n   * @method\n   * @name request\n   * @param {Request} request - The request to be processed\n   * @param {Function<Request>} accept - called on success to process a (potentially transformed) {@link Request}\n   * @param {Function} reject - called on failure to pass an error\n   */\n  request(request, accept, reject) {\n    accept(request);\n  }\n\n\n  /**\n   * Try to recover from a request error so processing can resume.\n   * @method\n   * @name requestError\n   * @param error - The error to be processed\n   * @param {Function} accept - called on success if we were able to recover\n   * @param {Function} reject - called on failure to pass an error\n   */\n  requestError(error, accept, reject) {\n    reject(error);\n  }\n\n  /**\n   * @method\n   * @name response\n   * @param {Response} response - The response to be processed\n   * @param {Function<Response>} accept - called on success to process a (potentially transformed) {@link Response}\n   * @param {Function} reject - called on failure to pass an error\n   */\n  response(response, accept, reject) {\n    accept(response);\n  }\n\n  /**\n   * Try to recover from a response error so processing can resume.\n   * @method\n   * @name responseError\n   * @param error - The error to be processed\n   * @param {Function} accept - called on success if we were able to recover\n   * @param {Function} reject - called on failure to pass an error\n   */\n  responseError(error, accept, reject) {\n    reject(error);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/interceptor.js","import Errors from './errors';\n\n/**\n * Base class for {@link Request} body serializers\n * @class\n * @name Serializer\n */\nexport default class Serializer {\n  /**\n   * @constructor\n   * @param {String} [contentType] - The value of the Content-Type header\n   */\n  constructor(contentType) {\n    if (!!contentType) this.contentType = contentType;\n  }\n\n  /**\n   * @method\n   * @name serialize\n   * @param value - The content to be serialized\n   * @returns - The serialized content\n   */\n  serialize(value) {\n    throw new Errors.NotImplementedError();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/serializer.js","import FormDataSerializer from './form-data-serializer';\nimport JsonSerializer from './json-serializer';\nimport TextSerializer from './text-serializer';\n\nexport default {\n  'Form': FormDataSerializer,\n  'Json': JsonSerializer,\n  'Text': TextSerializer\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/serializers/index.js","import {\n  isObject,\n  isString,\n  isUndefined,\n  isEmpty,\n  reduce,\n  endsWith,\n  startsWith,\n  identity,\n  cloneDeep\n} from 'lodash';\nimport Path from './path';\nimport { parseUri, isNonEmptyString, isValidPort, property, mapProperty } from './utilities';\n\nfunction encode(val) {\n  return encodeURIComponent(val)\n    .replace(/%40/gi, '@')\n    .replace(/%3A/gi, ':')\n    .replace(/%24/g, '$')\n    .replace(/%2C/gi, ',')\n    .replace(/%20/g, '+')\n    .replace(/%5B/gi, '[')\n    .replace(/%5D/gi, ']');\n}\n\nconst _protocol = new WeakMap();\nconst _user = new WeakMap();\nconst _password = new WeakMap();\nconst _host = new WeakMap();\nconst _port = new WeakMap();\nconst _directory = new WeakMap();\nconst _file = new WeakMap();\nconst _fragment = new WeakMap();\nconst _query = new WeakMap();\n\n/**\n * @class\n * @name Url\n * @param {Object} parts\n */\nclass Url {\n  /**\n   * @constructor\n   * @param {Object} parts\n   */\n  constructor(parts = {}) {\n    if (!!parts.protocol) this.protocol(parts.protocol);\n    if (!!parts.user) this.user(parts.user);\n    if (!!parts.password) this.password(parts.password);\n    if (!!parts.host) this.host(parts.host);\n    if (!!parts.port) this.port(parts.port);\n    if (!!parts.directory) this.directory(parts.directory);\n    if (!!parts.file) this.file(parts.file);\n    if (!!parts.fragment) this.fragment(parts.fragment);\n    this.query(parts.query || {});\n  }\n\n  /**\n   * @method\n   * @name protocol\n   * @param {String} [value]\n   * @returns {Url|String} - If value is specified, sets the protocol for the url\n   * and returns the current instance.  If value is ommitted, returns the\n   * current protocol.\n   */\n  protocol(value) {\n    return property.call(this, 'protocol', _protocol, value, isNonEmptyString);\n  }\n\n  /**\n   * @method\n   * @name user\n   * @param {String} [value]\n   * @returns {Url|String} - If value is specified, sets the user and returns\n   * the current instance.  If value is ommitted, returns the current user.\n   */\n  user(value) {\n    return property.call(this, 'user', _user, value, isNonEmptyString);\n  }\n\n  /**\n   * @method\n   * @name password\n   * @param {String} [value]\n   * @returns {Url|String} - If value is specified, sets the password and returns\n   * the current instance.  If value is ommitted, returns the current password.\n   */\n  password(value) {\n    return property.call(this, 'password', _password, value, isNonEmptyString);\n  }\n\n  /**\n   * @method\n   * @name host\n   * @param {String} [value]\n   * @returns {Url|String} - If value is specified, sets the host and returns\n   * the current instance.  If value is ommitted, returns the current host.\n   */\n  host(value) {\n    return property.call(this, 'host', _host, value, isNonEmptyString);\n  }\n\n  /**\n   * @method\n   * @name port\n   * @param {String|Number} [value]\n   * @returns {Url|String|Number} - If value is specified, sets the port and returns\n   * the current instance.  If value is ommitted, returns the current port.\n   */\n  port(value) {\n    return property.call(this, 'port', _port, value, isValidPort);\n  }\n\n  /**\n   * @method\n   * @name directory\n   * @param {String} [value]\n   * @returns {Url|String} - If value is specified, sets the directory and returns\n   * the current instance.  If value is ommitted, returns the current directory.\n   */\n  directory(value) {\n    return property.call(this, 'directory', _directory, value, isString);\n  }\n\n  /**\n   * @method\n   * @name file\n   * @param {String} [value]\n   * @returns {Url|String} - If value is specified, sets the file and returns\n   * the current instance.  If value is ommitted, returns the current file.\n   */\n  file(value) {\n    return property.call(this, 'file', _file, value, isString);\n  }\n\n  /**\n   * @method\n   * @name fragment\n   * @param {String} [value]\n   * @returns {Url|String} - If value is specified, sets the fragment and returns\n   * the current instance.  If value is ommitted, returns the current fragment.\n   */\n  fragment(value) {\n    return property.call(this, 'fragment', _fragment, value, isString);\n  }\n\n  /**\n   * @method\n   * @name isAbsolute\n   * @returns {Boolean} - true if the url is absolute, false if it is relative.\n   */\n  isAbsolute() {\n    return !!this.host();\n  }\n\n  /**\n   * @method\n   * @name isRelative\n   * @returns {Boolean} - true if the url is relative, false if it is absolute.\n   */\n  isRelative() {\n    return !this.isAbsolute();\n  }\n\n  /**\n   * @method\n   * @name query\n   * @param {String|Object} [name] - The name of the query-string parameter\n   * @param [value] - The value of the query-string parameter\n   * @returns {Object|String|Request} -\n   * If no parameters are specified - returns a copy of the entire query hash.\n   * @example\n   * request.query() // returns { \"foo\": \"bar\" }\n   * If only name is specified, and name is a string - returns the value for the key in the query hash.\n   * @example\n   * request.query(\"foo\") // returns \"bar\"\n   * If only name is specified, and name is an object - replaces the entire query hash\n   * and returns the current Request.\n   * @example\n   * request.query({ \"foo\": \"bar\", \"baz\": 1 }).execute()\n   * If name and value are specified - sets the value of name in the query hash\n   * and returns the current Request.\n   * @example\n   * request.query(\"foo\", \"bar\").execute()\n   */\n  query(name, value) {\n    return mapProperty.call(this, _query, name, value);\n  }\n\n  /**\n   * @method\n   * @name userInfo\n   * @returns {String} - returns basic auth credentials in the format\n   * user:password, if both user and password are set.\n   */\n  userInfo() {\n    const u = _user.get(this);\n    const p = _password.get(this);\n\n    if (isNonEmptyString(u) && isNonEmptyString(p)) {\n      return `${u}:${p}`;\n    }\n\n    return null;\n  }\n\n  /**\n   * @method\n   * @name authority\n   * @returns {String} - returns the authority portion of the url ([protocol]://[userInfo@]host[:port])\n   */\n  authority() {\n    const pr = _protocol.get(this) ? `${_protocol.get(this)}://` : '';\n    const ui = this.userInfo() ? `${this.userInfo()}@` : '';\n    const h = _host.get(this) || '';\n    const p = _port.get(this) ? `:${_port.get(this)}` : '';\n\n    return pr + ui + h + p;\n  }\n\n  /**\n   * @method\n   * @name path\n   * @returns {String} - returns the path portion of the url\n   */\n  path() {\n    const dir = _directory.get(this) || '';\n    const f = _file.get(this) || '';\n\n    return Path.join(dir, f);\n  }\n\n  /**\n   * @method\n   * @name merge\n   * @param {Url} other - the {@link Url} to merge into this one\n   * @returns {Url} - returns a copy of this {@link Url} with the directory,\n   * file, gragment, path, and query portions from taken from other.  If\n   * any of those properties do not exist in other, they will be removed\n   * from the copy.\n   */\n  merge(other) {\n    const copied = Object.assign(\n      {},\n      { protocol: _protocol.get(this) },\n      { user: _user.get(this) },\n      { password: _password.get(this) },\n      { host: _host.get(this) },\n      { port: _port.get(this) },\n      { directory: _directory.get(this) },\n      { file: _file.get(this) },\n      { fragment: _fragment.get(this) },\n      { query: _query.get(this) }\n    );\n\n    const otherParts = parseUri(other.toString());\n    const propertiesToMerge = ['directory', 'file', 'fragment', 'query'];\n    propertiesToMerge.forEach((property) => {\n      if (!!otherParts[property]) {\n        copied[property] = otherParts[property];\n      }\n    });\n\n    return new Url(copied);\n  }\n\n  /**\n   * @method\n   * @name toString\n   * @param {Function<Object, String>} serializeQuery - a function that can customize\n   * how the query-string hash is rendered in the resulting url\n   * @returns {String}\n   */\n  toString(serializeQuery) {\n    const auth = this.authority();\n    const p = this.path();\n    const f = this.fragment();\n    const querySerializer = serializeQuery || identity;\n    const q = querySerializer(this.query());\n\n    const fullyQualified = Path.join(auth, p);\n\n    const queryParts = reduce(q, (accum, value, key) => {\n      let pair = `${encode(key)}=${encode(value)}`;\n\n      accum.push(pair);\n      return accum;\n    }, []);\n\n    const fullyQualifiedWithQuery = (() => {\n      if (!isEmpty(queryParts)) {\n        return `${fullyQualified}?${queryParts.join('&')}`;\n      }\n\n      return fullyQualified;\n    })();\n\n    if (!isEmpty(f)) {\n      return `${fullyQualifiedWithQuery}#${f}`;\n    }\n\n    return fullyQualifiedWithQuery;\n  }\n}\n\n/**\n * @function\n * @name factory\n * @param {Object|String} value - A hash containing the Url parts, or a string\n * representation of a Url\n * @returns {Url}\n */\nUrl.factory = (value) => {\n  if (isString(value)) {\n    const parsed = parseUri(value);\n    const result = new Url(parsed);\n    return result;\n  } else {\n    const result = new Url(value);\n    return result;\n  }\n}\n\nexport default Url;\n\n\n\n// WEBPACK FOOTER //\n// ./src/url.js","import { reduce, startsWith, endsWith } from 'lodash';\n\nexport default {\n  separator: '/',\n\n  join() {\n    const separator = this.separator;\n    const initial = arguments[0];\n    const args = [...arguments].slice(1)\n\n    let joined = reduce(args, (accum, value) => {\n      if (value.trim() != '') {\n        if (endsWith(accum, separator) && startsWith(value, separator)) {\n          accum += value.substring(1);\n        } else if (endsWith(accum, separator) || startsWith(value, separator)) {\n          accum += value;\n        } else {\n          accum += '/' + value;\n        }\n      }\n\n      return accum;\n    }, initial);\n\n    while (endsWith(joined, separator)) {\n      joined = joined.slice(0, -1);\n    }\n\n    return joined;\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/path.js","export default {\n\n  CONTENT_TYPE: \"Content-Type\",\n\n  TRANSFER_ENCODING: \"Transfer-Encoding\"\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/headers.js","import { methodOverride } from './method-override';\nimport { bodyTransformer } from './body-transformer';\nimport { xsrf } from './xsrf';\nimport { errorHandling } from './error-handling';\n\nexport default {\n  MethodOverride: methodOverride,\n  BodyTransformer: bodyTransformer,\n  XSRF: xsrf,\n  ErrorHandling: errorHandling\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/interceptors/index.js","import XHRProvider from './xhr';\n\nconst provider = (() => {\n  // TODO: Implement FetchProvider and use feature-detection to determine which to use\n  return XHRProvider;\n})();\n\nexport default provider;\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/browser/index.js","import { partial, isInteger } from 'lodash';\nimport Rx from 'rxjs';\nimport XHRBuilder from './xhr-builder';\nimport Response from '../../../response';\nimport RequestInterceptorChain from '../../../request-interceptor-chain';\nimport ResponseInterceptorChain from '../../../response-interceptor-chain';\nimport { parseHeaders } from '../../../utilities';\n\n/** @function\n * Provider-implementation for browser-based clients.  Providers are simply\n * functions that take in a {@link Request} and return an RxJS Observable\n * that eventually contains the {@link Response}.\n * @name XHRProvider\n * @param {Request} request\n * @returns {Observable<Response>}\n */\nexport default function XHRProvider(request) {\n  const interceptors = request.interceptors();\n\n  function attempt(observable) {\n    let response;\n    let offset = 0;\n    let body = new Rx.Subject();\n    let uploadProgress = request.uploadProgress();\n    let downloadProgress = new Rx.BehaviorSubject({ loaded: 0, total: 0 });\n    let all = [observable, body, uploadProgress, downloadProgress];\n    let failed = false;\n\n    function responseError(err) {\n      observable.error(err);\n      body.complete();\n      uploadProgress.complete();\n      downloadProgress.complete();\n    }\n\n    function completeAll() {\n      all.forEach(o => o.complete());\n    }\n\n    function errorAll(err) {\n      all.forEach(o => o.error(err));\n    }\n\n    function nextChunk() {\n      let chunk = xhr.responseText.slice(offset);\n      offset = xhr.responseText.length;\n      body.next(chunk);\n    }\n\n    const xhr = new XHRBuilder()\n      .request(request)\n      .onHeadersReceived((evt) => {\n        response = new Response({\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders()),\n          body,\n          uploadProgress,\n          downloadProgress\n        });\n\n        const responseChain = new ResponseInterceptorChain(\n          interceptors,\n          (transformedResponse) => {\n            observable.next(transformedResponse)\n          },\n          (transformedResponse) => {\n            failed = true;\n            responseError(transformedResponse);\n          }\n        );\n\n        responseChain.run(response);\n      })\n      .onUploadProgress((evt) => {\n        uploadProgress.next({ loaded: evt.loaded, total: evt.total });\n      })\n      .onDownloadProgress((evt) => {\n        downloadProgress.next({ loaded: evt.loaded, total: evt.total });\n        if (response.isChunked()) {\n          nextChunk();\n        }\n      })\n      .onLoad((evt) => {\n        if (!failed) {\n          if (response.isChunked()) {\n            if (xhr.responseText.length > offset) {\n              nextChunk();\n            }\n          } else {\n            body.next(xhr.responseText);\n          }\n        }\n      })\n      .onError(responseError)\n      .onAbort(errorAll)\n      .onLoadEnd(() => {\n        if (!failed) {\n          completeAll()\n        }\n      })\n      .build();\n\n    const success = transformed => {\n      try {\n        if (!!transformed.body()) xhr.send(transformed.body());\n        else xhr.send();\n      } catch (err) {\n        responseError(err);\n      }\n    };\n\n    const requestChain = new RequestInterceptorChain(\n      interceptors,\n      success,\n      responseError\n    );\n\n    requestChain.run(request);\n  }\n\n  return Rx.Observable.create(attempt);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/browser/xhr/index.js","module.exports = __WEBPACK_EXTERNAL_MODULE_12__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"Rx\",\"commonjs2\":[\"rxjs\"],\"commonjs\":\"rxjs\",\"amd\":\"rxjs\"}\n// module id = 12\n// module chunks = 0","import { isBoolean, isString, isInteger, isArray, isUndefined, assign, defaults } from 'lodash';\nimport Request from './request';\nimport Interceptors from './interceptors';\nimport BrowserProvider from './providers/browser';\nimport Url from './url';\nimport Path from './path';\nimport { property, parseUri } from './utilities';\n\nfunction generateRequestMethod(method) {\n  return function(url, options = {}) {\n    return this.request(url, assign({ method }, options));\n  };\n}\n\nconst _baseUrl = new WeakMap();\nconst _timeout = new WeakMap();\nconst _headers = new WeakMap();\nconst _xsrfCookieName = new WeakMap();\nconst _xsrfHeaderName = new WeakMap();\nconst _withCredentials = new WeakMap();\nconst _user = new WeakMap();\nconst _password = new WeakMap();\nconst _interceptors = new WeakMap();\nconst _provider = new WeakMap();\n\n/**\n * An HTTP client.\n * @class\n * @name Http\n */\nclass Http {\n  /**\n   * @constructor\n   * @param {Object} [options] - A hash of settings for this client.\n   */\n  constructor({\n              baseUrl,\n              timeout,\n              xsrfCookieName,\n              xsrfHeaderName,\n              withCredentials,\n              user,\n              password,\n              interceptors,\n              provider\n            } = {}) {\n    _baseUrl.set(this, baseUrl || Http.defaults.baseUrl);\n    _timeout.set(this, timeout || Http.defaults.timeout);\n    _xsrfCookieName.set(this, xsrfCookieName || Http.defaults.xsrfCookieName);\n    _xsrfHeaderName.set(this, xsrfHeaderName || Http.defaults.xsrfHeaderName);\n    _withCredentials.set(this, !!withCredentials);\n    _interceptors.set(this, interceptors || Http.defaults.interceptors);\n    _provider.set(this, provider || Http.defaults.provider);\n\n    if (user) _user.set(this, user);\n    if (password) _password.set(this, password || Http.defaults.password);\n  }\n\n  /**\n   * @method\n   * @name baseUrl\n   * @param {String|Http} [url] - the base URL applied by default to all\n   * requests from this client.\n   * @returns {String|Http} - If url is specified, updates the default baseUrl\n   * for all requests created with this client, and returns the client instance.\n   * If value is ommitted, returns the current baseUrl.\n   */\n  baseUrl(url) {\n    return property.call(this, 'baseUrl', _baseUrl, url, isString);\n  }\n\n  /**\n   * @method\n   * @name timeout\n   * @param {Number} [value] - The request timeout in milliseconds\n   * @returns {Number|Http} - If value is specified, updates the default request\n   * timeout for all requests created with this client, and returns the client\n   * instance.  If value is ommitted, returns the current timeout value.\n   */\n  timeout(value) {\n    return property.call(this, 'timeout', _timeout, value, isInteger);\n  }\n\n  /**\n   * @method\n   * @name xsrfCookieName\n   * @param {String} [value] - The name of the XSRF cookie\n   * @returns {String|Http} - If the value is specified, sets the name of the XSRF Cookie\n   * and returns the current Http.  If value is ommitted, returns the current name.\n   */\n  xsrfCookieName(value) {\n    return property.call(this, 'xsrfCookieName', _xsrfCookieName, value, isString);\n  }\n\n  /**\n   * @method\n   * @name xsrfHeaderName\n   * @param {String} [value] - The name of the XSRF header\n   * @returns {String|Http} - If the value is specified, sets the name of the XSRF Header\n   * and returns the current Http.  If value is ommitted, returns the current name.\n   */\n  xsrfHeaderName(value) {\n    return property.call(this, 'xsrfHeaderName', _xsrfHeaderName, value, isString);\n  }\n\n  /**\n   * @method\n   * @name withCredentials\n   * @param {Boolean} [value] - Flag indicating whether cross-site AccessControl\n   * requests should be made using cookies, authorization headers, or TLS client\n   * certificates.  More detail: https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/withCredentials\n   * @returns {Boolean|Http} - If the value is specified, sets the withCredentials flag\n   * and returns the current Http.  If value is ommitted, returns the current\n   * value of the flag.\n   */\n  withCredentials(value) {\n    return property.call(this, 'withCredentials', _withCredentials, value, isBoolean);\n  }\n\n  /**\n   * @method\n   * @name user\n   * @param {String} [value] - Basic auth username\n   * @returns {String|Http} - If the value is specified, sets the username and returns\n   * the current Http.  If value is ommitted, returns the current username.\n   */\n  user(value) {\n    return property.call(this, 'user', _user, value, isString);\n  }\n\n  /**\n   * @method\n   * @name password\n   * @param {String} [value] - Basic auth password\n   * @returns {String|Http} - If the value is specified, sets the password and returns\n   * the current Http.  If value is ommitted, returns the current password.\n   */\n  password(value) {\n    return property.call(this, 'password', _password, value, isString);\n  }\n\n  /**\n   * @method\n   * @name interceptors\n   * @param {Interceptor[]} [values] - An array of interceptors.\n   * @returns {Interceptor[]|Http} - If values is specified, replaces the default\n   * interceptors for all requests from this client, and returns the client\n   * instance.  If values is ommitted, returns the current array of\n   * interceptors.\n   */\n  interceptors(values) {\n    return property.call(this, 'interceptors', _interceptors, values, isArray);\n  }\n\n  /**\n   * @method\n   * @name addInterceptor\n   * @param {Interceptor} interceptor - Add the interceptor to the end of the\n   * chain of interceptors.\n   * @return {Http} - The current client instance.\n   */\n  addInterceptor(interceptor) {\n    _interceptors.get(this).push(interceptor);\n    return this;\n  }\n\n  /**\n   * @method\n   * @name removeInterceptor\n   * @param {Interceptor} interceptor - Remove the interceptor from the chain of interceptors.\n   * @returns {Http} - The current client instance.\n   */\n  removeInterceptor(interceptor) {\n    const current = _interceptors.get(this);\n    const updated = current.filter((i) => i !== interceptor);\n    _interceptors.set(this, updated);\n    return this;\n  }\n\n  /**\n   * @method\n   * @name request\n   * @param {String} url - the URL where the request will be sent.\n   * @param {Object} [options] - add/override settings for this request.\n   * @return {Request}\n   * @example\n   * new Http({ baseUrl: 'http://mydomain.com', timeout: 5000 }).request('/some/stuff', {\n   *   method: 'POST',\n   *   body: { foo: \"bar\", baz: 1 },\n   *   timeout: 10000\n   * })\n   */\n  request(url, { method, headers, query, timeout, body, interceptors, xsrfCookieName, xsrfHeaderName, withCredentials, user, password, provider } = {}) {\n    const self = this;\n    const baseUrl = _baseUrl.get(this);\n    let fullUrl = url;\n\n    if (!!baseUrl) {\n      fullUrl = Path.join(baseUrl, url);\n    }\n\n    const parsed = parseUri(fullUrl);\n    assign(parsed.query, query);\n\n    return new Request({\n      method: method,\n      headers: headers || _headers.get(self), // TODO: expose a headers property\n      timeout: timeout || _timeout.get(self),\n      body: body,\n      url: new Url(parsed),\n      interceptors: interceptors || _interceptors.get(self),\n      xsrfCookieName: xsrfCookieName || _xsrfCookieName.get(self),\n      xsrfHeaderName: xsrfHeaderName || _xsrfHeaderName.get(self),\n      withCredentials: withCredentials, // TODO: proper default logic for bool,\n      user: user || _user.get(self),\n      password: password || _password.get(self),\n      provider: provider || _provider.get(self)\n    });\n  }\n\n  /**\n   * @method\n   * @name head\n   * Helper method for request.  Automatically sets method to HEAD.\n   * @param {string} url - the URL where the request will be sent.\n   * @param {Object} [opts] - add/override settings for this request.\n   * @return {Request}\n   * @example\n   * new Http({ baseUrl: 'http://mydomain.com', timeout: 5000 }).head('/some/stuff', {\n   *   retries: 2,\n   *   timeout: 10000\n   * })\n   */\n  head(url, opts = {}) {\n    return generateRequestMethod('HEAD').call(this, url, opts);\n  }\n\n  /**\n   * @method\n   * @name get\n   * Helper method for request.  Automatically sets method to GET.\n   * @param {String} url - the URL where the request will be sent.\n   * @param {Object} [opts] - add/override settings for this request.\n   * @return {Request}\n   * @example\n   * new Http({ baseUrl: 'http://mydomain.com', timeout: 5000 }).get('/some/stuff', {\n   *   retries: 2\n   *   timeout: 10000\n   * })\n   */\n  get(url, opts = {}) {\n    return generateRequestMethod('GET').call(this, url, opts);\n  }\n\n  /**\n   * @method\n   * @name options\n   * Helper method for request.  Automatically sets method to OPTIONS.\n   * @param {String} url - the URL where the request will be sent.\n   * @param {Object} [opts] - add/override settings for this request.\n   * @return {Request}\n   * @example\n   * new Http({ baseUrl: 'http://mydomain.com', timeout: 5000 }).head('/some/stuff', {\n   *   retries: 2,\n   *   timeout: 10000\n   * })\n   */\n  options(url, opts = {}) {\n    return generateRequestMethod('OPTIONS').call(this, url, opts);\n  }\n\n  /**\n   * @method\n   * @name delete\n   * Helper method for request.  Automatically sets method to DELETE.\n   * @param {String} url - the URL where the request will be sent.\n   * @param {Object} [opts] - add/override settings for this request.\n   * @return {Request}\n   * @example\n   * new Http({ baseUrl: 'http://mydomain.com', timeout: 5000 }).delete('/some/stuff', {\n   *   retries: 2,\n   *   timeout: 10000\n   * })\n   */\n  delete(url, opts = {}) {\n    return generateRequestMethod('DELETE').call(this, url, opts);\n  }\n\n  /**\n   * @method\n   * @name trace\n   * Helper method for request.  Automatically sets method to TRACE.\n   * @param {String} url - the URL where the request will be sent.\n   * @param {Object} [opts] - add/override settings for this request.\n   * @return {Request}\n   * @example\n   * new Http({ baseUrl: 'http://mydomain.com', timeout: 5000 }).trace('/some/stuff', {\n   *   retries: 2,\n   *   timeout: 10000\n   * })\n   */\n  trace(url, opts = {}) {\n    return generateRequestMethod('TRACE').call(this, url, opts);\n  }\n\n  /**\n   * @method\n   * @name post\n   * Helper method for request.  Automatically sets method to POST.\n   * @param {String} url - the URL where the request will be sent.\n   * @param {Object} [opts] - add/override settings for this request.\n   * @return {Request}\n   * @example\n   * new Http({ baseUrl: 'http://mydomain.com', timeout: 5000 }).post('/some/stuff', {\n   *   body: { foo: \"bar\", baz: 1 },\n   *   timeout: 10000\n   * })\n   */\n  post(url, opts = {}) {\n    return generateRequestMethod('POST').call(this, url, opts);\n  }\n\n  /** @method\n  * @name put\n  * Helper method for request.  Automatically sets method to PUT.\n  * @param {String} url - the URL where the request will be sent.\n  * @param {Object} [opts] - add/override settings for this request.\n  * @return {Request}\n  * @example\n  * new Http({ baseUrl: 'http://mydomain.com', timeout: 5000 }).put('/some/stuff', {\n  *   body: { foo: \"bar\", baz: 1 },\n  *   timeout: 10000\n  * })\n  **/\n  put(url, opts = {}) {\n    return generateRequestMethod('PUT').call(this, url, opts);\n  }\n\n  /**\n   * @method\n   * @name patch\n   * Helper method for request.  Automatically sets method to PATCH.\n   * @param {String} url - the URL where the request will be sent.\n   * @param {Object} [opts] - add/override settings for this request.\n   * @return {Request}\n   * @example\n   * new Http({ baseUrl: 'http://mydomain.com', timeout: 5000 }).patch('/some/stuff', {\n   *   body: { foo: \"bar\", baz: 1 },\n   *   timeout: 10000\n   * })\n   */\n  patch(url, opts = {}) {\n    return generateRequestMethod('PATCH').call(this, url, opts);\n  }\n}\n\nHttp.defaults = {\n  baseUrl: '',\n  timeout: 30000,\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n  withCredentials: false,\n  interceptors: [\n    Interceptors.MethodOverride,\n    Interceptors.BodyTransformer,\n    Interceptors.XSRF,\n    Interceptors.ErrorHandling\n  ],\n  provider: BrowserProvider\n};\n\nexport default Http;\n\n\n\n// WEBPACK FOOTER //\n// ./src/http.js","import BrowserProvider from './browser';\nimport XHRProvider from './browser/xhr';\n\nexport default {\n  Browser: BrowserProvider,\n  XHR: XHRProvider\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/index.js","import Url from './url';\nimport Http from './http';\nimport Headers from './headers';\nimport Interceptor from './interceptor';\nimport Interceptors from './interceptors';\nimport Errors from './errors';\nimport Serializer from './serializer';\nimport Serializers from './serializers';\nimport Providers from './providers';\n\nexport {\n  Url,\n  Http,\n  Headers,\n  Interceptor,\n  Interceptors,\n  Errors,\n  Serializer,\n  Serializers,\n  Providers\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import { isObject, isString } from 'lodash';\nimport { isFile, isFormData, isBlob } from '../utilities';\nimport Interceptor from '../interceptor';\nimport Errors from '../errors';\nimport Serializers from '../serializers';\n\nconst contentTypeSerializers = {\n  'text/json': Serializers.Json,\n  'application/json': Serializers.Json,\n  'multipart/form-data': Serializers.Form,\n  'application/x-www-urlencoded': Serializers.Form,\n  'text/plain': Serializers.Text\n}\n\nfunction autoDetect(body, contentType) {\n  if (!!contentType && contentTypeSerializers[contentType.toLowerCase()]) {\n    const result = contentTypeSerializers[contentType.toLowerCase()];\n    return new result(contentType);\n  }\n\n  if (isString(body)) {\n    return new Serializers.Text(contentType);\n  }\n\n  if (isObject(body)) {\n    if (isFormData(body) || isFile(body) || isBlob(body) || Object.entries(body).some((entry) => isFile(entry[1]) || isBlob(entry[1]))) {\n      return new Serializers.Form(contentType);\n    }\n\n    return new Serializers.Json(contentType);\n  }\n\n  throw new Errors.NoSerializerFoundError('unknown');\n}\n\n/**\n * Tries to automatically detect the response content type and deserialize the\n * raw body into the appropriate type.\n * @class\n * @name BodyTransformer\n */\nexport default class BodyTransformer extends Interceptor {\n  /**\n   * Transforms (or fails) an outgoing request.\n   * @method\n   * @name request\n   * @param {Request} request - The request to be processed\n   * @param {Function<Request>} accept - called on success to process a (potentially transformed) {@link Request}\n   * @param {Function} reject - called on failure to pass an error\n   */\n  request(request, accept, reject) {\n    const body = request.body();\n\n    if (!!body) {\n      const serializer = request.serializer() || autoDetect(body, request.contentType());\n      const contentType = request.contentType() || serializer.contentType;\n\n      if (!!contentType) {\n        request.contentType(contentType);\n      }\n\n      request.body(serializer.serialize(body));\n    }\n\n    accept(request);\n  }\n}\n\nexport let bodyTransformer = new BodyTransformer();\n\n\n\n// WEBPACK FOOTER //\n// ./src/interceptors/body-transformer.js","import Interceptor from '../interceptor';\n\n/**\n * Rejects a response with a non-20x status-code.\n * @class\n * @name ErrorHandling\n */\nexport default class ErrorHandling extends Interceptor {\n  /**\n   * @method\n   * @name response\n   * @param {Response} response - The response to be processed\n   * @param {Function<Response>} accept - called on success to process a (potentially transformed) {@link Response}\n   * @param {Function} reject - called on failure to pass an error\n   */\n  response(response, accept, reject) {\n    if (Math.floor(response.status() / 100) === 2) {\n      accept(response);\n    } else {\n      reject(response);\n    }\n  }\n}\n\nexport let errorHandling = new ErrorHandling();\n\n\n\n// WEBPACK FOOTER //\n// ./src/interceptors/error-handling.js","import Interceptor from '../interceptor';\n\nconst BROWSER_METHODS = ['GET', 'POST'];\n\n/**\n * If the HTTP verb is not one understood by Browsers, change the verb\n * to a POST and send the X-HTTP-Method-Override header with the original\n * method.  This should generally be understood by the routers of most\n * server backends.\n * @class\n * @name MethodOverride\n */\nexport default class MethodOverride extends Interceptor {\n  /**\n   * Transforms (or fails) an outgoing request.\n   * @method\n   * @name request\n   * @param {Request} request - The request to be processed\n   * @param {Function<Request>} accept - called on success to process a (potentially transformed) {@link Request}\n   * @param {Function} reject - called on failure to pass an error\n   */\n  request (request, accept, reject) {\n    const originalMethod = request.method();\n\n    if (!BROWSER_METHODS.some(m => m === originalMethod)) {\n      request\n        .method('POST')\n        .headers('X-HTTP-Method-Override', originalMethod);\n    }\n\n    accept(request);\n  }\n}\n\nexport let methodOverride = new MethodOverride();\n\n\n\n// WEBPACK FOOTER //\n// ./src/interceptors/method-override.js","import { isUndefined, isString } from 'lodash';\nimport Cookies from 'js-cookie';\nimport Interceptor from '../interceptor';\n\n/**\n * Reads the value from the configured XSRF cookie and sends it back to the\n * server and sends it back in the configured header.\n * @class\n * @name XSRF\n */\nexport default class XSRF extends Interceptor {\n  /**\n   * Transforms (or fails) an outgoing request.\n   * @method\n   * @name request\n   * @param {Request} request - The request to be processed\n   * @param {Function<Request>} accept - called on success to process a (potentially transformed) {@link Request}\n   * @param {Function} reject - called on failure to pass an error\n   */\n  request(request, accept, reject) {\n    const xsrfToken = Cookies.get(request.xsrfCookieName());\n    const xsrfHeader = request.xsrfHeaderName();\n\n    if (!isUndefined(xsrfToken) && isString(xsrfToken)) {\n      request.headers(xsrfHeader, xsrfToken);\n    }\n\n    accept(request);\n  }\n}\n\nexport let xsrf = new XSRF();\n\n\n\n// WEBPACK FOOTER //\n// ./src/interceptors/xsrf.js","import { isInteger, partial, noop } from 'lodash';\nimport Errors from '../../../errors';\n\nconst STATE = {\n  UNSENT: 0,\n  OPEN: 1,\n  HEADERS_RECEIVED: 2,\n  LOADING: 3,\n  DONE: 4\n}\n\n/**\n * Internal class used to construct and XMLHttpRequest\n * @private\n * @class\n * @name XHRBuilder\n */\nexport default class XHRBuilder {\n  constructor() {\n    this.headersReceived = noop;\n    this.downloadProgress = noop;\n    this.uploadProgress = noop;\n    this.complete = noop;\n    this.progress = noop;\n    this.error = noop;\n    this.abort = noop;\n    this.load = noop;\n    this.loadEnd = noop;\n  }\n\n  onHeadersReceived(fn) {\n    this.headersReceived = fn;\n    return this;\n  }\n\n  onDownloadProgress(fn) {\n    this.downloadProgress = fn;\n    return this;\n  }\n\n  onUploadProgress(fn) {\n    this.uploadProgress = fn;\n    return this;\n  }\n\n  onError(fn) {\n    this.error = fn;\n    return this;\n  }\n\n  onAbort(fn) {\n    this.abort = fn;\n    return this;\n  }\n\n  onLoad(fn) {\n    this.load = fn;\n    return this;\n  }\n\n  onLoadEnd(fn) {\n    this.loadEnd = fn;\n    return this;\n  }\n\n  request(req) {\n    this.req = req;\n    return this;\n  }\n\n  build() {\n    const self = this;\n    const request = this.req;\n    const xhr = new XMLHttpRequest();\n    const headers = request.headers();\n    let credentials;\n\n    if (request.url().user() && request.url().password()) {\n      credentials = `${request.url().user()}:${request.url().password()}`\n    } else if (request.user() && request.password()) {\n      credentials = `${request.user()}:${request.password()}`;\n    }\n\n    if (credentials) {\n      headers['Authorization'] = `Basic ${btoa(credentials)}`;\n    }\n\n    if (request.withCredentials()) {\n      xhr.withCredentials = request.withCredentials();\n    }\n\n    if (request.responseType()) {\n      xhr.responseType = request.responseType();\n    }\n\n    if (isInteger(request)) {\n      xhr.timeout = request.timeout();\n    }\n\n    if (xhr.upload) {\n      xhr.upload.addEventListener('progress', self.uploadProgress);\n      xhr.upload.addEventListener('error', self.error);\n      xhr.upload.addEventListener('abort', self.abort);\n    }\n\n    xhr.addEventListener('progress', self.downloadProgress);\n    xhr.addEventListener('error', self.error);\n    xhr.addEventListener('abort', self.abort);\n    xhr.addEventListener('load', self.load);\n    xhr.addEventListener('loadend', self.loadEnd);\n\n    xhr.addEventListener('readystatechange', (evt) => {\n      if (xhr.readyState === STATE.HEADERS_RECEIVED) {\n        self.headersReceived(evt);\n      } else if (xhr.readyState === STATE.DONE) {\n        try {\n          if (xhr.status === 0) {\n            self.error(new Errors.ConnectionError(request.url().toString()));\n          }\n        } catch (err) {\n          self.error(err);\n        }\n      }\n    });\n\n    xhr.open(request.method(), request.url().toString(), true);\n\n    Object.keys(headers).forEach(headerName => {\n      xhr.setRequestHeader(headerName, headers[headerName].toString());\n    });\n\n    return xhr;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/browser/xhr/xhr-builder.js","import { isEmpty, head, tail, partial } from 'lodash';\n\n/**\n * Runs the request interceptors, and requestError interceptors if necessary.\n * @private\n * @class\n * @param {Object[]} interceptors - The array of interceptors to be run\n * @param {Function} accept - Callback that is invoked with the final request\n * object after all interceptors have run successfully.\n * @param {Function} reject - Callback that is invoked with an error object\n * if all of the interceptors fail to recover from an error.\n */\nexport default function RequestInterceptorChain(interceptors, accept, reject) {\n  /**\n   * Handler for a rejected interceptor.  Runs requestError interceptor for\n   * all interceptors following the failure, in an attempt to recover.\n   * If one of the interceptors manages to recover, hop back into the next\n   * interceptor after the initial failure.\n   */\n  function failure(remaining, recover) {\n    return function (error) {\n      function step(rest, err) {\n        if (!isEmpty(rest)) {\n          const interceptor = head(rest);\n          const xs = tail(rest);\n          const transform = interceptor.requestError;\n          const next = partial(step, xs);\n\n          transform.call(interceptor, err, recover, next);\n        } else {\n          reject(err);\n        }\n      }\n\n      step(remaining, error);\n    };\n  }\n\n  /** @method\n   * Runs the request through the chain of request interceptors\n   * @name run\n   * @param {Request} request\n   */\n  this.run = function (request) {\n    function step(remaining, next) {\n      if (!isEmpty(remaining)) {\n        const interceptor = head(remaining);\n        const xs = tail(remaining);\n        const transform = interceptor.request;\n        const success = partial(step, xs);\n\n        transform.call(interceptor, request, success, failure(xs, success));\n      } else {\n        accept(request);\n      }\n    }\n\n    step(interceptors, request);\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/request-interceptor-chain.js","import Rx from 'rxjs';\nimport { isUndefined, identity, isString, isInteger, isObject } from 'lodash';\nimport Errors from './errors';\nimport Path from './path';\nimport Url from './url';\nimport { parseUri, property, mapProperty } from './utilities';\nimport Serializers from './serializers';\n\nlet _method = new WeakMap();\nlet _headers = new WeakMap();\nlet _timeout = new WeakMap();\nlet _responseType = new WeakMap();\nlet _body = new WeakMap();\nlet _serializer = new WeakMap();\nlet _url = new WeakMap();\nlet _interceptors = new WeakMap();\nlet _xsrfCookieName = new WeakMap();\nlet _xsrfHeaderName = new WeakMap();\nlet _withCredentials = new WeakMap();\nlet _user = new WeakMap();\nlet _password = new WeakMap();\nlet _provider = new WeakMap();\nlet _uploadProgress = new WeakMap();\n\n/**\n * A Request should only ever be created by an instance of {@link Http}\n * @class\n * @name Request\n */\nexport default class Request {\n  /**\n   * @constructor\n   * @param {Object} config - Override default settings for this Request only.\n   */\n  constructor({\n              method,\n              headers,\n              timeout,\n              body,\n              url,\n              interceptors,\n              xsrfCookieName,\n              xsrfHeaderName,\n              withCredentials,\n              user,\n              password,\n              provider\n            } = {}) {\n    _method.set(this, method || null);\n    _headers.set(this, headers || {});\n    _timeout.set(this, timeout || null);\n    _body.set(this, body || null);\n    _url.set(this, url || null);\n    _interceptors.set(this, interceptors || [])\n    _xsrfCookieName.set(this, xsrfCookieName || null);\n    _xsrfHeaderName.set(this, xsrfHeaderName || null);\n    _withCredentials.set(this, !!withCredentials);\n    _user.set(this, user || null);\n    _password.set(this, password || null);\n    _provider.set(this, provider);\n    _uploadProgress.set(this, new Rx.BehaviorSubject({ loaded: 0, total: 0 }));\n  }\n\n  /**\n   * @method\n   * @name method\n   * @param {String} [value] - The HTTP method for this request\n   * @returns {String|Request} - If value is specified, sets the HTTP method\n   * for this request and returns the current Request.  If value is ommitted,\n   * returns the current HTTP method\n   */\n  method(value) {\n    return property.call(this, 'method', _method, value, isString);\n  }\n\n  /**\n   * @method\n   * @name headers\n   * @param {String|Object} [name] - The name of the header\n   * @param [value] - The value of the header\n   * @returns {Object|String|Request} -\n   * If no parameters are specified - returns a copy of the entire headers hash.\n   * @example\n   * request.headers() // returns { \"foo\": \"bar\" }\n   * If only name is specified, and name is a string - returns the value for the key in the headers hash.\n   * @example\n   * request.headers(\"foo\") // returns \"bar\"\n   * If only name is specified, and name is an object - replaces the entire headers hash\n   * and returns the current Request.\n   * @example\n   * request.headers({ \"foo\": \"bar\", \"baz\": 1 })\n   * If name and value are specified - sets the value of name in the headers hash\n   * and returns the current Request.\n   * @example\n   * request.headers(\"foo\", \"bar\")\n   */\n  headers(name, value) {\n    return mapProperty.call(this, _headers, name, value);\n  }\n\n  /**\n   * Convenience method for getting/setting the Content-Type header.\n   * @method\n   * @name contentType\n   * @param {String} [value] - The value of the Content-Type header\n   * @returns {String|Request} - If value is specified, sets the\n   * Content-Type header.  If value is ommitted, returns the current value\n   * of the Content-Type header (or undefined);\n   */\n  contentType(value) {\n    const headers = _headers.get(this);\n    const currentEntry = Object.entries(headers).find((header) => header[0].toLowerCase() === 'content-type');\n\n    if (isUndefined(value)) {\n      if (!!currentEntry) return currentEntry[1];\n      else return;\n    }\n\n    if (!!currentEntry) headers[currentEntry[0]] = value;\n    else headers['Content-Type'] = value;\n\n    return this;\n  }\n\n  /**\n   * XHRProvider only - sets the responseType field of the {@link XMLHttpRequest}\n   *\n   * @method\n   * @name responseType\n   * @param {String} [value] - The expected responseType\n   * @returns {String|Request} -  If value is specified, sets the responseType\n   * for this request, and returns the current request.  If value is ommitted,\n   * returns the current responseType value.\n   */\n  responseType(value) {\n    return property.call(this, 'responseType', _responseType, value, isString);\n  }\n\n  /**\n   * @method\n   * @name timeout\n   * @param {Number} [value] - The request timeout in milliseconds\n   * @returns {Number|Request} - If value is specified, sets the timeout\n   * for this request, and returns the current request. If value is ommitted,\n   * returns the current timeout value.\n   */\n  timeout(value) {\n    return property.call(this, 'timeout', _timeout, value, isInteger);\n  }\n\n  /**\n   * @method\n   * @name body\n   * @param {Serializer} [value] - The serializer for the body\n   * @returns {Serializer|Request} - If value is specified, sets the Serializer\n   * for this request and returns the current Request.  If value is ommitted,\n   * returns the current Serializer\n   */\n  serializer(value) {\n    return property.call(this, 'serializer', _serializer, value);\n  }\n\n  /**\n   * @method\n   * @name body\n   * @param {Object|FormData|Blob|File|String} [value] - The body for this request\n   * @param {Serializer} [serializer] - The serializer for the body\n   * @returns {Object|FormData|Blob|File|String|Request} - If value is specified, sets the body\n   * for this request and returns the current Request.  If value is ommitted,\n   * returns the current body\n   */\n  body(value, serializer) {\n    if (isUndefined(value)) {\n     return _body.get(this);\n    }\n\n    const currentSerializer = _serializer.get(this);\n    _body.set(this, value);\n    _serializer.set(this, serializer || currentSerializer);\n\n    return this;\n  }\n\n  /**\n   * @method\n   * @name url\n   * @param {Url} [value] - The {@link Url} for this request.\n   * @returns {Url|Request} - If value is specified, sets the {@link Url} for\n   * this request and returns the current Request.  If value is ommitted,\n   * returns the current {@link Url}.\n   */\n  url(value) {\n    if (isUndefined(value)) {\n      return _url.get(this);\n    }\n\n    if (value instanceof Url) {\n      _url.set(this, value);\n      return this;\n    }\n\n    if (isString(value) || isObject(value)) {\n      const newUrl = Url.factory(value);\n      const currentUrl = _url.get(this);\n      if (newUrl.isAbsolute()) {\n        _url.set(this, newUrl);\n        return this;\n      } else if (currentUrl && currentUrl.isAbsolute()) {\n        _url.set(this, currentUrl.merge(newUrl));\n        return this;\n      }\n    }\n\n    throw new Errors.PropertyValidationError('url', value);\n  }\n\n  /**\n   * @method\n   * @name interceptors\n   * @param {Interceptor[]} [value] - The set of interceptors to be run against this Request and/or Response\n   * @returns {Interceptor[]|Request} - If value is specified, overrides the current set of interceptors\n   * for this Request and/or Response and returns the current Request.  If value is ommitted,\n   * returns the current set of interceptors.\n   */\n  interceptors(value) {\n    return property.call(this, 'interceptors', _interceptors, value);\n  }\n\n  /**\n   * @method\n   * @name xsrfCookieName\n   * @param {String} [value] - The name of the XSRF cookie\n   * @returns {String|Request} - If the value is specified, sets the name of the XSRF Cookie\n   * and returns the current Request.  If value is ommitted, returns the current name.\n   */\n  xsrfCookieName(value) {\n    return property.call(this, 'xsrfCookieName', _xsrfCookieName, value, isString);\n  }\n\n  /**\n   * @method\n   * @name xsrfHeaderName\n   * @param {String} [value] - The name of the XSRF header\n   * @returns {String|Request} - If the value is specified, sets the name of the XSRF Header\n   * and returns the current Request.  If value is ommitted, returns the current name.\n   */\n  xsrfHeaderName(value) {\n    return property.call(this, 'xsrfHeaderName', _xsrfHeaderName, value, isString);\n  }\n\n  /**\n   * @method\n   * @name withCredentials\n   * @param {Boolean} [value] - Flag indicating whether cross-site AccessControl\n   * requests should be made using cookies, authorization headers, or TLS client\n   * certificates.  More detail: https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/withCredentials\n   * @returns {Boolean|Request} - If the value is specified, sets the withCredentials flag\n   * and returns the current Request.  If value is ommitted, returns the current\n   * value of the flag.\n   */\n  withCredentials(value) {\n    return property.call(this, 'withCredentials', _withCredentials, value);\n  }\n\n  /**\n   * @method\n   * @name user\n   * @param {String} [value] - Basic auth user\n   * @returns {String|Request} - If the value is specified, sets the user and returns\n   * the current Request.  If value is ommitted, retursn the current user.\n   */\n  user(value) {\n    return property.call(this, 'user', _user, value, isString);\n  }\n\n  /**\n   * @method\n   * @name password\n   * @param {String} [value] - Basic auth password\n   * @returns {String|Request} - If the value is specified, sets the password and returns\n   * the current Request.  If value is ommitted, retursn the current password.\n   */\n  password(value) {\n    return property.call(this, 'password', _password, value, isString);\n  }\n\n  /**\n   * @method\n   * @name uploadProgress\n   * @returns {Observable<Object>} - returns an observable of progress events\n   */\n  uploadProgress() {\n    return _uploadProgress.get(this);\n  }\n\n  /**\n   * @method\n   * @name execute\n   * @returns {Object} - Executes the request and returns an object containing\n   * the response, uploadProgress, and downloadProgress streams.\n   * @example\n   * var streams = request.execute();\n   * streams.flatMap(response => response.body()).forEach((body) => console.log(body));\n   * streams.flatmap(response => response.uploadProgress()).forEach((event) => console.log(event));\n   * streams.flatMap(response => response.downloadProgress()).forEach((event) => console.log(event));\n   */\n  execute() {\n    const provider = _provider.get(this);\n    return provider(this);\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/request.js","import { isEmpty, head, tail, partial } from 'lodash';\n\n/**\n * Runs the response interceptors, and responseError interceptors if necessary.\n * @private\n * @class\n * @param {Interceptor[]} interceptors - The array of interceptors to be run\n * @param {Function} accept - Callback that is invoked with the final response\n * object after all interceptors have run successfully.\n * @param {Function} reject - Callback that is invoked with an error object\n * if all of the interceptors fail to recover from an error.\n */\nexport default function ResponseInterceptorChain(interceptors, accept, reject) {\n  /**\n   * Handler for a rejected interceptor.  Runs responseError interceptor for\n   * all interceptors following the failure, in an attempt to recover.\n   * If one of the interceptors manages to recover, hop back into the next\n   * interceptor after the initial failure.\n   */\n  function failure(remaining, recover) {\n    return function (error) {\n      function step(rest, err) {\n        if (!isEmpty(rest)) {\n          const interceptor = head(rest);\n          const xs = tail(rest);\n          const transform = interceptor.responseError;\n          const next = partial(step, xs);\n\n          transform.call(interceptor, err, recover, next);\n        } else {\n          reject(err);\n        }\n      }\n\n      step(remaining, error);\n    };\n  }\n\n  /** @method\n   * Runs the response through the chain of response interceptors\n   * @name run\n   * @param {Response} response\n   */\n  this.run = function (response) {\n    function step(remaining, next) {\n      if (!isEmpty(remaining)) {\n        const interceptor = head(remaining);\n        const xs = tail(remaining);\n        const transform = interceptor.response;\n        const success = partial(step, xs);\n\n        transform.call(interceptor, response, success, failure(xs, success));\n      } else {\n        accept(response);\n      }\n    }\n\n    step(interceptors, response);\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/response-interceptor-chain.js","import { isUndefined, isFunction } from 'lodash';\nimport Headers from './headers';\n\nlet _status = new WeakMap();\nlet _statusText = new WeakMap();\nlet _headers = new WeakMap();\nlet _body = new WeakMap();\nlet _uploadProgress = new WeakMap();\nlet _downloadProgress = new WeakMap();\nlet _isChunked = new WeakMap();\n\nfunction evaluateLazy(property) {\n  const value = property.get(this);\n  if (!isUndefined(value) && isFunction(value)) {\n    property.set(this, value());\n  }\n  return property.get(this);\n}\n\n/**\n * Immutable response container.  Should only be created by executing a {@link Request}.\n * @class\n * @name Response\n */\nexport default class Response {\n\n  /**\n   * @param {Number} status - The HTTP status code of the response\n   * @param {String} statusText - The status text of the response\n   * @param {Object} headers - A hash containing the response headers\n   * @param {Observable<String>} body - An Observable representing the body/entity of the response\n   * @param {Observable<Object>} uploadProgress - An Observable representing a stream of all upload progress events\n   * @param {Observable<Object>} downloadProgress - An Observable representing a stram of all download progress events\n   */\n  constructor({ status, statusText, headers, body, uploadProgress, downloadProgress } = {}) {\n    _status.set(this, status);\n    _statusText.set(this, statusText);\n    _headers.set(this, headers);\n    _body.set(this, body);\n    _uploadProgress.set(this, uploadProgress);\n    _downloadProgress.set(this, downloadProgress);\n  }\n\n  /**\n   * @method\n   * @name uploadProgress\n   * @returns {Observable<Object>} - an Observable stream of upload progress events\n   */\n  uploadProgress() {\n    return evaluateLazy.call(this, _uploadProgress);\n  }\n\n  /**\n   * @method\n   * @name downloadProgress\n   * @returns {Observable<Object>} - an Observable stream of download progress events\n   */\n  downloadProgress() {\n    return evaluateLazy.call(this, _downloadProgress);\n  }\n\n  /**\n   * @method\n   * @name body\n   * @returns {Observable<String>} - An Observable stream of the response body/entity contents\n   */\n  body() {\n    return evaluateLazy.call(this, _body);\n  }\n\n  /**\n   * @method\n   * @name status\n   * @returns {Number} - The HTTP status code of the response\n   */\n  status() {\n    return _status.get(this);\n  }\n\n  /**\n   * @method\n   * @name statusText\n   * @returns {String} - The status text of the response\n   */\n  statusText() {\n    return _statusText.get(this);\n  }\n\n  /**\n   * @method\n   * @name headers\n   * @param {String} [name] - The name of the header to lookup\n   * @returns {String|Object} - If name is given, returns the value of the\n   * header with the given name.  Otherwise, returns the hash containing\n   * all of the response headers\n   * @example\n   * { \"Content-Type\": \"application/json\", \"Content-Length\": \"22\" }\n   */\n  headers(name) {\n    const value = _headers.get(this);\n    if (!isUndefined(name)) {\n      const entry = Object.entries(value)\n        .find((headers) => headers[0].toLowerCase() === name.toLowerCase());\n\n      if (entry) return entry[1];\n      else return null;\n    }\n\n    return value;\n  }\n\n  /**\n   * @method\n   * @name isChunked\n   * @returns {Boolean} - Determines if this is a chunked response.  A chunked\n   * response will send each chunk through the {@link body} stream.  A non-chunked\n   * response will only push the final result through the stream.\n   */\n  isChunked() {\n    if (!_isChunked.has(this)) {\n      let transferEncoding = (this.headers(Headers.TRANSFER_ENCODING) || '').toLowerCase();\n      let isChunked = transferEncoding.indexOf('chunked') > -1 ||\n                      transferEncoding.indexOf('identity') > -1;\n      // Detect SPDY. It uses chunked transfer but doesn't set the Transfer-Encoding header.\n      if (!isChunked) {\n        let c = window.chrome;\n        let loadTimes = c && c.loadTimes && c.loadTimes();\n        let chromeSpdy = loadTimes && loadTimes.wasFetchedViaSpdy;\n        let ffSpdy = !!this.headers('X-Firefox-Spdy');\n        isChunked = ffSpdy || chromeSpdy;\n      }\n      _isChunked.set(this, isChunked);\n    }\n    return _isChunked.get(this);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/response.js","import { isObject } from 'lodash';\nimport { isFile, isFormData, isBlob } from '../utilities';\nimport Serializer from '../serializer';\n\n/**\n * @class\n * @name FormDataSerializer\n * @extends Serializer\n */\nexport default class FormDataSerializer extends Serializer {\n  /**\n   * @constructor\n   * @param {String} [contentType] - The value of the Content-Type header\n   */\n  constructor(contentType) {\n    super(contentType);\n  }\n\n  /**\n   * @method\n   * @name serialize\n   * @param {FormData|Blob|Object} value - The content to convert to a\n   * {@link FormData} value.\n   * @returns {FormData} - The {@link FormData} value to be sent to the server\n   */\n  serialize(value) {\n    if (isFormData(value)) return value;\n\n    const result = new FormData();\n\n    if (isFile(value) || isBlob(value)) {\n      result.append('file', value, value.name || 'file')\n      return result;\n    } else if (isObject(value)) {\n      Object.entries(value).forEach((entry) => {\n        if (isFile(entry[1])) result.append(entry[0], entry[1], entry[1].name);\n        else result.append(entry[0], entry[1]);\n      });\n\n      return result;\n    }\n\n    throw `${value} is not an object and cannot be converted to FormData`;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/serializers/form-data-serializer.js","import Serializer from '../serializer';\n\n/**\n * @class\n * @name JsonSerializer\n * @extends Serializer\n */\nexport default class JsonSerializer extends Serializer {\n  /**\n   * @constructor\n   * @param {String} [contentType] - The value of the Content-Type header\n   */\n  constructor(contentType) {\n    super(contentType || 'application/json');\n  }\n\n  /**\n   * @method\n   * @name serialize\n   * @param {Object|String|Number|Array|Boolean} value - The content to convert\n   * to a JSON string\n   * @returns {String} - The serialized JSON string\n   */\n  serialize(value) {\n    return JSON.stringify(value);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/serializers/json-serializer.js","import Serializer from '../serializer';\n\n/**\n * @class\n * @name TextSerializer\n * @extends Serializer\n */\nexport default class TextSerializer extends Serializer {\n  /**\n   * @constructor\n   * @param {String} [contentType] - The value of the Content-Type header\n   */\n  constructor(contentType) {\n    super(contentType || 'text/plain');\n  }\n\n  /**\n   * @method\n   * @name serialize\n   * @param value - The content to be serialized\n   * @returns {String} - The serialized string to be sent to the server\n   */\n  serialize(value) {\n    return value.toString();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/serializers/text-serializer.js","module.exports = __WEBPACK_EXTERNAL_MODULE_28__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"Cookies\",\"commonjs2\":[\"js-cookie\"],\"commonjs\":\"js-cookie\",\"amd\":\"js-cookie\"}\n// module id = 28\n// module chunks = 0"],"sourceRoot":""}